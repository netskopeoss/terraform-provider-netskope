// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"ns-npa-publisher/internal/sdk/pkg/models/shared"
)

// PutInfrastructurePublishersPublisherIDQueryParamSilent - flag to skip output except status code
type PutInfrastructurePublishersPublisherIDQueryParamSilent string

const (
	PutInfrastructurePublishersPublisherIDQueryParamSilentOne  PutInfrastructurePublishersPublisherIDQueryParamSilent = "1"
	PutInfrastructurePublishersPublisherIDQueryParamSilentZero PutInfrastructurePublishersPublisherIDQueryParamSilent = "0"
)

func (e PutInfrastructurePublishersPublisherIDQueryParamSilent) ToPointer() *PutInfrastructurePublishersPublisherIDQueryParamSilent {
	return &e
}

func (e *PutInfrastructurePublishersPublisherIDQueryParamSilent) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "1":
		fallthrough
	case "0":
		*e = PutInfrastructurePublishersPublisherIDQueryParamSilent(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutInfrastructurePublishersPublisherIDQueryParamSilent: %v", v)
	}
}

type PutInfrastructurePublishersPublisherIDRequest struct {
	// publisher id
	PublisherID         int                        `pathParam:"style=simple,explode=false,name=publisher_id"`
	PublisherPutRequest shared.PublisherPutRequest `request:"mediaType=application/json"`
	// flag to skip output except status code
	Silent *PutInfrastructurePublishersPublisherIDQueryParamSilent `queryParam:"style=form,explode=true,name=silent"`
}

func (o *PutInfrastructurePublishersPublisherIDRequest) GetPublisherID() int {
	if o == nil {
		return 0
	}
	return o.PublisherID
}

func (o *PutInfrastructurePublishersPublisherIDRequest) GetPublisherPutRequest() shared.PublisherPutRequest {
	if o == nil {
		return shared.PublisherPutRequest{}
	}
	return o.PublisherPutRequest
}

func (o *PutInfrastructurePublishersPublisherIDRequest) GetSilent() *PutInfrastructurePublishersPublisherIDQueryParamSilent {
	if o == nil {
		return nil
	}
	return o.Silent
}

type PutInfrastructurePublishersPublisherIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// successful operation
	PublisherResponse *shared.PublisherResponse
	// Invalid request
	PublishersResponse400 *shared.PublishersResponse400
}

func (o *PutInfrastructurePublishersPublisherIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PutInfrastructurePublishersPublisherIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PutInfrastructurePublishersPublisherIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PutInfrastructurePublishersPublisherIDResponse) GetPublisherResponse() *shared.PublisherResponse {
	if o == nil {
		return nil
	}
	return o.PublisherResponse
}

func (o *PutInfrastructurePublishersPublisherIDResponse) GetPublishersResponse400() *shared.PublishersResponse400 {
	if o == nil {
		return nil
	}
	return o.PublishersResponse400
}
