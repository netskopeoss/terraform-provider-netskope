// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"npa-publisher/internal/sdk/pkg/models/shared"
)

// PutInfrastructurePublishersAlertsconfigurationSilent - flag to skip output except status code:
//   - `1` - Skip response data
//   - `0` - Do not skip response data
type PutInfrastructurePublishersAlertsconfigurationSilent string

const (
	PutInfrastructurePublishersAlertsconfigurationSilentOne  PutInfrastructurePublishersAlertsconfigurationSilent = "1"
	PutInfrastructurePublishersAlertsconfigurationSilentZero PutInfrastructurePublishersAlertsconfigurationSilent = "0"
)

func (e PutInfrastructurePublishersAlertsconfigurationSilent) ToPointer() *PutInfrastructurePublishersAlertsconfigurationSilent {
	return &e
}

func (e *PutInfrastructurePublishersAlertsconfigurationSilent) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "1":
		fallthrough
	case "0":
		*e = PutInfrastructurePublishersAlertsconfigurationSilent(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutInfrastructurePublishersAlertsconfigurationSilent: %v", v)
	}
}

type PutInfrastructurePublishersAlertsconfigurationRequest struct {
	PublishersAlertPutRequest shared.PublishersAlertPutRequest `request:"mediaType=application/json"`
	// flag to skip output except status code:
	//  * `1` - Skip response data
	//  * `0` - Do not skip response data
	Silent *PutInfrastructurePublishersAlertsconfigurationSilent `queryParam:"style=form,explode=true,name=silent"`
}

func (o *PutInfrastructurePublishersAlertsconfigurationRequest) GetPublishersAlertPutRequest() shared.PublishersAlertPutRequest {
	if o == nil {
		return shared.PublishersAlertPutRequest{}
	}
	return o.PublishersAlertPutRequest
}

func (o *PutInfrastructurePublishersAlertsconfigurationRequest) GetSilent() *PutInfrastructurePublishersAlertsconfigurationSilent {
	if o == nil {
		return nil
	}
	return o.Silent
}

type PutInfrastructurePublishersAlertsconfigurationResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// successful operation
	PublishersAlertPutResponse *shared.PublishersAlertPutResponse
	// Invalid request
	PublishersResponse400 *shared.PublishersResponse400
}

func (o *PutInfrastructurePublishersAlertsconfigurationResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PutInfrastructurePublishersAlertsconfigurationResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PutInfrastructurePublishersAlertsconfigurationResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PutInfrastructurePublishersAlertsconfigurationResponse) GetPublishersAlertPutResponse() *shared.PublishersAlertPutResponse {
	if o == nil {
		return nil
	}
	return o.PublishersAlertPutResponse
}

func (o *PutInfrastructurePublishersAlertsconfigurationResponse) GetPublishersResponse400() *shared.PublishersResponse400 {
	if o == nil {
		return nil
	}
	return o.PublishersResponse400
}
