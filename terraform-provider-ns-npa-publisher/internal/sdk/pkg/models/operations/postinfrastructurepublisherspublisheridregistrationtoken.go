// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"npa-publisher/internal/sdk/pkg/models/shared"
)

type PostInfrastructurePublishersPublisherIDRegistrationTokenRequest struct {
	// publisher id
	PublisherID int `pathParam:"style=simple,explode=false,name=publisher_id"`
}

func (o *PostInfrastructurePublishersPublisherIDRegistrationTokenRequest) GetPublisherID() int {
	if o == nil {
		return 0
	}
	return o.PublisherID
}

type PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSONData struct {
	Token string `json:"token"`
}

func (o *PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSONData) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

type PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSONStatus string

const (
	PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSONStatusSuccess  PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSONStatus = "success"
	PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSONStatusNotFound PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSONStatus = "not found"
)

func (e PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSONStatus) ToPointer() *PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSONStatus {
	return &e
}

func (e *PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSONStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "not found":
		*e = PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSONStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSONStatus: %v", v)
	}
}

// PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSON - successful operation
type PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSON struct {
	Data   PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSONData   `json:"data"`
	Status PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSONStatus `json:"status"`
}

func (o *PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSON) GetData() PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSONData {
	if o == nil {
		return PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSONData{}
	}
	return o.Data
}

func (o *PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSON) GetStatus() PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSONStatus {
	if o == nil {
		return PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSONStatus("")
	}
	return o.Status
}

type PostInfrastructurePublishersPublisherIDRegistrationTokenResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// successful operation
	PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSONObject *PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSON
	// Invalid request
	PublishersResponse400 *shared.PublishersResponse400
}

func (o *PostInfrastructurePublishersPublisherIDRegistrationTokenResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PostInfrastructurePublishersPublisherIDRegistrationTokenResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PostInfrastructurePublishersPublisherIDRegistrationTokenResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PostInfrastructurePublishersPublisherIDRegistrationTokenResponse) GetPostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSONObject() *PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.PostInfrastructurePublishersPublisherIDRegistrationToken200ApplicationJSONObject
}

func (o *PostInfrastructurePublishersPublisherIDRegistrationTokenResponse) GetPublishersResponse400() *shared.PublishersResponse400 {
	if o == nil {
		return nil
	}
	return o.PublishersResponse400
}
