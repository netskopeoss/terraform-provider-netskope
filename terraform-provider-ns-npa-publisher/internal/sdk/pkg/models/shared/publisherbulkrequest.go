// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"npa-publisher/internal/sdk/pkg/utils"
)

type PublisherBulkRequestPublishersApply struct {
	UpgradeRequest *bool `default:"true" json:"upgrade_request"`
}

func (p PublisherBulkRequestPublishersApply) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PublisherBulkRequestPublishersApply) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PublisherBulkRequestPublishersApply) GetUpgradeRequest() *bool {
	if o == nil {
		return nil
	}
	return o.UpgradeRequest
}

type PublisherBulkRequestPublishers struct {
	Apply *PublisherBulkRequestPublishersApply `json:"apply,omitempty"`
	ID    []string                             `json:"id,omitempty"`
}

func (o *PublisherBulkRequestPublishers) GetApply() *PublisherBulkRequestPublishersApply {
	if o == nil {
		return nil
	}
	return o.Apply
}

func (o *PublisherBulkRequestPublishers) GetID() []string {
	if o == nil {
		return nil
	}
	return o.ID
}

type PublisherBulkRequest struct {
	Publishers *PublisherBulkRequestPublishers `json:"publishers,omitempty"`
}

func (o *PublisherBulkRequest) GetPublishers() *PublisherBulkRequestPublishers {
	if o == nil {
		return nil
	}
	return o.Publishers
}
