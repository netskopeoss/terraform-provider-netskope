// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PrivateAppsResponseData struct {
	ClientlessAccess            *bool                            `json:"clientless_access,omitempty"`
	Host                        *string                          `json:"host,omitempty"`
	ID                          *int                             `json:"id,omitempty"`
	Name                        *string                          `json:"name,omitempty"`
	Protocols                   []ProtocolResponseItem           `json:"protocols,omitempty"`
	RealHost                    *string                          `json:"real_host,omitempty"`
	ServicePublisherAssignments []ServicePublisherAssignmentItem `json:"service_publisher_assignments,omitempty"`
	Tags                        []TagItem                        `json:"tags,omitempty"`
	TrustSelfSignedCerts        *bool                            `json:"trust_self_signed_certs,omitempty"`
	UsePublisherDNS             *bool                            `json:"use_publisher_dns,omitempty"`
}

func (o *PrivateAppsResponseData) GetClientlessAccess() *bool {
	if o == nil {
		return nil
	}
	return o.ClientlessAccess
}

func (o *PrivateAppsResponseData) GetHost() *string {
	if o == nil {
		return nil
	}
	return o.Host
}

func (o *PrivateAppsResponseData) GetID() *int {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *PrivateAppsResponseData) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *PrivateAppsResponseData) GetProtocols() []ProtocolResponseItem {
	if o == nil {
		return nil
	}
	return o.Protocols
}

func (o *PrivateAppsResponseData) GetRealHost() *string {
	if o == nil {
		return nil
	}
	return o.RealHost
}

func (o *PrivateAppsResponseData) GetServicePublisherAssignments() []ServicePublisherAssignmentItem {
	if o == nil {
		return nil
	}
	return o.ServicePublisherAssignments
}

func (o *PrivateAppsResponseData) GetTags() []TagItem {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *PrivateAppsResponseData) GetTrustSelfSignedCerts() *bool {
	if o == nil {
		return nil
	}
	return o.TrustSelfSignedCerts
}

func (o *PrivateAppsResponseData) GetUsePublisherDNS() *bool {
	if o == nil {
		return nil
	}
	return o.UsePublisherDNS
}

type Status string

const (
	StatusSuccess  Status = "success"
	StatusNotFound Status = "not found"
)

func (e Status) ToPointer() *Status {
	return &e
}

func (e *Status) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "not found":
		*e = Status(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Status: %v", v)
	}
}

type PrivateAppsResponse struct {
	Data   []PrivateAppsResponseData `json:"data,omitempty"`
	Status *Status                   `json:"status,omitempty"`
}

func (o *PrivateAppsResponse) GetData() []PrivateAppsResponseData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *PrivateAppsResponse) GetStatus() *Status {
	if o == nil {
		return nil
	}
	return o.Status
}
