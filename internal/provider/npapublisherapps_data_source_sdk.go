// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"ns/internal/sdk/pkg/models/operations"
)

func (r *NPAPublisherAppsDataSourceModel) RefreshFromGetResponse(resp *operations.GetInfrastructurePublishersPublisherIDAppsResponseBody) {
	r.Data = nil
	for _, dataItem := range resp.Data {
		var data1 GetInfrastructurePublishersPublisherIDAppsData
		if dataItem.ClientlessAccess != nil {
			data1.ClientlessAccess = types.BoolValue(*dataItem.ClientlessAccess)
		} else {
			data1.ClientlessAccess = types.BoolNull()
		}
		if dataItem.Host != nil {
			data1.Host = types.StringValue(*dataItem.Host)
		} else {
			data1.Host = types.StringNull()
		}
		if dataItem.ID != nil {
			data1.ID = types.Int64Value(int64(*dataItem.ID))
		} else {
			data1.ID = types.Int64Null()
		}
		if dataItem.Name != nil {
			data1.Name = types.StringValue(*dataItem.Name)
		} else {
			data1.Name = types.StringNull()
		}
		data1.Protocols = nil
		for _, protocolsItem := range dataItem.Protocols {
			var protocols1 GetInfrastructurePublishersPublisherIDAppsProtocols
			if protocolsItem.ID != nil {
				protocols1.ID = types.Int64Value(int64(*protocolsItem.ID))
			} else {
				protocols1.ID = types.Int64Null()
			}
			if protocolsItem.Port != nil {
				protocols1.Port = types.StringValue(*protocolsItem.Port)
			} else {
				protocols1.Port = types.StringNull()
			}
			if protocolsItem.ServiceID != nil {
				protocols1.ServiceID = types.Int64Value(int64(*protocolsItem.ServiceID))
			} else {
				protocols1.ServiceID = types.Int64Null()
			}
			if protocolsItem.Transport != nil {
				protocols1.Transport = types.StringValue(*protocolsItem.Transport)
			} else {
				protocols1.Transport = types.StringNull()
			}
			data1.Protocols = append(data1.Protocols, protocols1)
		}
		if dataItem.RealHost != nil {
			data1.RealHost = types.StringValue(*dataItem.RealHost)
		} else {
			data1.RealHost = types.StringNull()
		}
		data1.ServicePublisherAssignments = nil
		for _, servicePublisherAssignmentsItem := range dataItem.ServicePublisherAssignments {
			var servicePublisherAssignments1 PostAppsPrivateServicePublisherAssignments
			if servicePublisherAssignmentsItem.Primary != nil {
				servicePublisherAssignments1.Primary = types.BoolValue(*servicePublisherAssignmentsItem.Primary)
			} else {
				servicePublisherAssignments1.Primary = types.BoolNull()
			}
			if servicePublisherAssignmentsItem.PublisherID != nil {
				servicePublisherAssignments1.PublisherID = types.Int64Value(int64(*servicePublisherAssignmentsItem.PublisherID))
			} else {
				servicePublisherAssignments1.PublisherID = types.Int64Null()
			}
			if servicePublisherAssignmentsItem.Reachability == nil {
				servicePublisherAssignments1.Reachability = nil
			} else {
				servicePublisherAssignments1.Reachability = &PostAppsPrivateReachability{}
				if servicePublisherAssignmentsItem.Reachability.ErrorCode != nil {
					servicePublisherAssignments1.Reachability.ErrorCode = types.Int64Value(int64(*servicePublisherAssignmentsItem.Reachability.ErrorCode))
				} else {
					servicePublisherAssignments1.Reachability.ErrorCode = types.Int64Null()
				}
				if servicePublisherAssignmentsItem.Reachability.ErrorString != nil {
					servicePublisherAssignments1.Reachability.ErrorString = types.StringValue(*servicePublisherAssignmentsItem.Reachability.ErrorString)
				} else {
					servicePublisherAssignments1.Reachability.ErrorString = types.StringNull()
				}
				if servicePublisherAssignmentsItem.Reachability.Reachable != nil {
					servicePublisherAssignments1.Reachability.Reachable = types.BoolValue(*servicePublisherAssignmentsItem.Reachability.Reachable)
				} else {
					servicePublisherAssignments1.Reachability.Reachable = types.BoolNull()
				}
			}
			if servicePublisherAssignmentsItem.ServiceID != nil {
				servicePublisherAssignments1.ServiceID = types.Int64Value(int64(*servicePublisherAssignmentsItem.ServiceID))
			} else {
				servicePublisherAssignments1.ServiceID = types.Int64Null()
			}
			data1.ServicePublisherAssignments = append(data1.ServicePublisherAssignments, servicePublisherAssignments1)
		}
		data1.Tags = nil
		for _, tagsItem := range dataItem.Tags {
			var tags1 PostInfrastructurePublishersTags
			if tagsItem.TagID != nil {
				tags1.TagID = types.Int64Value(int64(*tagsItem.TagID))
			} else {
				tags1.TagID = types.Int64Null()
			}
			if tagsItem.TagName != nil {
				tags1.TagName = types.StringValue(*tagsItem.TagName)
			} else {
				tags1.TagName = types.StringNull()
			}
			data1.Tags = append(data1.Tags, tags1)
		}
		if dataItem.TrustSelfSignedCerts != nil {
			data1.TrustSelfSignedCerts = types.BoolValue(*dataItem.TrustSelfSignedCerts)
		} else {
			data1.TrustSelfSignedCerts = types.BoolNull()
		}
		if dataItem.UsePublisherDNS != nil {
			data1.UsePublisherDNS = types.BoolValue(*dataItem.UsePublisherDNS)
		} else {
			data1.UsePublisherDNS = types.BoolNull()
		}
		r.Data = append(r.Data, data1)
	}
	if resp.Status != nil {
		r.Status = types.StringValue(string(*resp.Status))
	} else {
		r.Status = types.StringNull()
	}
}
