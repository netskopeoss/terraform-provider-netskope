// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	tfTypes "github.com/speakeasy/terraform-provider-terraform/internal/provider/types"
	"github.com/speakeasy/terraform-provider-terraform/internal/sdk/models/operations"
)

func (r *SCIMUserDataSourceModel) RefreshFromOperationsGetSCIMUsersByIDResponseBody(resp *operations.GetSCIMUsersByIDResponseBody) {
	if resp != nil {
		r.Active = types.BoolPointerValue(resp.Active)
		if len(r.Emails) > len(resp.Emails) {
			r.Emails = r.Emails[:len(resp.Emails)]
		}
		for emailsCount, emailsItem := range resp.Emails {
			var emails1 tfTypes.Emails
			emails1.Primary = types.BoolPointerValue(emailsItem.Primary)
			emails1.Value = types.StringPointerValue(emailsItem.Value)
			if emailsCount+1 > len(r.Emails) {
				r.Emails = append(r.Emails, emails1)
			} else {
				r.Emails[emailsCount].Primary = emails1.Primary
				r.Emails[emailsCount].Value = emails1.Value
			}
		}
		r.ExternalID = types.StringPointerValue(resp.ExternalID)
		r.ID = types.StringPointerValue(resp.ID)
		if resp.Meta == nil {
			r.Meta = nil
		} else {
			r.Meta = &tfTypes.CreateSCIMGroupsMeta{}
			r.Meta.ResourceType = types.StringPointerValue(resp.Meta.ResourceType)
		}
		if resp.Name == nil {
			r.Name = nil
		} else {
			r.Name = &tfTypes.Name{}
			r.Name.FamilyName = types.StringPointerValue(resp.Name.FamilyName)
			r.Name.GivenName = types.StringPointerValue(resp.Name.GivenName)
		}
		r.Schemas = []types.String{}
		for _, v := range resp.Schemas {
			r.Schemas = append(r.Schemas, types.StringValue(string(v)))
		}
		r.UserName = types.StringPointerValue(resp.UserName)
	}
}
