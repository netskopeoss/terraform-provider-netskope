// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	tfTypes "github.com/netskope/terraform-provider-ns/internal/provider/types"
	"github.com/netskope/terraform-provider-ns/internal/sdk/models/operations"
)

func (r *NPAPrivateAppTagsDataSourceModel) RefreshFromOperationsGetNPAPrivateAppTagData(resp *operations.GetNPAPrivateAppTagData) {
	if resp != nil {
		r.PrivateApps = []tfTypes.TagPrivateAppsResponse{}
		if len(r.PrivateApps) > len(resp.PrivateApps) {
			r.PrivateApps = r.PrivateApps[:len(resp.PrivateApps)]
		}
		for privateAppsCount, privateAppsItem := range resp.PrivateApps {
			var privateApps1 tfTypes.TagPrivateAppsResponse
			privateApps1.AllowUnauthenticatedCors = types.BoolPointerValue(privateAppsItem.AllowUnauthenticatedCors)
			privateApps1.AllowURIBypass = types.BoolPointerValue(privateAppsItem.AllowURIBypass)
			if privateAppsItem.AppID != nil {
				privateApps1.AppID = types.Int32Value(int32(*privateAppsItem.AppID))
			} else {
				privateApps1.AppID = types.Int32Null()
			}
			privateApps1.AppName = types.StringPointerValue(privateAppsItem.AppName)
			if privateAppsItem.AppOption == nil {
				privateApps1.AppOption = nil
			} else {
				privateApps1.AppOption = &tfTypes.PrivateAppsRequestAppOption{}
			}
			privateApps1.ClientlessAccess = types.BoolPointerValue(privateAppsItem.ClientlessAccess)
			privateApps1.CreatedAt = types.StringPointerValue(privateAppsItem.CreatedAt)
			privateApps1.Host = types.StringPointerValue(privateAppsItem.Host)
			if privateAppsItem.ID != nil {
				privateApps1.ID = types.Int32Value(int32(*privateAppsItem.ID))
			} else {
				privateApps1.ID = types.Int32Null()
			}
			privateApps1.IsUserPortalApp = types.BoolPointerValue(privateAppsItem.IsUserPortalApp)
			privateApps1.Name = types.StringPointerValue(privateAppsItem.Name)
			privateApps1.PrivateAppProtocol = types.StringPointerValue(privateAppsItem.PrivateAppProtocol)
			privateApps1.PublicHost = types.StringPointerValue(privateAppsItem.PublicHost)
			privateApps1.RealHost = types.StringPointerValue(privateAppsItem.RealHost)
			privateApps1.SupplementDNSForOsx = types.BoolPointerValue(privateAppsItem.SupplementDNSForOsx)
			privateApps1.TrustSelfSignedCerts = types.BoolPointerValue(privateAppsItem.TrustSelfSignedCerts)
			privateApps1.UpdatedAt = types.StringPointerValue(privateAppsItem.UpdatedAt)
			privateApps1.UribypassHeaderValue = types.StringPointerValue(privateAppsItem.UribypassHeaderValue)
			privateApps1.UsePublisherDNS = types.BoolPointerValue(privateAppsItem.UsePublisherDNS)
			if privateAppsCount+1 > len(r.PrivateApps) {
				r.PrivateApps = append(r.PrivateApps, privateApps1)
			} else {
				r.PrivateApps[privateAppsCount].AllowUnauthenticatedCors = privateApps1.AllowUnauthenticatedCors
				r.PrivateApps[privateAppsCount].AllowURIBypass = privateApps1.AllowURIBypass
				r.PrivateApps[privateAppsCount].AppID = privateApps1.AppID
				r.PrivateApps[privateAppsCount].AppName = privateApps1.AppName
				r.PrivateApps[privateAppsCount].AppOption = privateApps1.AppOption
				r.PrivateApps[privateAppsCount].ClientlessAccess = privateApps1.ClientlessAccess
				r.PrivateApps[privateAppsCount].CreatedAt = privateApps1.CreatedAt
				r.PrivateApps[privateAppsCount].Host = privateApps1.Host
				r.PrivateApps[privateAppsCount].ID = privateApps1.ID
				r.PrivateApps[privateAppsCount].IsUserPortalApp = privateApps1.IsUserPortalApp
				r.PrivateApps[privateAppsCount].Name = privateApps1.Name
				r.PrivateApps[privateAppsCount].PrivateAppProtocol = privateApps1.PrivateAppProtocol
				r.PrivateApps[privateAppsCount].PublicHost = privateApps1.PublicHost
				r.PrivateApps[privateAppsCount].RealHost = privateApps1.RealHost
				r.PrivateApps[privateAppsCount].SupplementDNSForOsx = privateApps1.SupplementDNSForOsx
				r.PrivateApps[privateAppsCount].TrustSelfSignedCerts = privateApps1.TrustSelfSignedCerts
				r.PrivateApps[privateAppsCount].UpdatedAt = privateApps1.UpdatedAt
				r.PrivateApps[privateAppsCount].UribypassHeaderValue = privateApps1.UribypassHeaderValue
				r.PrivateApps[privateAppsCount].UsePublisherDNS = privateApps1.UsePublisherDNS
			}
		}
		if resp.TagID != nil {
			r.TagID = types.Int32Value(int32(*resp.TagID))
		} else {
			r.TagID = types.Int32Null()
		}
		r.TagName = types.StringPointerValue(resp.TagName)
	}
}
