// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"context"
	"fmt"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/int64default"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/int64planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
	"github.com/netskope/terraform-provider-ns/internal/sdk"
	"github.com/netskope/terraform-provider-ns/internal/sdk/models/operations"
	"github.com/netskope/terraform-provider-ns/internal/validators"
	"strconv"
)

// Ensure provider defined types fully satisfy framework interfaces.
var _ resource.Resource = &NPAPublishersResource{}
var _ resource.ResourceWithImportState = &NPAPublishersResource{}

func NewNPAPublishersResource() resource.Resource {
	return &NPAPublishersResource{}
}

// NPAPublishersResource defines the resource implementation.
type NPAPublishersResource struct {
	client *sdk.TerraformProviderNs
}

// NPAPublishersResourceModel describes the resource data model.
type NPAPublishersResourceModel struct {
	Assessment                 types.String `tfsdk:"assessment"`
	CommonName                 types.String `tfsdk:"common_name"`
	Lbrokerconnect             types.Bool   `tfsdk:"lbrokerconnect"`
	Name                       types.String `tfsdk:"name"`
	PublisherID                types.Int64  `tfsdk:"publisher_id"`
	PublisherUpgradeProfileID  types.Int64  `tfsdk:"publisher_upgrade_profile_id"`
	PublisherUpgradeProfilesID types.Int64  `tfsdk:"publisher_upgrade_profiles_id"`
	Registered                 types.Bool   `tfsdk:"registered"`
	Status                     types.String `tfsdk:"status"`
	StitcherID                 types.Int64  `tfsdk:"stitcher_id"`
}

func (r *NPAPublishersResource) Metadata(ctx context.Context, req resource.MetadataRequest, resp *resource.MetadataResponse) {
	resp.TypeName = req.ProviderTypeName + "_npa_publishers"
}

func (r *NPAPublishersResource) Schema(ctx context.Context, req resource.SchemaRequest, resp *resource.SchemaResponse) {
	resp.Schema = schema.Schema{
		MarkdownDescription: "NPAPublishers Resource",
		Attributes: map[string]schema.Attribute{
			"assessment": schema.StringAttribute{
				Computed:    true,
				Description: `Parsed as JSON.`,
				Validators: []validator.String{
					validators.IsValidJSON(),
				},
			},
			"common_name": schema.StringAttribute{
				Computed: true,
			},
			"lbrokerconnect": schema.BoolAttribute{
				Computed:    true,
				Optional:    true,
				Default:     booldefault.StaticBool(false),
				Description: `Allow this publisher to be stitched to Local Broker. Default: false`,
			},
			"name": schema.StringAttribute{
				Required:    true,
				Description: `The name of the Publisher as seen in the UI`,
			},
			"publisher_id": schema.Int64Attribute{
				Computed:    true,
				Description: `publisher id`,
			},
			"publisher_upgrade_profile_id": schema.Int64Attribute{
				Computed: true,
			},
			"publisher_upgrade_profiles_id": schema.Int64Attribute{
				Computed: true,
				PlanModifiers: []planmodifier.Int64{
					int64planmodifier.RequiresReplaceIfConfigured(),
				},
				Optional:    true,
				Default:     int64default.StaticInt64(1),
				Description: `The ID of the upgrade profile to manage this publisher. Requires replacement if changed. ; Default: 1`,
			},
			"registered": schema.BoolAttribute{
				Computed: true,
			},
			"status": schema.StringAttribute{
				Computed:    true,
				Description: `must be one of ["connected", "not registered"]`,
				Validators: []validator.String{
					stringvalidator.OneOf(
						"connected",
						"not registered",
					),
				},
			},
			"stitcher_id": schema.Int64Attribute{
				Computed: true,
			},
		},
	}
}

func (r *NPAPublishersResource) Configure(ctx context.Context, req resource.ConfigureRequest, resp *resource.ConfigureResponse) {
	// Prevent panic if the provider has not been configured.
	if req.ProviderData == nil {
		return
	}

	client, ok := req.ProviderData.(*sdk.TerraformProviderNs)

	if !ok {
		resp.Diagnostics.AddError(
			"Unexpected Resource Configure Type",
			fmt.Sprintf("Expected *sdk.TerraformProviderNs, got: %T. Please report this issue to the provider developers.", req.ProviderData),
		)

		return
	}

	r.client = client
}

func (r *NPAPublishersResource) Create(ctx context.Context, req resource.CreateRequest, resp *resource.CreateResponse) {
	var data *NPAPublishersResourceModel
	var plan types.Object

	resp.Diagnostics.Append(req.Plan.Get(ctx, &plan)...)
	if resp.Diagnostics.HasError() {
		return
	}

	resp.Diagnostics.Append(plan.As(ctx, &data, basetypes.ObjectAsOptions{
		UnhandledNullAsEmpty:    true,
		UnhandledUnknownAsEmpty: true,
	})...)

	if resp.Diagnostics.HasError() {
		return
	}

	publisherPostRequest := *data.ToSharedPublisherPostRequest()
	request := operations.CreateNPApublishersRequest{
		PublisherPostRequest: publisherPostRequest,
	}
	res, err := r.client.NPAPublishers.Create(ctx, request)
	if err != nil {
		resp.Diagnostics.AddError("failure to invoke API", err.Error())
		if res != nil && res.RawResponse != nil {
			resp.Diagnostics.AddError("unexpected http request/response", debugResponse(res.RawResponse))
		}
		return
	}
	if res == nil {
		resp.Diagnostics.AddError("unexpected response from API", fmt.Sprintf("%v", res))
		return
	}
	if res.StatusCode != 200 {
		resp.Diagnostics.AddError(fmt.Sprintf("unexpected response from API. Got an unexpected response code %v", res.StatusCode), debugResponse(res.RawResponse))
		return
	}
	if !(res.PublisherResponse != nil && res.PublisherResponse.Data != nil) {
		resp.Diagnostics.AddError("unexpected response from API. Got an unexpected response body", debugResponse(res.RawResponse))
		return
	}
	data.RefreshFromSharedPublisherResponseData(res.PublisherResponse.Data)
	refreshPlan(ctx, plan, &data, resp.Diagnostics)
	publisherID := int(data.PublisherID.ValueInt64())
	request1 := operations.GetNPAPublisherByIDRequest{
		PublisherID: publisherID,
	}
	res1, err := r.client.NPAPublishers.Read(ctx, request1)
	if err != nil {
		resp.Diagnostics.AddError("failure to invoke API", err.Error())
		if res1 != nil && res1.RawResponse != nil {
			resp.Diagnostics.AddError("unexpected http request/response", debugResponse(res1.RawResponse))
		}
		return
	}
	if res1 == nil {
		resp.Diagnostics.AddError("unexpected response from API", fmt.Sprintf("%v", res1))
		return
	}
	if res1.StatusCode != 200 {
		resp.Diagnostics.AddError(fmt.Sprintf("unexpected response from API. Got an unexpected response code %v", res1.StatusCode), debugResponse(res1.RawResponse))
		return
	}
	if !(res1.PublisherResponse != nil && res1.PublisherResponse.Data != nil) {
		resp.Diagnostics.AddError("unexpected response from API. Got an unexpected response body", debugResponse(res1.RawResponse))
		return
	}
	data.RefreshFromSharedPublisherResponseData(res1.PublisherResponse.Data)
	refreshPlan(ctx, plan, &data, resp.Diagnostics)

	// Save updated data into Terraform state
	resp.Diagnostics.Append(resp.State.Set(ctx, &data)...)
}

func (r *NPAPublishersResource) Read(ctx context.Context, req resource.ReadRequest, resp *resource.ReadResponse) {
	var data *NPAPublishersResourceModel
	var item types.Object

	resp.Diagnostics.Append(req.State.Get(ctx, &item)...)
	if resp.Diagnostics.HasError() {
		return
	}

	resp.Diagnostics.Append(item.As(ctx, &data, basetypes.ObjectAsOptions{
		UnhandledNullAsEmpty:    true,
		UnhandledUnknownAsEmpty: true,
	})...)

	if resp.Diagnostics.HasError() {
		return
	}

	publisherID := int(data.PublisherID.ValueInt64())
	request := operations.GetNPAPublisherByIDRequest{
		PublisherID: publisherID,
	}
	res, err := r.client.NPAPublishers.Read(ctx, request)
	if err != nil {
		resp.Diagnostics.AddError("failure to invoke API", err.Error())
		if res != nil && res.RawResponse != nil {
			resp.Diagnostics.AddError("unexpected http request/response", debugResponse(res.RawResponse))
		}
		return
	}
	if res == nil {
		resp.Diagnostics.AddError("unexpected response from API", fmt.Sprintf("%v", res))
		return
	}
	if res.StatusCode == 404 {
		resp.State.RemoveResource(ctx)
		return
	}
	if res.StatusCode != 200 {
		resp.Diagnostics.AddError(fmt.Sprintf("unexpected response from API. Got an unexpected response code %v", res.StatusCode), debugResponse(res.RawResponse))
		return
	}
	if !(res.PublisherResponse != nil && res.PublisherResponse.Data != nil) {
		resp.Diagnostics.AddError("unexpected response from API. Got an unexpected response body", debugResponse(res.RawResponse))
		return
	}
	data.RefreshFromSharedPublisherResponseData(res.PublisherResponse.Data)

	// Save updated data into Terraform state
	resp.Diagnostics.Append(resp.State.Set(ctx, &data)...)
}

func (r *NPAPublishersResource) Update(ctx context.Context, req resource.UpdateRequest, resp *resource.UpdateResponse) {
	var data *NPAPublishersResourceModel
	var plan types.Object

	resp.Diagnostics.Append(req.Plan.Get(ctx, &plan)...)
	if resp.Diagnostics.HasError() {
		return
	}

	merge(ctx, req, resp, &data)
	if resp.Diagnostics.HasError() {
		return
	}

	publisherID := int(data.PublisherID.ValueInt64())
	// update.npa_publishers.silentupdate.npa_publishers.silent.enum impedance mismatch: "string" != "class"trace=["NPAPublishers#create","NPAPublishers#create.req"]
	// {"OutputLocation":"models/operations","Name":"publisher_response","Type":"class","AssociatedTypes":[],"Discriminator":null,"Output":false,"CircularReference":null,"Original":{"Name":"createNPApublishers_request","OriginalName":"createNPApublishers_request","ContextStack":[{"Type":"requestResponse","Identifier":"request","Used":false,"MustUse":false}],"Type":"class","ItemType":null,"Fields":[{"Name":"silent","OriginalName":"","Type":{"Name":"silent","OriginalName":"silent","ContextStack":[{"Type":"operationTag","Identifier":"NPAPublishers","Used":false,"MustUse":false},{"Type":"operation","Identifier":"createNPApublishers","Used":false,"MustUse":false},{"Type":"parameter","Identifier":"queryParam","Used":false,"MustUse":false}],"Type":"enum","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MaxItems":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":{"Type":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MaxItems":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Values":["1","0"],"Names":[],"Open":false},"Scope":"operations","IsComponent":false,"Truncated":false,"Comments":{"Summary":"","Description":"flag to skip output except status code","ExternalDocs":null,"ExtendedComments":{},"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"Output":false,"Extensions":{"x-speakeasy-terraform-ignore":true},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"models/operations","ResolvedModel":"createNPApublishers","EventStreamEnvelope":false,"ResponseEnvelope":false},"Comments":{"Summary":"","Description":"flag to skip output except status code","ExternalDocs":null,"ExtendedComments":{},"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"ParamType":"queryParam","Name":"silent","Serialization":"","Style":"form","Explode":true,"FieldType":{"Name":"silent","OriginalName":"silent","ContextStack":[{"Type":"operationTag","Identifier":"NPAPublishers","Used":false,"MustUse":false},{"Type":"operation","Identifier":"createNPApublishers","Used":false,"MustUse":false},{"Type":"parameter","Identifier":"queryParam","Used":false,"MustUse":false}],"Type":"enum","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MaxItems":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":{"Type":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MaxItems":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Values":["1","0"],"Names":[],"Open":false},"Scope":"operations","IsComponent":false,"Truncated":false,"Comments":{"Summary":"","Description":"flag to skip output except status code","ExternalDocs":null,"ExtendedComments":{},"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"Output":false,"Extensions":{"x-speakeasy-terraform-ignore":true},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"models/operations","ResolvedModel":"createNPApublishers","EventStreamEnvelope":false,"ResponseEnvelope":false},"Hidden":false}],"Nullable":false,"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Const":null,"Default":null,"IsAdditionalProperties":false,"ParameterIndex":0},{"Name":"publisher_post_request","OriginalName":"","Type":{"Name":"publisher_post_request","OriginalName":"publisher_post_request","ContextStack":[{"Type":"refType","Identifier":"Schemas","Used":false,"MustUse":false},{"Type":"refName","Identifier":"publisher_post_request","Used":false,"MustUse":false},{"Type":"component","Identifier":"true","Used":true,"MustUse":false}],"Type":"class","ItemType":null,"Fields":[{"Name":"name","OriginalName":"name","Type":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MaxItems":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[{}],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Comments":{"Summary":"","Description":"The name of the Publisher as seen in the UI","ExternalDocs":null,"ExtendedComments":{},"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"name"}],"Nullable":false,"Optional":false,"SerializationMethod":null,"ErrorMessage":false,"Const":null,"Default":null,"IsAdditionalProperties":false,"ParameterIndex":null},{"Name":"lbrokerconnect","OriginalName":"lbrokerconnect","Type":{"Name":"","OriginalName":"","ContextStack":[],"Type":"boolean","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MaxItems":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Comments":{"Summary":"","Description":"Allow this publisher to be stitched to Local Broker","ExternalDocs":null,"ExtendedComments":{},"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"lbrokerconnect"}],"Nullable":false,"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Const":null,"Default":{"Value":false},"IsAdditionalProperties":false,"ParameterIndex":null},{"Name":"publisher_upgrade_profiles_id","OriginalName":"publisher_upgrade_profiles_id","Type":{"Name":"","OriginalName":"","ContextStack":[],"Type":"int32","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MaxItems":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[{}],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Comments":{"Summary":"","Description":"The ID of the upgrade profile to manage this publisher","ExternalDocs":null,"ExtendedComments":{},"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Annotations":[{"Ignore":false,"FieldName":"publisher_upgrade_profiles_id"}],"Nullable":false,"Optional":true,"SerializationMethod":null,"ErrorMessage":false,"Const":null,"Default":{"Value":1},"IsAdditionalProperties":false,"ParameterIndex":null}],"Validations":{"MinItems":null,"MaxItems":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"shared","IsComponent":true,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{"x-speakeasy-entity":"NPAPublishers","x-speakeasy-entity-description":"The NPA Publisher is a software package that enables private application\nconnectivity between your data center and the Netskope cloud. It is a crucial \ncomponent of Netskope’s Private Access (NPA) solution, which provides zero-trust \nnetwork access (ZTNA) to private applications and data in hybrid IT environments.\n\nThis resource supports the creation of the Publisher objects.\n\nFeatures may require additional licensing, please work with account team to enable.\n"},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"models/shared","ResolvedModel":"publisher_post_request","EventStreamEnvelope":false,"ResponseEnvelope":false},"Comments":null,"Annotations":[{"MediaType":"application/json"}],"Nullable":false,"Optional":false,"SerializationMethod":"json","ErrorMessage":false,"Const":null,"Default":null,"IsAdditionalProperties":false,"ParameterIndex":null}],"Validations":{"MinItems":null,"MaxItems":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"operations","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"models/operations","ResolvedModel":"createNPApublishers","EventStreamEnvelope":false,"ResponseEnvelope":false},"OriginalName":"createNPApublishers_request","Extensions":{"x-speakeasy-in-get-request":true,"x-speakeasy-in-get":true,"x-speakeasy-root":true,"x-speakeasy-trace":{"NPAPublishers#create":true,"NPAPublishers#create.req":true},"x-speakeasy-entity":"NPAPublishers","x-speakeasy-param-computed":true,"x-untouched":true},"Input":false,"IsComponent":false,"Truncated":false,"EventStreamEnvelope":false,"Examples":[],"ContextStack":[{"Type":"requestResponse","Identifier":"request","Used":false,"MustUse":false}],"Enum":null,"Format":"","ItemType":null,"Scope":"operations","Validations":{"MaxItems":0,"UniqueItems":null,"MinItems":0},"ResponseEnvelope":false,"ResolvedModel":"createNPApublishers","Comments":null,"Fields":[{"Const":null,"Annotations":[{"Ignore":false,"FieldName":"assessment"}],"OriginalName":"assessment","Name":"assessment","Nullable":false,"Optional":true,"ErrorMessage":false,"Type":{"EventStreamEnvelope":false,"AssociatedTypes":[],"Output":false,"Validations":{"UniqueItems":null,"MinItems":0,"MaxItems":0},"CircularReference":null,"ResolvedModel":"","ContextStack":[],"Comments":null,"Examples":[],"ResponseEnvelope":false,"OriginalName":"","IsComponent":false,"ItemType":null,"Scope":"","Type":"any","Discriminator":null,"Fields":[],"Format":"","Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"any","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MaxItems":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{"x-speakeasy-type-override":"any"},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Extensions":{"x-speakeasy-trace":{"NPAPublishers#create.resp.assessment":true},"x-speakeasy-param-computed":true,"x-untouched":true,"x-speakeasy-param-readonly":true,"x-speakeasy-in-get":true,"x-speakeasy-type-override":"any"},"Input":false,"Truncated":false,"Enum":null,"OutputLocation":"","Name":""},"Default":null,"Comments":null,"IsAdditionalProperties":false},{"Comments":null,"ErrorMessage":false,"Optional":true,"Const":null,"Name":"common_name","Nullable":false,"Default":null,"Annotations":[{"Ignore":false,"FieldName":"common_name"}],"IsAdditionalProperties":false,"OriginalName":"common_name","Type":{"OriginalName":"","Type":"string","Format":"","CircularReference":null,"Comments":null,"ItemType":null,"Extensions":{"x-speakeasy-in-get":true,"x-speakeasy-trace":{"NPAPublishers#create.resp.common_name":true},"x-speakeasy-param-computed":true,"x-untouched":true,"x-speakeasy-param-readonly":true},"Input":false,"IsComponent":false,"Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MaxItems":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Name":"","Scope":"","ResponseEnvelope":false,"AssociatedTypes":[],"Examples":[],"Discriminator":null,"Fields":[],"Truncated":false,"Validations":{"MaxItems":0,"UniqueItems":null,"MinItems":0},"EventStreamEnvelope":false,"ResolvedModel":"","OutputLocation":"","ContextStack":[],"Enum":null,"Output":false}},{"Name":"lbrokerconnect","Nullable":false,"Default":{"Value":false},"IsAdditionalProperties":false,"ErrorMessage":false,"Type":{"CircularReference":null,"ResponseEnvelope":false,"Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"boolean","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MaxItems":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"OriginalName":"","OutputLocation":"","IsComponent":false,"Validations":{"MinItems":0,"MaxItems":0,"UniqueItems":null},"Truncated":false,"ContextStack":[],"Name":"","AssociatedTypes":[],"Format":"","Scope":"","Discriminator":null,"Output":false,"ResolvedModel":"","Input":false,"Extensions":{"x-speakeasy-trace":{"NPAPublishers#create.req.lbrokerconnect":true},"x-speakeasy-param-computed":true,"x-untouched":true,"x-speakeasy-in-get":true},"Enum":null,"Comments":null,"Examples":[],"Fields":[],"ItemType":null,"EventStreamEnvelope":false,"Type":"boolean"},"Optional":true,"Const":null,"Comments":{"ExternalDocs":null,"Summary":"","Deprecated":false,"DeprecationMessage":"","DeprecationReplacement":"","Description":"Allow this publisher to be stitched to Local Broker"},"Annotations":[{"Ignore":false,"FieldName":"lbrokerconnect"}],"OriginalName":"lbrokerconnect"},{"Name":"name","Nullable":false,"ErrorMessage":false,"OriginalName":"name","Optional":false,"Default":null,"Const":null,"Comments":{"DeprecationMessage":"","DeprecationReplacement":"","Description":"The name of the Publisher as seen in the UI","ExternalDocs":null,"Summary":"","Deprecated":false},"Annotations":[{"Ignore":false,"FieldName":"name"}],"IsAdditionalProperties":false,"Type":{"Name":"","Extensions":{"x-speakeasy-param-computed":true,"x-untouched":true,"x-speakeasy-in-get":true,"x-speakeasy-trace":{"NPAPublishers#create.req.name":true}},"Comments":null,"Input":false,"Scope":"","Type":"string","Discriminator":null,"CircularReference":null,"ResponseEnvelope":false,"Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MaxItems":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[{}],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"AssociatedTypes":[],"Output":false,"Validations":{"UniqueItems":null,"MinItems":0,"MaxItems":0},"Examples":[{}],"ItemType":null,"Enum":null,"Format":"","ResolvedModel":"","OriginalName":"","OutputLocation":"","IsComponent":false,"EventStreamEnvelope":false,"ContextStack":[],"Fields":[],"Truncated":false}},{"OriginalName":"publisher_id","Type":{"Fields":[],"Validations":{"UniqueItems":null,"MinItems":0,"MaxItems":0},"ResolvedModel":"","Discriminator":null,"Comments":{"Summary":"","Description":"publisher id","ExternalDocs":null,"ExtendedComments":{},"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"ItemType":null,"Scope":"","CircularReference":null,"ContextStack":[],"EventStreamEnvelope":false,"ResponseEnvelope":false,"AssociatedTypes":[],"Examples":[],"Format":"","OriginalName":"","Extensions":{"x-speakeasy-trace":{"NPAPublishers#create.resp.publisher_id":true},"x-speakeasy-param-computed":true,"x-untouched":true,"x-speakeasy-param-readonly":true,"x-speakeasy-in-get-request":true,"x-speakeasy-in-get":true,"x-speakeasy-name-override":"publisher_id"},"Enum":null,"Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"int32","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MaxItems":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{"x-speakeasy-name-override":"publisher_id"},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"OutputLocation":"","Name":"","Truncated":false,"IsComponent":false,"Output":false,"Type":"int32","Input":false},"Name":"publisher_id","Nullable":false,"IsAdditionalProperties":false,"Optional":true,"Default":null,"Const":null,"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"id"}],"ErrorMessage":false},{"Default":null,"Const":null,"Comments":null,"ErrorMessage":false,"OriginalName":"publisher_upgrade_profile_id","Type":{"Name":"","Enum":null,"Comments":null,"Examples":[],"Fields":[],"Format":"","EventStreamEnvelope":false,"Extensions":{"x-speakeasy-trace":{"NPAPublishers#create.resp.publisher_upgrade_profile_id":true},"x-speakeasy-param-computed":true,"x-untouched":true,"x-speakeasy-param-readonly":true,"x-speakeasy-in-get":true},"Output":false,"Validations":{"UniqueItems":null,"MinItems":0,"MaxItems":0},"Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"int32","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MaxItems":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"OutputLocation":"","AssociatedTypes":[],"Discriminator":null,"CircularReference":null,"Input":false,"IsComponent":false,"ItemType":null,"ResponseEnvelope":false,"OriginalName":"","ResolvedModel":"","ContextStack":[],"Type":"int32","Scope":"","Truncated":false},"Name":"publisher_upgrade_profile_id","IsAdditionalProperties":false,"Nullable":false,"Optional":true,"Annotations":[{"Ignore":false,"FieldName":"publisher_upgrade_profile_id"}]},{"OriginalName":"publisher_upgrade_profiles_id","Type":{"ItemType":null,"Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"int32","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MaxItems":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[{}],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Type":"int32","Examples":[{}],"CircularReference":null,"Enum":null,"Fields":[],"IsComponent":false,"Output":false,"OriginalName":"","Scope":"","EventStreamEnvelope":false,"ContextStack":[],"Extensions":{"x-speakeasy-trace":{"NPAPublishers#create.req.publisher_upgrade_profiles_id":true},"x-untouched":true,"x-speakeasy-param-force-new":true},"Discriminator":null,"ResponseEnvelope":false,"ResolvedModel":"","Name":"","Truncated":false,"AssociatedTypes":[],"Comments":null,"Format":"","Input":false,"OutputLocation":"","Validations":{"MinItems":0,"MaxItems":0,"UniqueItems":null}},"Nullable":false,"Optional":true,"Default":{"Value":1},"Comments":{"Deprecated":false,"DeprecationMessage":"","DeprecationReplacement":"","Description":"The ID of the upgrade profile to manage this publisher","ExternalDocs":null,"Summary":""},"Name":"publisher_upgrade_profiles_id","Const":null,"Annotations":[{"Ignore":false,"FieldName":"publisher_upgrade_profiles_id"}],"IsAdditionalProperties":false,"ErrorMessage":false},{"Const":null,"ErrorMessage":false,"Default":null,"Comments":null,"Annotations":[{"Ignore":false,"FieldName":"registered"}],"OriginalName":"registered","Type":{"Comments":null,"AssociatedTypes":[],"CircularReference":null,"Format":"","OutputLocation":"","ContextStack":[],"Name":"","Type":"boolean","Enum":null,"ItemType":null,"ResolvedModel":"","Fields":[],"IsComponent":false,"Output":false,"Validations":{"MinItems":0,"MaxItems":0,"UniqueItems":null},"ResponseEnvelope":false,"Extensions":{"x-speakeasy-trace":{"NPAPublishers#create.resp.registered":true},"x-speakeasy-param-computed":true,"x-untouched":true,"x-speakeasy-param-readonly":true,"x-speakeasy-in-get":true},"Discriminator":null,"Truncated":false,"Scope":"","Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"boolean","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MaxItems":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"OriginalName":"","Examples":[],"Input":false,"EventStreamEnvelope":false},"Name":"registered","Nullable":false,"Optional":true,"IsAdditionalProperties":false},{"Name":"status","Nullable":false,"Optional":true,"Comments":null,"ErrorMessage":false,"IsAdditionalProperties":false,"OriginalName":"status","Type":{"OriginalName":"status","Name":"publisher_response_status","Fields":[],"Input":false,"ResponseEnvelope":false,"Extensions":{"x-speakeasy-param-computed":true,"x-untouched":true,"x-speakeasy-param-readonly":true,"x-speakeasy-in-get":true,"x-speakeasy-trace":{"NPAPublishers#create.resp.status":true}},"ContextStack":[{"Type":"refType","Identifier":"Schemas","Used":false,"MustUse":false},{"Type":"refName","Identifier":"publisher_response","Used":true,"MustUse":false},{"Type":"property","Identifier":"data","Used":false,"MustUse":false}],"AssociatedTypes":[],"Validations":{"MinItems":0,"MaxItems":0,"UniqueItems":null},"ResolvedModel":"publisher_response","OutputLocation":"models/shared","Type":"enum","IsComponent":false,"ItemType":null,"Truncated":false,"Enum":{"Names":[],"Values":["connected","not registered"],"Type":{"ItemType":null,"Scope":"","Fields":[],"Extensions":{},"Enum":null,"Examples":[],"ResolvedModel":"","OriginalName":"","Name":"","Discriminator":null,"Validations":{"UniqueItems":null,"MinItems":null,"MaxItems":null},"Truncated":false,"Type":"string","ContextStack":[],"AssociatedTypes":[],"Comments":null,"Format":"","Input":false,"Output":false,"Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MaxItems":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"OutputLocation":"","EventStreamEnvelope":false,"ResponseEnvelope":false,"IsComponent":false,"CircularReference":null},"Open":false},"Scope":"shared","Format":"","EventStreamEnvelope":false,"CircularReference":null,"Original":{"Name":"publisher_response_status","OriginalName":"status","ContextStack":[{"Type":"refType","Identifier":"Schemas","Used":false,"MustUse":false},{"Type":"refName","Identifier":"publisher_response","Used":true,"MustUse":false},{"Type":"property","Identifier":"data","Used":false,"MustUse":false}],"Type":"enum","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MaxItems":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":{"Type":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MaxItems":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Values":["connected","not registered"],"Names":[],"Open":false},"Scope":"shared","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"models/shared","ResolvedModel":"publisher_response","EventStreamEnvelope":false,"ResponseEnvelope":false},"Comments":null,"Discriminator":null,"Examples":[],"Output":false},"Default":null,"Const":null,"Annotations":[{"Ignore":false,"FieldName":"status"}]},{"Comments":null,"Name":"stitcher_id","Optional":true,"Default":null,"Const":null,"Annotations":[{"Ignore":false,"FieldName":"stitcher_id"}],"IsAdditionalProperties":false,"ErrorMessage":false,"OriginalName":"stitcher_id","Type":{"Examples":[],"Fields":[],"ResolvedModel":"","IsComponent":false,"OriginalName":"","Format":"","Truncated":false,"EventStreamEnvelope":false,"Name":"","ItemType":null,"ResponseEnvelope":false,"Extensions":{"x-speakeasy-trace":{"NPAPublishers#create.resp.stitcher_id":true},"x-speakeasy-param-computed":true,"x-untouched":true,"x-speakeasy-param-readonly":true,"x-speakeasy-in-get":true},"Discriminator":null,"Output":false,"Scope":"","Type":"int32","AssociatedTypes":[],"Comments":null,"Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"int32","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MaxItems":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"OutputLocation":"","Enum":null,"ContextStack":[],"Input":false,"Validations":{"MinItems":0,"MaxItems":0,"UniqueItems":null},"CircularReference":null},"Nullable":false}]}
	// {"Output":false,"OriginalName":"silent","Enum":{"Type":{"Name":"","Discriminator":null,"Input":false,"ItemType":null,"OutputLocation":"","ContextStack":[],"Original":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MaxItems":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"IsComponent":false,"AssociatedTypes":[],"ResolvedModel":"","Type":"string","Examples":[],"Format":"","Output":false,"EventStreamEnvelope":false,"OriginalName":"","Enum":null,"Comments":null,"Fields":[],"Scope":"","Validations":{"MinItems":null,"MaxItems":null,"UniqueItems":null},"CircularReference":null,"ResponseEnvelope":false,"Extensions":{},"Truncated":false},"Open":false,"Names":[],"Values":["1","0"]},"Truncated":false,"Type":"enum","Format":"","ItemType":null,"CircularReference":null,"Examples":[],"Scope":"operations","Validations":{"MaxItems":null,"UniqueItems":null,"MinItems":null},"EventStreamEnvelope":false,"ResolvedModel":"updateNPAPublisherById","Fields":[],"Original":{"Name":"updateNPAPublisherById_queryParam_silent","OriginalName":"silent","ContextStack":[{"Type":"operationTag","Identifier":"NPAPublishers","Used":false,"MustUse":false},{"Type":"operation","Identifier":"updateNPAPublisherById","Used":true,"MustUse":false},{"Type":"parameter","Identifier":"queryParam","Used":true,"MustUse":false}],"Type":"enum","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MaxItems":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":{"Type":{"Name":"","OriginalName":"","ContextStack":[],"Type":"string","ItemType":null,"Fields":[],"Validations":{"MinItems":null,"MaxItems":null,"UniqueItems":null},"AssociatedTypes":[],"Enum":null,"Scope":"","IsComponent":false,"Truncated":false,"Comments":null,"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"","ResolvedModel":"","EventStreamEnvelope":false,"ResponseEnvelope":false},"Values":["1","0"],"Names":[],"Open":false},"Scope":"operations","IsComponent":false,"Truncated":false,"Comments":{"Summary":"","Description":"flag to skip output except status code","ExternalDocs":null,"ExtendedComments":{},"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Input":false,"Output":false,"Extensions":{},"Examples":[],"Format":"","Discriminator":null,"ComplexAny":false,"OutputLocation":"models/operations","ResolvedModel":"updateNPAPublisherById","EventStreamEnvelope":false,"ResponseEnvelope":false},"Input":false,"Discriminator":null,"IsComponent":false,"ResponseEnvelope":false,"OutputLocation":"models/operations","ContextStack":[{"Type":"operationTag","Identifier":"NPAPublishers","Used":false,"MustUse":false},{"Type":"operation","Identifier":"updateNPAPublisherById","Used":true,"MustUse":false},{"Type":"parameter","Identifier":"queryParam","Used":true,"MustUse":false}],"Name":"updateNPAPublisherById_queryParam_silent","AssociatedTypes":[],"Comments":{"Summary":"","Description":"flag to skip output except status code","ExternalDocs":null,"ExtendedComments":{},"Deprecated":false,"DeprecationReplacement":"","DeprecationMessage":""},"Extensions":{}}
	var silent *operations.UpdateNPAPublisherByIDQueryParamSilent
	publisherPutRequest := *data.ToSharedPublisherPutRequest()
	request := operations.UpdateNPAPublisherByIDRequest{
		PublisherID:         publisherID,
		Silent:              silent,
		PublisherPutRequest: publisherPutRequest,
	}
	res, err := r.client.NPAPublishers.Update(ctx, request)
	if err != nil {
		resp.Diagnostics.AddError("failure to invoke API", err.Error())
		if res != nil && res.RawResponse != nil {
			resp.Diagnostics.AddError("unexpected http request/response", debugResponse(res.RawResponse))
		}
		return
	}
	if res == nil {
		resp.Diagnostics.AddError("unexpected response from API", fmt.Sprintf("%v", res))
		return
	}
	if res.StatusCode != 200 {
		resp.Diagnostics.AddError(fmt.Sprintf("unexpected response from API. Got an unexpected response code %v", res.StatusCode), debugResponse(res.RawResponse))
		return
	}
	if !(res.PublisherResponse != nil && res.PublisherResponse.Data != nil) {
		resp.Diagnostics.AddError("unexpected response from API. Got an unexpected response body", debugResponse(res.RawResponse))
		return
	}
	data.RefreshFromSharedPublisherResponseData(res.PublisherResponse.Data)
	refreshPlan(ctx, plan, &data, resp.Diagnostics)
	publisherId1 := int(data.PublisherID.ValueInt64())
	request1 := operations.GetNPAPublisherByIDRequest{
		PublisherID: publisherId1,
	}
	res1, err := r.client.NPAPublishers.Read(ctx, request1)
	if err != nil {
		resp.Diagnostics.AddError("failure to invoke API", err.Error())
		if res1 != nil && res1.RawResponse != nil {
			resp.Diagnostics.AddError("unexpected http request/response", debugResponse(res1.RawResponse))
		}
		return
	}
	if res1 == nil {
		resp.Diagnostics.AddError("unexpected response from API", fmt.Sprintf("%v", res1))
		return
	}
	if res1.StatusCode != 200 {
		resp.Diagnostics.AddError(fmt.Sprintf("unexpected response from API. Got an unexpected response code %v", res1.StatusCode), debugResponse(res1.RawResponse))
		return
	}
	if !(res1.PublisherResponse != nil && res1.PublisherResponse.Data != nil) {
		resp.Diagnostics.AddError("unexpected response from API. Got an unexpected response body", debugResponse(res1.RawResponse))
		return
	}
	data.RefreshFromSharedPublisherResponseData(res1.PublisherResponse.Data)
	refreshPlan(ctx, plan, &data, resp.Diagnostics)

	// Save updated data into Terraform state
	resp.Diagnostics.Append(resp.State.Set(ctx, &data)...)
}

func (r *NPAPublishersResource) Delete(ctx context.Context, req resource.DeleteRequest, resp *resource.DeleteResponse) {
	var data *NPAPublishersResourceModel
	var item types.Object

	resp.Diagnostics.Append(req.State.Get(ctx, &item)...)
	if resp.Diagnostics.HasError() {
		return
	}

	resp.Diagnostics.Append(item.As(ctx, &data, basetypes.ObjectAsOptions{
		UnhandledNullAsEmpty:    true,
		UnhandledUnknownAsEmpty: true,
	})...)

	if resp.Diagnostics.HasError() {
		return
	}

	publisherID := int(data.PublisherID.ValueInt64())
	request := operations.DeleteNPAPublishersRequest{
		PublisherID: publisherID,
	}
	res, err := r.client.NPAPublishers.Delete(ctx, request)
	if err != nil {
		resp.Diagnostics.AddError("failure to invoke API", err.Error())
		if res != nil && res.RawResponse != nil {
			resp.Diagnostics.AddError("unexpected http request/response", debugResponse(res.RawResponse))
		}
		return
	}
	if res == nil {
		resp.Diagnostics.AddError("unexpected response from API", fmt.Sprintf("%v", res))
		return
	}
	if res.StatusCode != 200 {
		resp.Diagnostics.AddError(fmt.Sprintf("unexpected response from API. Got an unexpected response code %v", res.StatusCode), debugResponse(res.RawResponse))
		return
	}

}

func (r *NPAPublishersResource) ImportState(ctx context.Context, req resource.ImportStateRequest, resp *resource.ImportStateResponse) {
	publisherID, err := strconv.Atoi(req.ID)
	if err != nil {
		resp.Diagnostics.AddError("Invalid ID", fmt.Sprintf("ID must be an integer but was %s", req.ID))
	}

	resp.Diagnostics.Append(resp.State.SetAttribute(ctx, path.Root("publisher_id"), int64(publisherID))...)
}
