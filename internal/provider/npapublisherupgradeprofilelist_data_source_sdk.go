// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/netskope/terraform-provider-ns/internal/sdk/pkg/models/shared"
)

func (r *NPAPublisherUpgradeProfileListDataSourceModel) RefreshFromGetResponse(resp *shared.PublisherUpgradeProfileGetResponse) {
	if len(r.Data) > len(resp.Data) {
		r.Data = r.Data[:len(resp.Data)]
	}
	for dataCount, dataItem := range resp.Data {
		var data1 PublisherUpgradeProfileGetResponseData
		if dataItem.DockerTag != nil {
			data1.DockerTag = types.StringValue(*dataItem.DockerTag)
		} else {
			data1.DockerTag = types.StringNull()
		}
		if dataItem.Enabled != nil {
			data1.Enabled = types.Int64Value(int64(*dataItem.Enabled))
		} else {
			data1.Enabled = types.Int64Null()
		}
		if dataItem.Frequency != nil {
			data1.Frequency = types.StringValue(*dataItem.Frequency)
		} else {
			data1.Frequency = types.StringNull()
		}
		if dataItem.ID != nil {
			data1.ID = types.Int64Value(int64(*dataItem.ID))
		} else {
			data1.ID = types.Int64Null()
		}
		if dataItem.Name != nil {
			data1.Name = types.StringValue(*dataItem.Name)
		} else {
			data1.Name = types.StringNull()
		}
		if dataItem.ReleaseType != nil {
			data1.ReleaseType = types.StringValue(*dataItem.ReleaseType)
		} else {
			data1.ReleaseType = types.StringNull()
		}
		if dataItem.Timezone != nil {
			data1.Timezone = types.StringValue(*dataItem.Timezone)
		} else {
			data1.Timezone = types.StringNull()
		}
		if dataCount+1 > len(r.Data) {
			r.Data = append(r.Data, data1)
		} else {
			r.Data[dataCount].DockerTag = data1.DockerTag
			r.Data[dataCount].Enabled = data1.Enabled
			r.Data[dataCount].Frequency = data1.Frequency
			r.Data[dataCount].ID = data1.ID
			r.Data[dataCount].Name = data1.Name
			r.Data[dataCount].ReleaseType = data1.ReleaseType
			r.Data[dataCount].Timezone = data1.Timezone
		}
	}
	if resp.Status != nil {
		r.Status = types.StringValue(string(*resp.Status))
	} else {
		r.Status = types.StringNull()
	}
	if resp.Total != nil {
		r.Total = types.Int64Value(int64(*resp.Total))
	} else {
		r.Total = types.Int64Null()
	}
}
