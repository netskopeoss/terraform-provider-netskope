// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/netskope/terraform-provider-ns/internal/sdk/models/shared"
)

func (r *PrivateAppTagResourceModel) ToSharedTagRequest() *shared.TagRequest {
	id := new(string)
	if !r.ID.IsUnknown() && !r.ID.IsNull() {
		*id = r.ID.ValueString()
	} else {
		id = nil
	}
	var ids []string = []string{}
	for _, idsItem := range r.Ids {
		ids = append(ids, idsItem.ValueString())
	}
	var tags []shared.TagItem = []shared.TagItem{}
	for _, tagsItem := range r.Tags {
		tagID := new(int)
		if !tagsItem.TagID.IsUnknown() && !tagsItem.TagID.IsNull() {
			*tagID = int(tagsItem.TagID.ValueInt64())
		} else {
			tagID = nil
		}
		tagName := new(string)
		if !tagsItem.TagName.IsUnknown() && !tagsItem.TagName.IsNull() {
			*tagName = tagsItem.TagName.ValueString()
		} else {
			tagName = nil
		}
		tags = append(tags, shared.TagItem{
			TagID:   tagID,
			TagName: tagName,
		})
	}
	out := shared.TagRequest{
		ID:   id,
		Ids:  ids,
		Tags: tags,
	}
	return &out
}

func (r *PrivateAppTagResourceModel) RefreshFromSharedTags(resp *shared.Tags) {
	if resp.TagID != nil {
		r.TagID = types.Int64Value(int64(*resp.TagID))
	} else {
		r.TagID = types.Int64Null()
	}
	r.TagName = types.StringPointerValue(resp.TagName)
}
