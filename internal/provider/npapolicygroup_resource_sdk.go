// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/netskope/terraform-provider-ns/internal/sdk/pkg/models/operations"
)

func (r *NPAPolicyGroupResourceModel) ToCreateSDKType() *operations.PostPolicyNpaPolicygroupsRequestBody {
	groupName := new(string)
	if !r.GroupName.IsUnknown() && !r.GroupName.IsNull() {
		*groupName = r.GroupName.ValueString()
	} else {
		groupName = nil
	}
	var groupOrder *operations.PostPolicyNpaPolicygroupsGroupOrder
	if r.GroupOrder != nil {
		groupID := new(string)
		if !r.GroupOrder.GroupID.IsUnknown() && !r.GroupOrder.GroupID.IsNull() {
			*groupID = r.GroupOrder.GroupID.ValueString()
		} else {
			groupID = nil
		}
		order := new(operations.PostPolicyNpaPolicygroupsOrder)
		if !r.GroupOrder.Order.IsUnknown() && !r.GroupOrder.Order.IsNull() {
			*order = operations.PostPolicyNpaPolicygroupsOrder(r.GroupOrder.Order.ValueString())
		} else {
			order = nil
		}
		groupOrder = &operations.PostPolicyNpaPolicygroupsGroupOrder{
			GroupID: groupID,
			Order:   order,
		}
	}
	out := operations.PostPolicyNpaPolicygroupsRequestBody{
		GroupName:  groupName,
		GroupOrder: groupOrder,
	}
	return &out
}

func (r *NPAPolicyGroupResourceModel) ToGetSDKType() *operations.PostPolicyNpaPolicygroupsRequestBody {
	out := r.ToCreateSDKType()
	return out
}

func (r *NPAPolicyGroupResourceModel) ToDeleteSDKType() *operations.PostPolicyNpaPolicygroupsRequestBody {
	out := r.ToCreateSDKType()
	return out
}

func (r *NPAPolicyGroupResourceModel) RefreshFromGetResponse(resp *operations.GetPolicyNpaPolicygroupsIDData) {
	if resp.CanBeEditedDeleted != nil {
		r.CanBeEditedDeleted = types.StringValue(*resp.CanBeEditedDeleted)
	} else {
		r.CanBeEditedDeleted = types.StringNull()
	}
	if resp.GroupID != nil {
		r.GroupID = types.StringValue(*resp.GroupID)
	} else {
		r.GroupID = types.StringNull()
	}
	if resp.GroupName != nil {
		r.GroupName = types.StringValue(*resp.GroupName)
	} else {
		r.GroupName = types.StringNull()
	}
	if resp.GroupPinnedID != nil {
		r.GroupPinnedID = types.Int64Value(*resp.GroupPinnedID)
	} else {
		r.GroupPinnedID = types.Int64Null()
	}
	if resp.GroupProdID != nil {
		r.GroupProdID = types.Int64Value(*resp.GroupProdID)
	} else {
		r.GroupProdID = types.Int64Null()
	}
	if resp.GroupType != nil {
		r.GroupType = types.StringValue(*resp.GroupType)
	} else {
		r.GroupType = types.StringNull()
	}
	if resp.ModifyTime != nil {
		r.ModifyTime = types.StringValue(*resp.ModifyTime)
	} else {
		r.ModifyTime = types.StringNull()
	}
	if resp.ModifyType != nil {
		r.ModifyType = types.StringValue(*resp.ModifyType)
	} else {
		r.ModifyType = types.StringNull()
	}
}

func (r *NPAPolicyGroupResourceModel) RefreshFromCreateResponse(resp *operations.PostPolicyNpaPolicygroupsData) {
	if resp.CanBeEditedDeleted != nil {
		r.CanBeEditedDeleted = types.StringValue(*resp.CanBeEditedDeleted)
	} else {
		r.CanBeEditedDeleted = types.StringNull()
	}
	if resp.GroupID != nil {
		r.GroupID = types.StringValue(*resp.GroupID)
	} else {
		r.GroupID = types.StringNull()
	}
	if resp.GroupName != nil {
		r.GroupName = types.StringValue(*resp.GroupName)
	} else {
		r.GroupName = types.StringNull()
	}
	if resp.GroupPinnedID != nil {
		r.GroupPinnedID = types.Int64Value(*resp.GroupPinnedID)
	} else {
		r.GroupPinnedID = types.Int64Null()
	}
	if resp.GroupProdID != nil {
		r.GroupProdID = types.Int64Value(*resp.GroupProdID)
	} else {
		r.GroupProdID = types.Int64Null()
	}
	if resp.GroupType != nil {
		r.GroupType = types.StringValue(*resp.GroupType)
	} else {
		r.GroupType = types.StringNull()
	}
	if resp.ModifyTime != nil {
		r.ModifyTime = types.StringValue(*resp.ModifyTime)
	} else {
		r.ModifyTime = types.StringNull()
	}
	if resp.ModifyType != nil {
		r.ModifyType = types.StringValue(*resp.ModifyType)
	} else {
		r.ModifyType = types.StringNull()
	}
}
