// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type DeleteSCIMUsersByIDRequest struct {
	// SCIM Group ID required
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *DeleteSCIMUsersByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type DeleteSCIMUsersByIDSCIMGroupsStatus string

const (
	DeleteSCIMUsersByIDSCIMGroupsStatusFailed            DeleteSCIMUsersByIDSCIMGroupsStatus = "failed"
	DeleteSCIMUsersByIDSCIMGroupsStatusFiveHundredAndOne DeleteSCIMUsersByIDSCIMGroupsStatus = "501"
)

func (e DeleteSCIMUsersByIDSCIMGroupsStatus) ToPointer() *DeleteSCIMUsersByIDSCIMGroupsStatus {
	return &e
}

func (e *DeleteSCIMUsersByIDSCIMGroupsStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "failed":
		fallthrough
	case "501":
		*e = DeleteSCIMUsersByIDSCIMGroupsStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteSCIMUsersByIDSCIMGroupsStatus: %v", v)
	}
}

// DeleteSCIMUsersByIDSCIMGroupsResponseResponseBody - Internal error Failed
type DeleteSCIMUsersByIDSCIMGroupsResponseResponseBody struct {
	Status  *DeleteSCIMUsersByIDSCIMGroupsStatus `json:"status,omitempty"`
	Schemas *string                              `json:"schemas,omitempty"`
	Detail  *string                              `json:"detail,omitempty"`
}

func (o *DeleteSCIMUsersByIDSCIMGroupsResponseResponseBody) GetStatus() *DeleteSCIMUsersByIDSCIMGroupsStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *DeleteSCIMUsersByIDSCIMGroupsResponseResponseBody) GetSchemas() *string {
	if o == nil {
		return nil
	}
	return o.Schemas
}

func (o *DeleteSCIMUsersByIDSCIMGroupsResponseResponseBody) GetDetail() *string {
	if o == nil {
		return nil
	}
	return o.Detail
}

// DeleteSCIMUsersByIDSCIMGroupsResponseBody - Not authorized to execte the specific API.
type DeleteSCIMUsersByIDSCIMGroupsResponseBody struct {
	Message *string `json:"message,omitempty"`
}

func (o *DeleteSCIMUsersByIDSCIMGroupsResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

type DeleteSCIMUsersByIDStatus string

const (
	DeleteSCIMUsersByIDStatusFourHundred DeleteSCIMUsersByIDStatus = "400"
	DeleteSCIMUsersByIDStatusFailed      DeleteSCIMUsersByIDStatus = "failed"
)

func (e DeleteSCIMUsersByIDStatus) ToPointer() *DeleteSCIMUsersByIDStatus {
	return &e
}

func (e *DeleteSCIMUsersByIDStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "400":
		fallthrough
	case "failed":
		*e = DeleteSCIMUsersByIDStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteSCIMUsersByIDStatus: %v", v)
	}
}

// DeleteSCIMUsersByIDResponseBody - Failed
type DeleteSCIMUsersByIDResponseBody struct {
	Status      *DeleteSCIMUsersByIDStatus `json:"status,omitempty"`
	Description *string                    `json:"description,omitempty"`
	// schema of the resource
	Schemas []string `json:"schemas,omitempty"`
}

func (o *DeleteSCIMUsersByIDResponseBody) GetStatus() *DeleteSCIMUsersByIDStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *DeleteSCIMUsersByIDResponseBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *DeleteSCIMUsersByIDResponseBody) GetSchemas() []string {
	if o == nil {
		return nil
	}
	return o.Schemas
}

type DeleteSCIMUsersByIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Failed
	FourHundredApplicationJSONObject *DeleteSCIMUsersByIDResponseBody
	// Not authorized to execte the specific API.
	FourHundredAndThreeApplicationJSONObject *DeleteSCIMUsersByIDSCIMGroupsResponseBody
	// Internal error Failed
	FiveHundredAndOneApplicationJSONObject *DeleteSCIMUsersByIDSCIMGroupsResponseResponseBody
}

func (o *DeleteSCIMUsersByIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DeleteSCIMUsersByIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DeleteSCIMUsersByIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *DeleteSCIMUsersByIDResponse) GetFourHundredApplicationJSONObject() *DeleteSCIMUsersByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *DeleteSCIMUsersByIDResponse) GetFourHundredAndThreeApplicationJSONObject() *DeleteSCIMUsersByIDSCIMGroupsResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *DeleteSCIMUsersByIDResponse) GetFiveHundredAndOneApplicationJSONObject() *DeleteSCIMUsersByIDSCIMGroupsResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FiveHundredAndOneApplicationJSONObject
}
