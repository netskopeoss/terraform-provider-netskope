// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/netskope/terraform-provider-ns/internal/sdk/models/shared"
	"net/http"
)

// CreateNPAPolicyGroupsQueryParamSilent - flag to skip output except status code
type CreateNPAPolicyGroupsQueryParamSilent string

const (
	CreateNPAPolicyGroupsQueryParamSilentOne  CreateNPAPolicyGroupsQueryParamSilent = "1"
	CreateNPAPolicyGroupsQueryParamSilentZero CreateNPAPolicyGroupsQueryParamSilent = "0"
)

func (e CreateNPAPolicyGroupsQueryParamSilent) ToPointer() *CreateNPAPolicyGroupsQueryParamSilent {
	return &e
}
func (e *CreateNPAPolicyGroupsQueryParamSilent) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "1":
		fallthrough
	case "0":
		*e = CreateNPAPolicyGroupsQueryParamSilent(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNPAPolicyGroupsQueryParamSilent: %v", v)
	}
}

type CreateNPAPolicyGroupsRequest struct {
	// flag to skip output except status code
	Silent                *CreateNPAPolicyGroupsQueryParamSilent `queryParam:"style=form,explode=true,name=silent"`
	NpaPolicygroupRequest shared.NpaPolicygroupRequest           `request:"mediaType=application/json"`
}

func (o *CreateNPAPolicyGroupsRequest) GetSilent() *CreateNPAPolicyGroupsQueryParamSilent {
	if o == nil {
		return nil
	}
	return o.Silent
}

func (o *CreateNPAPolicyGroupsRequest) GetNpaPolicygroupRequest() shared.NpaPolicygroupRequest {
	if o == nil {
		return shared.NpaPolicygroupRequest{}
	}
	return o.NpaPolicygroupRequest
}

type CreateNPAPolicyGroupsStatus string

const (
	CreateNPAPolicyGroupsStatusSuccess CreateNPAPolicyGroupsStatus = "success"
	CreateNPAPolicyGroupsStatusError   CreateNPAPolicyGroupsStatus = "error"
)

func (e CreateNPAPolicyGroupsStatus) ToPointer() *CreateNPAPolicyGroupsStatus {
	return &e
}
func (e *CreateNPAPolicyGroupsStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "error":
		*e = CreateNPAPolicyGroupsStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNPAPolicyGroupsStatus: %v", v)
	}
}

type CreateNPAPolicyGroupsResponseBody struct {
	Data   *shared.NpaPolicygroupResponseItem `json:"data,omitempty"`
	Status *CreateNPAPolicyGroupsStatus       `json:"status,omitempty"`
}

func (o *CreateNPAPolicyGroupsResponseBody) GetData() *shared.NpaPolicygroupResponseItem {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *CreateNPAPolicyGroupsResponseBody) GetStatus() *CreateNPAPolicyGroupsStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

type CreateNPAPolicyGroupsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	Object      *CreateNPAPolicyGroupsResponseBody
	// Invalid request
	NpaPolicygroupResponse400 *shared.NpaPolicygroupResponse400
}

func (o *CreateNPAPolicyGroupsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateNPAPolicyGroupsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateNPAPolicyGroupsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CreateNPAPolicyGroupsResponse) GetObject() *CreateNPAPolicyGroupsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}

func (o *CreateNPAPolicyGroupsResponse) GetNpaPolicygroupResponse400() *shared.NpaPolicygroupResponse400 {
	if o == nil {
		return nil
	}
	return o.NpaPolicygroupResponse400
}
