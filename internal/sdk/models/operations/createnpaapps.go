// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy/terraform-provider-terraform/internal/sdk/models/shared"
	"net/http"
)

// CreateNPAAppsQueryParamSilent - flag to skip output except status code
type CreateNPAAppsQueryParamSilent string

const (
	CreateNPAAppsQueryParamSilentOne  CreateNPAAppsQueryParamSilent = "1"
	CreateNPAAppsQueryParamSilentZero CreateNPAAppsQueryParamSilent = "0"
)

func (e CreateNPAAppsQueryParamSilent) ToPointer() *CreateNPAAppsQueryParamSilent {
	return &e
}

func (e *CreateNPAAppsQueryParamSilent) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "1":
		fallthrough
	case "0":
		*e = CreateNPAAppsQueryParamSilent(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNPAAppsQueryParamSilent: %v", v)
	}
}

type CreateNPAAppsRequest struct {
	// flag to skip output except status code
	Silent             *CreateNPAAppsQueryParamSilent `queryParam:"style=form,explode=true,name=silent"`
	PrivateAppsRequest shared.PrivateAppsRequest      `request:"mediaType=application/json"`
}

func (o *CreateNPAAppsRequest) GetSilent() *CreateNPAAppsQueryParamSilent {
	if o == nil {
		return nil
	}
	return o.Silent
}

func (o *CreateNPAAppsRequest) GetPrivateAppsRequest() shared.PrivateAppsRequest {
	if o == nil {
		return shared.PrivateAppsRequest{}
	}
	return o.PrivateAppsRequest
}

type CreateNPAAppsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// successful operation
	PrivateAppsResponse *shared.PrivateAppsResponse
	// Invalid request
	PrivateAppsResponse400 *shared.PrivateAppsResponse400
}

func (o *CreateNPAAppsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateNPAAppsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateNPAAppsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CreateNPAAppsResponse) GetPrivateAppsResponse() *shared.PrivateAppsResponse {
	if o == nil {
		return nil
	}
	return o.PrivateAppsResponse
}

func (o *CreateNPAAppsResponse) GetPrivateAppsResponse400() *shared.PrivateAppsResponse400 {
	if o == nil {
		return nil
	}
	return o.PrivateAppsResponse400
}
