// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/netskope/terraform-provider-ns/internal/sdk/models/shared"
	"net/http"
)

type DeleteNPAPrivateAppRequest struct {
	// private apps id
	PrivateAppID int `pathParam:"style=simple,explode=false,name=private_app_id"`
}

func (o *DeleteNPAPrivateAppRequest) GetPrivateAppID() int {
	if o == nil {
		return 0
	}
	return o.PrivateAppID
}

type DeleteNPAPrivateAppStatus string

const (
	DeleteNPAPrivateAppStatusSuccess DeleteNPAPrivateAppStatus = "success"
	DeleteNPAPrivateAppStatusError   DeleteNPAPrivateAppStatus = "error"
)

func (e DeleteNPAPrivateAppStatus) ToPointer() *DeleteNPAPrivateAppStatus {
	return &e
}
func (e *DeleteNPAPrivateAppStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "error":
		*e = DeleteNPAPrivateAppStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteNPAPrivateAppStatus: %v", v)
	}
}

// DeleteNPAPrivateAppResponseBody - successful operation
type DeleteNPAPrivateAppResponseBody struct {
	Status *DeleteNPAPrivateAppStatus `json:"status,omitempty"`
}

func (o *DeleteNPAPrivateAppResponseBody) GetStatus() *DeleteNPAPrivateAppStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

type DeleteNPAPrivateAppResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// successful operation
	Object *DeleteNPAPrivateAppResponseBody
	// Invalid request
	PrivateAppsResponse400 *shared.PrivateAppsResponse400
}

func (o *DeleteNPAPrivateAppResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DeleteNPAPrivateAppResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DeleteNPAPrivateAppResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *DeleteNPAPrivateAppResponse) GetObject() *DeleteNPAPrivateAppResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}

func (o *DeleteNPAPrivateAppResponse) GetPrivateAppsResponse400() *shared.PrivateAppsResponse400 {
	if o == nil {
		return nil
	}
	return o.PrivateAppsResponse400
}
