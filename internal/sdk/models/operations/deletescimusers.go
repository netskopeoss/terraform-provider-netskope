// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type DeleteSCIMUsersRequest struct {
	// SCIM User ID required
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *DeleteSCIMUsersRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type DeleteSCIMUsersSCIMUsersStatus string

const (
	DeleteSCIMUsersSCIMUsersStatusFailed            DeleteSCIMUsersSCIMUsersStatus = "failed"
	DeleteSCIMUsersSCIMUsersStatusFiveHundredAndOne DeleteSCIMUsersSCIMUsersStatus = "501"
)

func (e DeleteSCIMUsersSCIMUsersStatus) ToPointer() *DeleteSCIMUsersSCIMUsersStatus {
	return &e
}

func (e *DeleteSCIMUsersSCIMUsersStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "failed":
		fallthrough
	case "501":
		*e = DeleteSCIMUsersSCIMUsersStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteSCIMUsersSCIMUsersStatus: %v", v)
	}
}

// DeleteSCIMUsersSCIMUsersResponseResponseBody - Internal error Failed
type DeleteSCIMUsersSCIMUsersResponseResponseBody struct {
	Status  *DeleteSCIMUsersSCIMUsersStatus `json:"status,omitempty"`
	Schemas *string                         `json:"schemas,omitempty"`
	Detail  *string                         `json:"detail,omitempty"`
}

func (o *DeleteSCIMUsersSCIMUsersResponseResponseBody) GetStatus() *DeleteSCIMUsersSCIMUsersStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *DeleteSCIMUsersSCIMUsersResponseResponseBody) GetSchemas() *string {
	if o == nil {
		return nil
	}
	return o.Schemas
}

func (o *DeleteSCIMUsersSCIMUsersResponseResponseBody) GetDetail() *string {
	if o == nil {
		return nil
	}
	return o.Detail
}

// DeleteSCIMUsersSCIMUsersResponseBody - Not authorized to execte the specific API.
type DeleteSCIMUsersSCIMUsersResponseBody struct {
	Message *string `json:"message,omitempty"`
}

func (o *DeleteSCIMUsersSCIMUsersResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

type DeleteSCIMUsersStatus string

const (
	DeleteSCIMUsersStatusFourHundred DeleteSCIMUsersStatus = "400"
	DeleteSCIMUsersStatusFailed      DeleteSCIMUsersStatus = "failed"
)

func (e DeleteSCIMUsersStatus) ToPointer() *DeleteSCIMUsersStatus {
	return &e
}

func (e *DeleteSCIMUsersStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "400":
		fallthrough
	case "failed":
		*e = DeleteSCIMUsersStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteSCIMUsersStatus: %v", v)
	}
}

// DeleteSCIMUsersResponseBody - Failed
type DeleteSCIMUsersResponseBody struct {
	Status      *DeleteSCIMUsersStatus `json:"status,omitempty"`
	Description *string                `json:"description,omitempty"`
	// schema of the resource
	Schemas []string `json:"schemas,omitempty"`
}

func (o *DeleteSCIMUsersResponseBody) GetStatus() *DeleteSCIMUsersStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *DeleteSCIMUsersResponseBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *DeleteSCIMUsersResponseBody) GetSchemas() []string {
	if o == nil {
		return nil
	}
	return o.Schemas
}

type DeleteSCIMUsersResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Failed
	FourHundredApplicationJSONObject *DeleteSCIMUsersResponseBody
	// Not authorized to execte the specific API.
	FourHundredAndThreeApplicationJSONObject *DeleteSCIMUsersSCIMUsersResponseBody
	// Internal error Failed
	FiveHundredAndOneApplicationJSONObject *DeleteSCIMUsersSCIMUsersResponseResponseBody
}

func (o *DeleteSCIMUsersResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DeleteSCIMUsersResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DeleteSCIMUsersResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *DeleteSCIMUsersResponse) GetFourHundredApplicationJSONObject() *DeleteSCIMUsersResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *DeleteSCIMUsersResponse) GetFourHundredAndThreeApplicationJSONObject() *DeleteSCIMUsersSCIMUsersResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *DeleteSCIMUsersResponse) GetFiveHundredAndOneApplicationJSONObject() *DeleteSCIMUsersSCIMUsersResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FiveHundredAndOneApplicationJSONObject
}
