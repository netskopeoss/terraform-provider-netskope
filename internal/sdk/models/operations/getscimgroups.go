// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetSCIMGroupsRequest struct {
	// key eq value pair like - displayName/externalId and pass the value to be searched for the key passed.  Example: displayName eq "sample_Group1"
	Filter     *string `queryParam:"style=form,explode=true,name=filter"`
	StartIndex *int64  `queryParam:"style=form,explode=true,name=startIndex"`
	Count      *int64  `queryParam:"style=form,explode=true,name=count"`
}

func (o *GetSCIMGroupsRequest) GetFilter() *string {
	if o == nil {
		return nil
	}
	return o.Filter
}

func (o *GetSCIMGroupsRequest) GetStartIndex() *int64 {
	if o == nil {
		return nil
	}
	return o.StartIndex
}

func (o *GetSCIMGroupsRequest) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

type GetSCIMGroupsSCIMGroupsStatus string

const (
	GetSCIMGroupsSCIMGroupsStatusFailed            GetSCIMGroupsSCIMGroupsStatus = "failed"
	GetSCIMGroupsSCIMGroupsStatusFiveHundredAndOne GetSCIMGroupsSCIMGroupsStatus = "501"
)

func (e GetSCIMGroupsSCIMGroupsStatus) ToPointer() *GetSCIMGroupsSCIMGroupsStatus {
	return &e
}

func (e *GetSCIMGroupsSCIMGroupsStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "failed":
		fallthrough
	case "501":
		*e = GetSCIMGroupsSCIMGroupsStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSCIMGroupsSCIMGroupsStatus: %v", v)
	}
}

// GetSCIMGroupsSCIMGroupsResponse501ResponseBody - Internal error Failed
type GetSCIMGroupsSCIMGroupsResponse501ResponseBody struct {
	Status  *GetSCIMGroupsSCIMGroupsStatus `json:"status,omitempty"`
	Schemas *string                        `json:"schemas,omitempty"`
	Detail  *string                        `json:"detail,omitempty"`
}

func (o *GetSCIMGroupsSCIMGroupsResponse501ResponseBody) GetStatus() *GetSCIMGroupsSCIMGroupsStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *GetSCIMGroupsSCIMGroupsResponse501ResponseBody) GetSchemas() *string {
	if o == nil {
		return nil
	}
	return o.Schemas
}

func (o *GetSCIMGroupsSCIMGroupsResponse501ResponseBody) GetDetail() *string {
	if o == nil {
		return nil
	}
	return o.Detail
}

// GetSCIMGroupsSCIMGroupsResponseResponseBody - Not authorized to execte the specific API.
type GetSCIMGroupsSCIMGroupsResponseResponseBody struct {
	Message *string `json:"message,omitempty"`
}

func (o *GetSCIMGroupsSCIMGroupsResponseResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

type GetSCIMGroupsStatus string

const (
	GetSCIMGroupsStatusFourHundred GetSCIMGroupsStatus = "400"
	GetSCIMGroupsStatusFailed      GetSCIMGroupsStatus = "failed"
)

func (e GetSCIMGroupsStatus) ToPointer() *GetSCIMGroupsStatus {
	return &e
}

func (e *GetSCIMGroupsStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "400":
		fallthrough
	case "failed":
		*e = GetSCIMGroupsStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSCIMGroupsStatus: %v", v)
	}
}

// GetSCIMGroupsSCIMGroupsResponseBody - Failed
type GetSCIMGroupsSCIMGroupsResponseBody struct {
	Status      *GetSCIMGroupsStatus `json:"status,omitempty"`
	Description *string              `json:"description,omitempty"`
	// schema of the resource
	Schemas []string `json:"schemas,omitempty"`
}

func (o *GetSCIMGroupsSCIMGroupsResponseBody) GetStatus() *GetSCIMGroupsStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *GetSCIMGroupsSCIMGroupsResponseBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *GetSCIMGroupsSCIMGroupsResponseBody) GetSchemas() []string {
	if o == nil {
		return nil
	}
	return o.Schemas
}

type GetSCIMGroupsResources struct {
	// SCIM Group ID
	ID *string `json:"id,omitempty"`
	// Display name for group.
	DisplayName *string `json:"displayName,omitempty"`
	// Optional - Scim External ID
	ExternalID *string `json:"externalId,omitempty"`
}

func (o *GetSCIMGroupsResources) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *GetSCIMGroupsResources) GetDisplayName() *string {
	if o == nil {
		return nil
	}
	return o.DisplayName
}

func (o *GetSCIMGroupsResources) GetExternalID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalID
}

// GetSCIMGroupsResponseBody - Successfull.
type GetSCIMGroupsResponseBody struct {
	// schema of the resource
	Schemas      []string                 `json:"schemas,omitempty"`
	TotalResults *int64                   `json:"totalResults,omitempty"`
	StartIndex   *int64                   `json:"startIndex,omitempty"`
	ItemsPerPage *int64                   `json:"itemsPerPage,omitempty"`
	Resources    []GetSCIMGroupsResources `json:"Resources,omitempty"`
}

func (o *GetSCIMGroupsResponseBody) GetSchemas() []string {
	if o == nil {
		return nil
	}
	return o.Schemas
}

func (o *GetSCIMGroupsResponseBody) GetTotalResults() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalResults
}

func (o *GetSCIMGroupsResponseBody) GetStartIndex() *int64 {
	if o == nil {
		return nil
	}
	return o.StartIndex
}

func (o *GetSCIMGroupsResponseBody) GetItemsPerPage() *int64 {
	if o == nil {
		return nil
	}
	return o.ItemsPerPage
}

func (o *GetSCIMGroupsResponseBody) GetResources() []GetSCIMGroupsResources {
	if o == nil {
		return nil
	}
	return o.Resources
}

type GetSCIMGroupsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Successfull.
	TwoHundredApplicationJSONObject *GetSCIMGroupsResponseBody
	// Failed
	FourHundredApplicationJSONObject *GetSCIMGroupsSCIMGroupsResponseBody
	// Not authorized to execte the specific API.
	FourHundredAndThreeApplicationJSONObject *GetSCIMGroupsSCIMGroupsResponseResponseBody
	// Internal error Failed
	FiveHundredAndOneApplicationJSONObject *GetSCIMGroupsSCIMGroupsResponse501ResponseBody
}

func (o *GetSCIMGroupsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetSCIMGroupsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetSCIMGroupsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetSCIMGroupsResponse) GetTwoHundredApplicationJSONObject() *GetSCIMGroupsResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *GetSCIMGroupsResponse) GetFourHundredApplicationJSONObject() *GetSCIMGroupsSCIMGroupsResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *GetSCIMGroupsResponse) GetFourHundredAndThreeApplicationJSONObject() *GetSCIMGroupsSCIMGroupsResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *GetSCIMGroupsResponse) GetFiveHundredAndOneApplicationJSONObject() *GetSCIMGroupsSCIMGroupsResponse501ResponseBody {
	if o == nil {
		return nil
	}
	return o.FiveHundredAndOneApplicationJSONObject
}
