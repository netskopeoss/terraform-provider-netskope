// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy/terraform-provider-terraform/internal/sdk/models/shared"
	"net/http"
)

// PatchNPAPolicyGroupsByIDQueryParamSilent - flag to skip output except status code
type PatchNPAPolicyGroupsByIDQueryParamSilent string

const (
	PatchNPAPolicyGroupsByIDQueryParamSilentOne  PatchNPAPolicyGroupsByIDQueryParamSilent = "1"
	PatchNPAPolicyGroupsByIDQueryParamSilentZero PatchNPAPolicyGroupsByIDQueryParamSilent = "0"
)

func (e PatchNPAPolicyGroupsByIDQueryParamSilent) ToPointer() *PatchNPAPolicyGroupsByIDQueryParamSilent {
	return &e
}

func (e *PatchNPAPolicyGroupsByIDQueryParamSilent) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "1":
		fallthrough
	case "0":
		*e = PatchNPAPolicyGroupsByIDQueryParamSilent(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchNPAPolicyGroupsByIDQueryParamSilent: %v", v)
	}
}

type PatchNPAPolicyGroupsByIDRequest struct {
	// policy group rule id
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// flag to skip output except status code
	Silent                *PatchNPAPolicyGroupsByIDQueryParamSilent `queryParam:"style=form,explode=true,name=silent"`
	NpaPolicygroupRequest shared.NpaPolicygroupRequest              `request:"mediaType=application/json"`
}

func (o *PatchNPAPolicyGroupsByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *PatchNPAPolicyGroupsByIDRequest) GetSilent() *PatchNPAPolicyGroupsByIDQueryParamSilent {
	if o == nil {
		return nil
	}
	return o.Silent
}

func (o *PatchNPAPolicyGroupsByIDRequest) GetNpaPolicygroupRequest() shared.NpaPolicygroupRequest {
	if o == nil {
		return shared.NpaPolicygroupRequest{}
	}
	return o.NpaPolicygroupRequest
}

// PatchNPAPolicyGroupsByIDResponseBody - successful operation
type PatchNPAPolicyGroupsByIDResponseBody struct {
	Data *shared.NpaPolicygroupResponseItem `json:"data,omitempty"`
}

func (o *PatchNPAPolicyGroupsByIDResponseBody) GetData() *shared.NpaPolicygroupResponseItem {
	if o == nil {
		return nil
	}
	return o.Data
}

type PatchNPAPolicyGroupsByIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// successful operation
	Object *PatchNPAPolicyGroupsByIDResponseBody
	// Invalid request
	NpaPolicygroupResponse400 *shared.NpaPolicygroupResponse400
}

func (o *PatchNPAPolicyGroupsByIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PatchNPAPolicyGroupsByIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PatchNPAPolicyGroupsByIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PatchNPAPolicyGroupsByIDResponse) GetObject() *PatchNPAPolicyGroupsByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}

func (o *PatchNPAPolicyGroupsByIDResponse) GetNpaPolicygroupResponse400() *shared.NpaPolicygroupResponse400 {
	if o == nil {
		return nil
	}
	return o.NpaPolicygroupResponse400
}
