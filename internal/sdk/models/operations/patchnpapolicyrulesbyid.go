// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy/terraform-provider-terraform/internal/sdk/models/shared"
	"net/http"
)

// PatchNPAPolicyRulesByIDQueryParamSilent - flag to skip output except status code
type PatchNPAPolicyRulesByIDQueryParamSilent string

const (
	PatchNPAPolicyRulesByIDQueryParamSilentOne  PatchNPAPolicyRulesByIDQueryParamSilent = "1"
	PatchNPAPolicyRulesByIDQueryParamSilentZero PatchNPAPolicyRulesByIDQueryParamSilent = "0"
)

func (e PatchNPAPolicyRulesByIDQueryParamSilent) ToPointer() *PatchNPAPolicyRulesByIDQueryParamSilent {
	return &e
}

func (e *PatchNPAPolicyRulesByIDQueryParamSilent) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "1":
		fallthrough
	case "0":
		*e = PatchNPAPolicyRulesByIDQueryParamSilent(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchNPAPolicyRulesByIDQueryParamSilent: %v", v)
	}
}

type PatchNPAPolicyRulesByIDRequest struct {
	// policy rule id
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// flag to skip output except status code
	Silent           *PatchNPAPolicyRulesByIDQueryParamSilent `queryParam:"style=form,explode=true,name=silent"`
	NpaPolicyRequest shared.NpaPolicyRequest                  `request:"mediaType=application/json"`
}

func (o *PatchNPAPolicyRulesByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *PatchNPAPolicyRulesByIDRequest) GetSilent() *PatchNPAPolicyRulesByIDQueryParamSilent {
	if o == nil {
		return nil
	}
	return o.Silent
}

func (o *PatchNPAPolicyRulesByIDRequest) GetNpaPolicyRequest() shared.NpaPolicyRequest {
	if o == nil {
		return shared.NpaPolicyRequest{}
	}
	return o.NpaPolicyRequest
}

// PatchNPAPolicyRulesByIDResponseBody - successful operation
type PatchNPAPolicyRulesByIDResponseBody struct {
	Data *shared.NpaPolicyResponseItem `json:"data,omitempty"`
}

func (o *PatchNPAPolicyRulesByIDResponseBody) GetData() *shared.NpaPolicyResponseItem {
	if o == nil {
		return nil
	}
	return o.Data
}

type PatchNPAPolicyRulesByIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// successful operation
	Object *PatchNPAPolicyRulesByIDResponseBody
	// Invalid request
	NpaPolicyResponse400 *shared.NpaPolicyResponse400
}

func (o *PatchNPAPolicyRulesByIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PatchNPAPolicyRulesByIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PatchNPAPolicyRulesByIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PatchNPAPolicyRulesByIDResponse) GetObject() *PatchNPAPolicyRulesByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}

func (o *PatchNPAPolicyRulesByIDResponse) GetNpaPolicyResponse400() *shared.NpaPolicyResponse400 {
	if o == nil {
		return nil
	}
	return o.NpaPolicyResponse400
}
