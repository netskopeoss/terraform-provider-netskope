// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type IpsecTunnelResultItemXff struct {
	Enabled *bool    `json:"enabled,omitempty"`
	Iplist  []string `json:"iplist,omitempty"`
}

func (o *IpsecTunnelResultItemXff) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *IpsecTunnelResultItemXff) GetIplist() []string {
	if o == nil {
		return nil
	}
	return o.Iplist
}

type IpsecTunnelResultItemOptions struct {
	Rekey  *bool                     `json:"rekey,omitempty"`
	Reauth *bool                     `json:"reauth,omitempty"`
	Xff    *IpsecTunnelResultItemXff `json:"xff,omitempty"`
}

func (o *IpsecTunnelResultItemOptions) GetRekey() *bool {
	if o == nil {
		return nil
	}
	return o.Rekey
}

func (o *IpsecTunnelResultItemOptions) GetReauth() *bool {
	if o == nil {
		return nil
	}
	return o.Reauth
}

func (o *IpsecTunnelResultItemOptions) GetXff() *IpsecTunnelResultItemXff {
	if o == nil {
		return nil
	}
	return o.Xff
}

type IpsecTunnelResultItem struct {
	ID            *int64                        `json:"id,omitempty"`
	Site          *string                       `json:"site,omitempty"`
	Template      *string                       `json:"template,omitempty"`
	Sourcetype    *string                       `json:"sourcetype,omitempty"`
	Notes         *string                       `json:"notes,omitempty"`
	Vendor        *string                       `json:"vendor,omitempty"`
	Encryption    *string                       `json:"encryption,omitempty"`
	Srcidentity   *string                       `json:"srcidentity,omitempty"`
	Srcipidentity *string                       `json:"srcipidentity,omitempty"`
	Pops          []IpsecTunnelPopResultItem    `json:"pops,omitempty"`
	Enabled       *bool                         `json:"enabled,omitempty"`
	Bandwidth     *int64                        `json:"bandwidth,omitempty"`
	Options       *IpsecTunnelResultItemOptions `json:"options,omitempty"`
	Version       *int64                        `json:"version,omitempty"`
}

func (o *IpsecTunnelResultItem) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *IpsecTunnelResultItem) GetSite() *string {
	if o == nil {
		return nil
	}
	return o.Site
}

func (o *IpsecTunnelResultItem) GetTemplate() *string {
	if o == nil {
		return nil
	}
	return o.Template
}

func (o *IpsecTunnelResultItem) GetSourcetype() *string {
	if o == nil {
		return nil
	}
	return o.Sourcetype
}

func (o *IpsecTunnelResultItem) GetNotes() *string {
	if o == nil {
		return nil
	}
	return o.Notes
}

func (o *IpsecTunnelResultItem) GetVendor() *string {
	if o == nil {
		return nil
	}
	return o.Vendor
}

func (o *IpsecTunnelResultItem) GetEncryption() *string {
	if o == nil {
		return nil
	}
	return o.Encryption
}

func (o *IpsecTunnelResultItem) GetSrcidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcidentity
}

func (o *IpsecTunnelResultItem) GetSrcipidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcipidentity
}

func (o *IpsecTunnelResultItem) GetPops() []IpsecTunnelPopResultItem {
	if o == nil {
		return nil
	}
	return o.Pops
}

func (o *IpsecTunnelResultItem) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *IpsecTunnelResultItem) GetBandwidth() *int64 {
	if o == nil {
		return nil
	}
	return o.Bandwidth
}

func (o *IpsecTunnelResultItem) GetOptions() *IpsecTunnelResultItemOptions {
	if o == nil {
		return nil
	}
	return o.Options
}

func (o *IpsecTunnelResultItem) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}
