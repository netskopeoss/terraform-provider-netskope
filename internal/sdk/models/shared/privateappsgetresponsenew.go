// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type PrivateAppsGetResponseNewAppOption struct {
}

type PrivateAppsGetResponseNewProtocols struct {
	CreatedAt *string `json:"created_at,omitempty"`
	ID        *int64  `json:"id,omitempty"`
	Port      *string `json:"port,omitempty"`
	ServiceID *int64  `json:"service_id,omitempty"`
	Protocol  *string `json:"transport,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}

func (o *PrivateAppsGetResponseNewProtocols) GetCreatedAt() *string {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *PrivateAppsGetResponseNewProtocols) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *PrivateAppsGetResponseNewProtocols) GetPort() *string {
	if o == nil {
		return nil
	}
	return o.Port
}

func (o *PrivateAppsGetResponseNewProtocols) GetServiceID() *int64 {
	if o == nil {
		return nil
	}
	return o.ServiceID
}

func (o *PrivateAppsGetResponseNewProtocols) GetProtocol() *string {
	if o == nil {
		return nil
	}
	return o.Protocol
}

func (o *PrivateAppsGetResponseNewProtocols) GetUpdatedAt() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

type PrivateAppsGetResponseNewReachability struct {
	ErrorCode   *int64  `json:"error_code,omitempty"`
	ErrorString *string `json:"error_string,omitempty"`
	Reachable   *bool   `json:"reachable,omitempty"`
}

func (o *PrivateAppsGetResponseNewReachability) GetErrorCode() *int64 {
	if o == nil {
		return nil
	}
	return o.ErrorCode
}

func (o *PrivateAppsGetResponseNewReachability) GetErrorString() *string {
	if o == nil {
		return nil
	}
	return o.ErrorString
}

func (o *PrivateAppsGetResponseNewReachability) GetReachable() *bool {
	if o == nil {
		return nil
	}
	return o.Reachable
}

type PrivateAppsGetResponseNewDataReachability struct {
	ErrorCode   *int64  `json:"error_code,omitempty"`
	ErrorString *string `json:"error_string,omitempty"`
	Reachable   *bool   `json:"reachable,omitempty"`
}

func (o *PrivateAppsGetResponseNewDataReachability) GetErrorCode() *int64 {
	if o == nil {
		return nil
	}
	return o.ErrorCode
}

func (o *PrivateAppsGetResponseNewDataReachability) GetErrorString() *string {
	if o == nil {
		return nil
	}
	return o.ErrorString
}

func (o *PrivateAppsGetResponseNewDataReachability) GetReachable() *bool {
	if o == nil {
		return nil
	}
	return o.Reachable
}

type PrivateAppsGetResponseNewServicePublisherAssignments struct {
	Primary       *string                                    `json:"primary,omitempty"`
	PublisherID   *int64                                     `json:"publisher_id,omitempty"`
	PublisherName *string                                    `json:"publisher_name,omitempty"`
	Reachability  *PrivateAppsGetResponseNewDataReachability `json:"reachability,omitempty"`
	ServiceID     *int64                                     `json:"service_id,omitempty"`
}

func (o *PrivateAppsGetResponseNewServicePublisherAssignments) GetPrimary() *string {
	if o == nil {
		return nil
	}
	return o.Primary
}

func (o *PrivateAppsGetResponseNewServicePublisherAssignments) GetPublisherID() *int64 {
	if o == nil {
		return nil
	}
	return o.PublisherID
}

func (o *PrivateAppsGetResponseNewServicePublisherAssignments) GetPublisherName() *string {
	if o == nil {
		return nil
	}
	return o.PublisherName
}

func (o *PrivateAppsGetResponseNewServicePublisherAssignments) GetReachability() *PrivateAppsGetResponseNewDataReachability {
	if o == nil {
		return nil
	}
	return o.Reachability
}

func (o *PrivateAppsGetResponseNewServicePublisherAssignments) GetServiceID() *int64 {
	if o == nil {
		return nil
	}
	return o.ServiceID
}

type PrivateAppsGetResponseNewTags struct {
	TagID   any     `json:"tag_id,omitempty"`
	TagName *string `json:"tag_name,omitempty"`
}

func (o *PrivateAppsGetResponseNewTags) GetTagID() any {
	if o == nil {
		return nil
	}
	return o.TagID
}

func (o *PrivateAppsGetResponseNewTags) GetTagName() *string {
	if o == nil {
		return nil
	}
	return o.TagName
}

type PrivateAppsGetResponseNewData struct {
	AllowUnauthenticatedCors    *bool                                                  `json:"allow_unauthenticated_cors,omitempty"`
	AllowURIBypass              *bool                                                  `json:"allow_uri_bypass,omitempty"`
	AppID                       *int64                                                 `json:"app_id,omitempty"`
	PrivateAppName              *string                                                `json:"app_name,omitempty"`
	AppOption                   *PrivateAppsGetResponseNewAppOption                    `json:"app_option,omitempty"`
	BypassUris                  []string                                               `json:"bypass_uris,omitempty"`
	ClientlessAccess            *bool                                                  `json:"clientless_access,omitempty"`
	PrivateAppHostname          *string                                                `json:"host,omitempty"`
	PrivateAppID                *int64                                                 `json:"id,omitempty"`
	IsUserPortalApp             *bool                                                  `json:"is_user_portal_app,omitempty"`
	ModifiedBy                  *string                                                `json:"modified_by,omitempty"`
	ModifyTime                  *string                                                `json:"modify_time,omitempty"`
	Name                        *string                                                `json:"name,omitempty"`
	Policies                    []string                                               `json:"policies,omitempty"`
	PrivateAppProtocol          *string                                                `json:"private_app_protocol,omitempty"`
	Protocols                   []PrivateAppsGetResponseNewProtocols                   `json:"protocols,omitempty"`
	PublicHost                  *string                                                `json:"public_host,omitempty"`
	Reachability                *PrivateAppsGetResponseNewReachability                 `json:"reachability,omitempty"`
	RealHost                    *string                                                `json:"real_host,omitempty"`
	ServicePublisherAssignments []PrivateAppsGetResponseNewServicePublisherAssignments `json:"service_publisher_assignments,omitempty"`
	SteeringConfigs             []string                                               `json:"steering_configs,omitempty"`
	SupplementDNSForOsx         *bool                                                  `json:"supplement_dns_for_osx,omitempty"`
	Tags                        []PrivateAppsGetResponseNewTags                        `json:"tags,omitempty"`
	TrustSelfSignedCerts        *bool                                                  `json:"trust_self_signed_certs,omitempty"`
	UribypassHeaderValue        *string                                                `json:"uribypass_header_value,omitempty"`
	UsePublisherDNS             *bool                                                  `json:"use_publisher_dns,omitempty"`
}

func (o *PrivateAppsGetResponseNewData) GetAllowUnauthenticatedCors() *bool {
	if o == nil {
		return nil
	}
	return o.AllowUnauthenticatedCors
}

func (o *PrivateAppsGetResponseNewData) GetAllowURIBypass() *bool {
	if o == nil {
		return nil
	}
	return o.AllowURIBypass
}

func (o *PrivateAppsGetResponseNewData) GetAppID() *int64 {
	if o == nil {
		return nil
	}
	return o.AppID
}

func (o *PrivateAppsGetResponseNewData) GetPrivateAppName() *string {
	if o == nil {
		return nil
	}
	return o.PrivateAppName
}

func (o *PrivateAppsGetResponseNewData) GetAppOption() *PrivateAppsGetResponseNewAppOption {
	if o == nil {
		return nil
	}
	return o.AppOption
}

func (o *PrivateAppsGetResponseNewData) GetBypassUris() []string {
	if o == nil {
		return nil
	}
	return o.BypassUris
}

func (o *PrivateAppsGetResponseNewData) GetClientlessAccess() *bool {
	if o == nil {
		return nil
	}
	return o.ClientlessAccess
}

func (o *PrivateAppsGetResponseNewData) GetPrivateAppHostname() *string {
	if o == nil {
		return nil
	}
	return o.PrivateAppHostname
}

func (o *PrivateAppsGetResponseNewData) GetPrivateAppID() *int64 {
	if o == nil {
		return nil
	}
	return o.PrivateAppID
}

func (o *PrivateAppsGetResponseNewData) GetIsUserPortalApp() *bool {
	if o == nil {
		return nil
	}
	return o.IsUserPortalApp
}

func (o *PrivateAppsGetResponseNewData) GetModifiedBy() *string {
	if o == nil {
		return nil
	}
	return o.ModifiedBy
}

func (o *PrivateAppsGetResponseNewData) GetModifyTime() *string {
	if o == nil {
		return nil
	}
	return o.ModifyTime
}

func (o *PrivateAppsGetResponseNewData) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *PrivateAppsGetResponseNewData) GetPolicies() []string {
	if o == nil {
		return nil
	}
	return o.Policies
}

func (o *PrivateAppsGetResponseNewData) GetPrivateAppProtocol() *string {
	if o == nil {
		return nil
	}
	return o.PrivateAppProtocol
}

func (o *PrivateAppsGetResponseNewData) GetProtocols() []PrivateAppsGetResponseNewProtocols {
	if o == nil {
		return nil
	}
	return o.Protocols
}

func (o *PrivateAppsGetResponseNewData) GetPublicHost() *string {
	if o == nil {
		return nil
	}
	return o.PublicHost
}

func (o *PrivateAppsGetResponseNewData) GetReachability() *PrivateAppsGetResponseNewReachability {
	if o == nil {
		return nil
	}
	return o.Reachability
}

func (o *PrivateAppsGetResponseNewData) GetRealHost() *string {
	if o == nil {
		return nil
	}
	return o.RealHost
}

func (o *PrivateAppsGetResponseNewData) GetServicePublisherAssignments() []PrivateAppsGetResponseNewServicePublisherAssignments {
	if o == nil {
		return nil
	}
	return o.ServicePublisherAssignments
}

func (o *PrivateAppsGetResponseNewData) GetSteeringConfigs() []string {
	if o == nil {
		return nil
	}
	return o.SteeringConfigs
}

func (o *PrivateAppsGetResponseNewData) GetSupplementDNSForOsx() *bool {
	if o == nil {
		return nil
	}
	return o.SupplementDNSForOsx
}

func (o *PrivateAppsGetResponseNewData) GetTags() []PrivateAppsGetResponseNewTags {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *PrivateAppsGetResponseNewData) GetTrustSelfSignedCerts() *bool {
	if o == nil {
		return nil
	}
	return o.TrustSelfSignedCerts
}

func (o *PrivateAppsGetResponseNewData) GetUribypassHeaderValue() *string {
	if o == nil {
		return nil
	}
	return o.UribypassHeaderValue
}

func (o *PrivateAppsGetResponseNewData) GetUsePublisherDNS() *bool {
	if o == nil {
		return nil
	}
	return o.UsePublisherDNS
}

type PrivateAppsGetResponseNew struct {
	Data   *PrivateAppsGetResponseNewData `json:"data,omitempty"`
	Status *string                        `json:"status,omitempty"`
}

func (o *PrivateAppsGetResponseNew) GetData() *PrivateAppsGetResponseNewData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *PrivateAppsGetResponseNew) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}
