// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type NpaPolicygroupPatchRequestOrder string

const (
	NpaPolicygroupPatchRequestOrderBefore NpaPolicygroupPatchRequestOrder = "before"
	NpaPolicygroupPatchRequestOrderAfter  NpaPolicygroupPatchRequestOrder = "after"
)

func (e NpaPolicygroupPatchRequestOrder) ToPointer() *NpaPolicygroupPatchRequestOrder {
	return &e
}
func (e *NpaPolicygroupPatchRequestOrder) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "before":
		fallthrough
	case "after":
		*e = NpaPolicygroupPatchRequestOrder(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NpaPolicygroupPatchRequestOrder: %v", v)
	}
}

type NpaPolicygroupPatchRequestGroupOrder struct {
	Order   *NpaPolicygroupPatchRequestOrder `json:"order,omitempty"`
	GroupID *string                          `json:"group_id,omitempty"`
}

func (o *NpaPolicygroupPatchRequestGroupOrder) GetOrder() *NpaPolicygroupPatchRequestOrder {
	if o == nil {
		return nil
	}
	return o.Order
}

func (o *NpaPolicygroupPatchRequestGroupOrder) GetGroupID() *string {
	if o == nil {
		return nil
	}
	return o.GroupID
}

type NpaPolicygroupPatchRequest struct {
	GroupName  *string                               `json:"group_name,omitempty"`
	GroupOrder *NpaPolicygroupPatchRequestGroupOrder `json:"group_order,omitempty"`
}

func (o *NpaPolicygroupPatchRequest) GetGroupName() *string {
	if o == nil {
		return nil
	}
	return o.GroupName
}

func (o *NpaPolicygroupPatchRequest) GetGroupOrder() *NpaPolicygroupPatchRequestGroupOrder {
	if o == nil {
		return nil
	}
	return o.GroupOrder
}
