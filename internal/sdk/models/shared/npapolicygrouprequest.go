// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type NpaPolicygroupRequestOrder string

const (
	NpaPolicygroupRequestOrderBefore NpaPolicygroupRequestOrder = "before"
	NpaPolicygroupRequestOrderAfter  NpaPolicygroupRequestOrder = "after"
)

func (e NpaPolicygroupRequestOrder) ToPointer() *NpaPolicygroupRequestOrder {
	return &e
}
func (e *NpaPolicygroupRequestOrder) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "before":
		fallthrough
	case "after":
		*e = NpaPolicygroupRequestOrder(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NpaPolicygroupRequestOrder: %v", v)
	}
}

type GroupOrder struct {
	Order   NpaPolicygroupRequestOrder `json:"order"`
	GroupID string                     `json:"group_id"`
}

func (o *GroupOrder) GetOrder() NpaPolicygroupRequestOrder {
	if o == nil {
		return NpaPolicygroupRequestOrder("")
	}
	return o.Order
}

func (o *GroupOrder) GetGroupID() string {
	if o == nil {
		return ""
	}
	return o.GroupID
}

type NpaPolicygroupRequest struct {
	GroupName  string     `json:"group_name"`
	GroupOrder GroupOrder `json:"group_order"`
}

func (o *NpaPolicygroupRequest) GetGroupName() string {
	if o == nil {
		return ""
	}
	return o.GroupName
}

func (o *NpaPolicygroupRequest) GetGroupOrder() GroupOrder {
	if o == nil {
		return GroupOrder{}
	}
	return o.GroupOrder
}
