// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PublishersAlertGetResponseEventTypes string

const (
	PublishersAlertGetResponseEventTypesUpgradeWillStart PublishersAlertGetResponseEventTypes = "UPGRADE_WILL_START"
	PublishersAlertGetResponseEventTypesUpgradeStarted   PublishersAlertGetResponseEventTypes = "UPGRADE_STARTED"
	PublishersAlertGetResponseEventTypesUpgradeSucceeded PublishersAlertGetResponseEventTypes = "UPGRADE_SUCCEEDED"
	PublishersAlertGetResponseEventTypesUpgradeFailed    PublishersAlertGetResponseEventTypes = "UPGRADE_FAILED"
	PublishersAlertGetResponseEventTypesConnectionFailed PublishersAlertGetResponseEventTypes = "CONNECTION_FAILED"
)

func (e PublishersAlertGetResponseEventTypes) ToPointer() *PublishersAlertGetResponseEventTypes {
	return &e
}
func (e *PublishersAlertGetResponseEventTypes) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UPGRADE_WILL_START":
		fallthrough
	case "UPGRADE_STARTED":
		fallthrough
	case "UPGRADE_SUCCEEDED":
		fallthrough
	case "UPGRADE_FAILED":
		fallthrough
	case "CONNECTION_FAILED":
		*e = PublishersAlertGetResponseEventTypes(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PublishersAlertGetResponseEventTypes: %v", v)
	}
}

type PublishersAlertGetResponseData struct {
	AdminUsers    []string                               `json:"adminUsers,omitempty"`
	EventTypes    []PublishersAlertGetResponseEventTypes `json:"eventTypes,omitempty"`
	SelectedUsers *string                                `json:"selectedUsers,omitempty"`
}

func (o *PublishersAlertGetResponseData) GetAdminUsers() []string {
	if o == nil {
		return nil
	}
	return o.AdminUsers
}

func (o *PublishersAlertGetResponseData) GetEventTypes() []PublishersAlertGetResponseEventTypes {
	if o == nil {
		return nil
	}
	return o.EventTypes
}

func (o *PublishersAlertGetResponseData) GetSelectedUsers() *string {
	if o == nil {
		return nil
	}
	return o.SelectedUsers
}

type PublishersAlertGetResponse struct {
	Data *PublishersAlertGetResponseData `json:"data,omitempty"`
}

func (o *PublishersAlertGetResponse) GetData() *PublishersAlertGetResponseData {
	if o == nil {
		return nil
	}
	return o.Data
}
