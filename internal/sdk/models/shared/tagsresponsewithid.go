// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TagsResponseWithIDData struct {
	// this is the private app id.
	ID   *string           `json:"id,omitempty"`
	Tags []TagResponseItem `json:"tags,omitempty"`
}

func (o *TagsResponseWithIDData) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TagsResponseWithIDData) GetTags() []TagResponseItem {
	if o == nil {
		return nil
	}
	return o.Tags
}

type TagsResponseWithIDStatus string

const (
	TagsResponseWithIDStatusSuccess  TagsResponseWithIDStatus = "success"
	TagsResponseWithIDStatusNotFound TagsResponseWithIDStatus = "not found"
)

func (e TagsResponseWithIDStatus) ToPointer() *TagsResponseWithIDStatus {
	return &e
}
func (e *TagsResponseWithIDStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "not found":
		*e = TagsResponseWithIDStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TagsResponseWithIDStatus: %v", v)
	}
}

type TagsResponseWithID struct {
	Data   *TagsResponseWithIDData   `json:"data,omitempty"`
	Status *TagsResponseWithIDStatus `json:"status,omitempty"`
}

func (o *TagsResponseWithID) GetData() *TagsResponseWithIDData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *TagsResponseWithID) GetStatus() *TagsResponseWithIDStatus {
	if o == nil {
		return nil
	}
	return o.Status
}
