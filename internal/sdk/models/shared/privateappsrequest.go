// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type PrivateAppsRequestAppOption struct {
}

// PrivateAppsRequest - Private APP request body
type PrivateAppsRequest struct {
	AllowUnauthenticatedCors *bool                        `json:"allow_unauthenticated_cors,omitempty"`
	AllowURIBypass           *bool                        `json:"allow_uri_bypass,omitempty"`
	UribypassHeaderValue     *string                      `json:"uribypass_header_value,omitempty"`
	BypassUris               []string                     `json:"bypass_uris,omitempty"`
	AppName                  *string                      `json:"app_name,omitempty"`
	AppOption                *PrivateAppsRequestAppOption `json:"app_option,omitempty"`
	ClientlessAccess         *bool                        `json:"clientless_access,omitempty"`
	PrivateAppHostname       *string                      `json:"host,omitempty"`
	IsUserPortalApp          *bool                        `json:"is_user_portal_app,omitempty"`
	Protocols                []ProtocolItem               `json:"protocols,omitempty"`
	PublisherTags            []TagItemNoID                `json:"publisher_tags,omitempty"`
	Publishers               []PublisherItem              `json:"publishers,omitempty"`
	RealHost                 *string                      `json:"real_host,omitempty"`
	Tags                     []TagItemNoID                `json:"tags,omitempty"`
	TrustSelfSignedCerts     *bool                        `json:"trust_self_signed_certs,omitempty"`
	UsePublisherDNS          *bool                        `json:"use_publisher_dns,omitempty"`
}

func (o *PrivateAppsRequest) GetAllowUnauthenticatedCors() *bool {
	if o == nil {
		return nil
	}
	return o.AllowUnauthenticatedCors
}

func (o *PrivateAppsRequest) GetAllowURIBypass() *bool {
	if o == nil {
		return nil
	}
	return o.AllowURIBypass
}

func (o *PrivateAppsRequest) GetUribypassHeaderValue() *string {
	if o == nil {
		return nil
	}
	return o.UribypassHeaderValue
}

func (o *PrivateAppsRequest) GetBypassUris() []string {
	if o == nil {
		return nil
	}
	return o.BypassUris
}

func (o *PrivateAppsRequest) GetAppName() *string {
	if o == nil {
		return nil
	}
	return o.AppName
}

func (o *PrivateAppsRequest) GetAppOption() *PrivateAppsRequestAppOption {
	if o == nil {
		return nil
	}
	return o.AppOption
}

func (o *PrivateAppsRequest) GetClientlessAccess() *bool {
	if o == nil {
		return nil
	}
	return o.ClientlessAccess
}

func (o *PrivateAppsRequest) GetPrivateAppHostname() *string {
	if o == nil {
		return nil
	}
	return o.PrivateAppHostname
}

func (o *PrivateAppsRequest) GetIsUserPortalApp() *bool {
	if o == nil {
		return nil
	}
	return o.IsUserPortalApp
}

func (o *PrivateAppsRequest) GetProtocols() []ProtocolItem {
	if o == nil {
		return nil
	}
	return o.Protocols
}

func (o *PrivateAppsRequest) GetPublisherTags() []TagItemNoID {
	if o == nil {
		return nil
	}
	return o.PublisherTags
}

func (o *PrivateAppsRequest) GetPublishers() []PublisherItem {
	if o == nil {
		return nil
	}
	return o.Publishers
}

func (o *PrivateAppsRequest) GetRealHost() *string {
	if o == nil {
		return nil
	}
	return o.RealHost
}

func (o *PrivateAppsRequest) GetTags() []TagItemNoID {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *PrivateAppsRequest) GetTrustSelfSignedCerts() *bool {
	if o == nil {
		return nil
	}
	return o.TrustSelfSignedCerts
}

func (o *PrivateAppsRequest) GetUsePublisherDNS() *bool {
	if o == nil {
		return nil
	}
	return o.UsePublisherDNS
}
