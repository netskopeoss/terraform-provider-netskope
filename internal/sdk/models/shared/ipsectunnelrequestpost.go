// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type IpsecTunnelRequestPostXff struct {
	Enable *bool    `json:"enable,omitempty"`
	Iplist []string `json:"iplist,omitempty"`
}

func (o *IpsecTunnelRequestPostXff) GetEnable() *bool {
	if o == nil {
		return nil
	}
	return o.Enable
}

func (o *IpsecTunnelRequestPostXff) GetIplist() []string {
	if o == nil {
		return nil
	}
	return o.Iplist
}

type IpsecTunnelRequestPostOptions struct {
	Rekey  *bool                      `json:"rekey,omitempty"`
	Reauth *bool                      `json:"reauth,omitempty"`
	Xff    *IpsecTunnelRequestPostXff `json:"xff,omitempty"`
}

func (o *IpsecTunnelRequestPostOptions) GetRekey() *bool {
	if o == nil {
		return nil
	}
	return o.Rekey
}

func (o *IpsecTunnelRequestPostOptions) GetReauth() *bool {
	if o == nil {
		return nil
	}
	return o.Reauth
}

func (o *IpsecTunnelRequestPostOptions) GetXff() *IpsecTunnelRequestPostXff {
	if o == nil {
		return nil
	}
	return o.Xff
}

type IpsecTunnelRequestPost struct {
	Encryption    *string                        `json:"encryption,omitempty"`
	Site          *string                        `json:"site,omitempty"`
	Srcidentity   *string                        `json:"srcidentity,omitempty"`
	Psk           *string                        `json:"psk,omitempty"`
	Srcipidentity *string                        `json:"srcipidentity,omitempty"`
	Pops          []string                       `json:"pops,omitempty"`
	Bandwidth     *int64                         `json:"bandwidth,omitempty"`
	Notes         *string                        `json:"notes,omitempty"`
	Vendor        *string                        `json:"vendor,omitempty"`
	Sourcetype    *string                        `json:"sourcetype,omitempty"`
	Template      *string                        `json:"template,omitempty"`
	Enable        *bool                          `json:"enable,omitempty"`
	Options       *IpsecTunnelRequestPostOptions `json:"options,omitempty"`
}

func (o *IpsecTunnelRequestPost) GetEncryption() *string {
	if o == nil {
		return nil
	}
	return o.Encryption
}

func (o *IpsecTunnelRequestPost) GetSite() *string {
	if o == nil {
		return nil
	}
	return o.Site
}

func (o *IpsecTunnelRequestPost) GetSrcidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcidentity
}

func (o *IpsecTunnelRequestPost) GetPsk() *string {
	if o == nil {
		return nil
	}
	return o.Psk
}

func (o *IpsecTunnelRequestPost) GetSrcipidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcipidentity
}

func (o *IpsecTunnelRequestPost) GetPops() []string {
	if o == nil {
		return nil
	}
	return o.Pops
}

func (o *IpsecTunnelRequestPost) GetBandwidth() *int64 {
	if o == nil {
		return nil
	}
	return o.Bandwidth
}

func (o *IpsecTunnelRequestPost) GetNotes() *string {
	if o == nil {
		return nil
	}
	return o.Notes
}

func (o *IpsecTunnelRequestPost) GetVendor() *string {
	if o == nil {
		return nil
	}
	return o.Vendor
}

func (o *IpsecTunnelRequestPost) GetSourcetype() *string {
	if o == nil {
		return nil
	}
	return o.Sourcetype
}

func (o *IpsecTunnelRequestPost) GetTemplate() *string {
	if o == nil {
		return nil
	}
	return o.Template
}

func (o *IpsecTunnelRequestPost) GetEnable() *bool {
	if o == nil {
		return nil
	}
	return o.Enable
}

func (o *IpsecTunnelRequestPost) GetOptions() *IpsecTunnelRequestPostOptions {
	if o == nil {
		return nil
	}
	return o.Options
}
