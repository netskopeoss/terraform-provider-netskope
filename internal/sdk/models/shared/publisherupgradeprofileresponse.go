// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/netskope/terraform-provider-ns/internal/sdk/internal/utils"
)

type PublisherUpgradeProfileResponseData struct {
	CreatedAt                 *string `json:"created_at,omitempty"`
	DockerTag                 *string `json:"docker_tag,omitempty"`
	Enabled                   *bool   `json:"enabled,omitempty"`
	Frequency                 *string `json:"frequency,omitempty"`
	PublisherUpgradeProfileID *int    `json:"id,omitempty"`
	Name                      *string `json:"name,omitempty"`
	NextUpdateTime            *int    `json:"next_update_time,omitempty"`
	NumAssociatedPublisher    *int    `default:"0" json:"num_associated_publisher"`
	ReleaseType               *string `json:"release_type,omitempty"`
	Timezone                  *string `json:"timezone,omitempty"`
	UpdatedAt                 *string `json:"updated_at,omitempty"`
	UpgradingStage            *int    `json:"upgrading_stage,omitempty"`
	WillStart                 *bool   `json:"will_start,omitempty"`
}

func (p PublisherUpgradeProfileResponseData) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PublisherUpgradeProfileResponseData) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PublisherUpgradeProfileResponseData) GetCreatedAt() *string {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *PublisherUpgradeProfileResponseData) GetDockerTag() *string {
	if o == nil {
		return nil
	}
	return o.DockerTag
}

func (o *PublisherUpgradeProfileResponseData) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *PublisherUpgradeProfileResponseData) GetFrequency() *string {
	if o == nil {
		return nil
	}
	return o.Frequency
}

func (o *PublisherUpgradeProfileResponseData) GetPublisherUpgradeProfileID() *int {
	if o == nil {
		return nil
	}
	return o.PublisherUpgradeProfileID
}

func (o *PublisherUpgradeProfileResponseData) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *PublisherUpgradeProfileResponseData) GetNextUpdateTime() *int {
	if o == nil {
		return nil
	}
	return o.NextUpdateTime
}

func (o *PublisherUpgradeProfileResponseData) GetNumAssociatedPublisher() *int {
	if o == nil {
		return nil
	}
	return o.NumAssociatedPublisher
}

func (o *PublisherUpgradeProfileResponseData) GetReleaseType() *string {
	if o == nil {
		return nil
	}
	return o.ReleaseType
}

func (o *PublisherUpgradeProfileResponseData) GetTimezone() *string {
	if o == nil {
		return nil
	}
	return o.Timezone
}

func (o *PublisherUpgradeProfileResponseData) GetUpdatedAt() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *PublisherUpgradeProfileResponseData) GetUpgradingStage() *int {
	if o == nil {
		return nil
	}
	return o.UpgradingStage
}

func (o *PublisherUpgradeProfileResponseData) GetWillStart() *bool {
	if o == nil {
		return nil
	}
	return o.WillStart
}

type PublisherUpgradeProfileResponse struct {
	Data *PublisherUpgradeProfileResponseData `json:"data,omitempty"`
}

func (o *PublisherUpgradeProfileResponse) GetData() *PublisherUpgradeProfileResponseData {
	if o == nil {
		return nil
	}
	return o.Data
}
