// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type AppOption struct {
}

type Protocols struct {
	CreatedAt *string `json:"created_at,omitempty"`
	ID        *int64  `json:"id,omitempty"`
	Port      *string `json:"port,omitempty"`
	ServiceID *int64  `json:"service_id,omitempty"`
	Protocol  *string `json:"transport,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}

func (o *Protocols) GetCreatedAt() *string {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *Protocols) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Protocols) GetPort() *string {
	if o == nil {
		return nil
	}
	return o.Port
}

func (o *Protocols) GetServiceID() *int64 {
	if o == nil {
		return nil
	}
	return o.ServiceID
}

func (o *Protocols) GetProtocol() *string {
	if o == nil {
		return nil
	}
	return o.Protocol
}

func (o *Protocols) GetUpdatedAt() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

type Reachability struct {
	ErrorCode   *int64  `json:"error_code,omitempty"`
	ErrorString *string `json:"error_string,omitempty"`
	Reachable   *bool   `json:"reachable,omitempty"`
}

func (o *Reachability) GetErrorCode() *int64 {
	if o == nil {
		return nil
	}
	return o.ErrorCode
}

func (o *Reachability) GetErrorString() *string {
	if o == nil {
		return nil
	}
	return o.ErrorString
}

func (o *Reachability) GetReachable() *bool {
	if o == nil {
		return nil
	}
	return o.Reachable
}

type PrivateAppsItemReachability struct {
	ErrorCode   *int64  `json:"error_code,omitempty"`
	ErrorString *string `json:"error_string,omitempty"`
	Reachable   *bool   `json:"reachable,omitempty"`
}

func (o *PrivateAppsItemReachability) GetErrorCode() *int64 {
	if o == nil {
		return nil
	}
	return o.ErrorCode
}

func (o *PrivateAppsItemReachability) GetErrorString() *string {
	if o == nil {
		return nil
	}
	return o.ErrorString
}

func (o *PrivateAppsItemReachability) GetReachable() *bool {
	if o == nil {
		return nil
	}
	return o.Reachable
}

type ServicePublisherAssignments struct {
	Primary       *string                      `json:"primary,omitempty"`
	PublisherID   *int64                       `json:"publisher_id,omitempty"`
	PublisherName *string                      `json:"publisher_name,omitempty"`
	Reachability  *PrivateAppsItemReachability `json:"reachability,omitempty"`
	ServiceID     *int64                       `json:"service_id,omitempty"`
}

func (o *ServicePublisherAssignments) GetPrimary() *string {
	if o == nil {
		return nil
	}
	return o.Primary
}

func (o *ServicePublisherAssignments) GetPublisherID() *int64 {
	if o == nil {
		return nil
	}
	return o.PublisherID
}

func (o *ServicePublisherAssignments) GetPublisherName() *string {
	if o == nil {
		return nil
	}
	return o.PublisherName
}

func (o *ServicePublisherAssignments) GetReachability() *PrivateAppsItemReachability {
	if o == nil {
		return nil
	}
	return o.Reachability
}

func (o *ServicePublisherAssignments) GetServiceID() *int64 {
	if o == nil {
		return nil
	}
	return o.ServiceID
}

type Tags struct {
	TagID   any     `json:"tag_id,omitempty"`
	TagName *string `json:"tag_name,omitempty"`
}

func (o *Tags) GetTagID() any {
	if o == nil {
		return nil
	}
	return o.TagID
}

func (o *Tags) GetTagName() *string {
	if o == nil {
		return nil
	}
	return o.TagName
}

type PrivateAppsItem struct {
	AllowUnauthenticatedCors    *bool                         `json:"allow_unauthenticated_cors,omitempty"`
	AllowURIBypass              *bool                         `json:"allow_uri_bypass,omitempty"`
	PrivateAppID                *int                          `json:"app_id,omitempty"`
	PrivateAppName              *string                       `json:"app_name,omitempty"`
	AppOption                   *AppOption                    `json:"app_option,omitempty"`
	BypassUris                  []string                      `json:"bypass_uris,omitempty"`
	ClientlessAccess            *bool                         `json:"clientless_access,omitempty"`
	PrivateAppHostname          *string                       `json:"host,omitempty"`
	ID                          *int64                        `json:"id,omitempty"`
	IsUserPortalApp             *bool                         `json:"is_user_portal_app,omitempty"`
	ModifiedBy                  *string                       `json:"modified_by,omitempty"`
	ModifyTime                  *string                       `json:"modify_time,omitempty"`
	Policies                    []string                      `json:"policies,omitempty"`
	PrivateAppProtocol          *string                       `json:"private_app_protocol,omitempty"`
	Protocols                   []Protocols                   `json:"protocols,omitempty"`
	PublicHost                  *string                       `json:"public_host,omitempty"`
	Reachability                *Reachability                 `json:"reachability,omitempty"`
	RealHost                    *string                       `json:"real_host,omitempty"`
	ServicePublisherAssignments []ServicePublisherAssignments `json:"service_publisher_assignments,omitempty"`
	SteeringConfigs             []string                      `json:"steering_configs,omitempty"`
	SupplementDNSForOsx         *bool                         `json:"supplement_dns_for_osx,omitempty"`
	Tags                        []Tags                        `json:"tags,omitempty"`
	TrustSelfSignedCerts        *bool                         `json:"trust_self_signed_certs,omitempty"`
	UribypassHeaderValue        *string                       `json:"uribypass_header_value,omitempty"`
	UsePublisherDNS             *bool                         `json:"use_publisher_dns,omitempty"`
}

func (o *PrivateAppsItem) GetAllowUnauthenticatedCors() *bool {
	if o == nil {
		return nil
	}
	return o.AllowUnauthenticatedCors
}

func (o *PrivateAppsItem) GetAllowURIBypass() *bool {
	if o == nil {
		return nil
	}
	return o.AllowURIBypass
}

func (o *PrivateAppsItem) GetPrivateAppID() *int {
	if o == nil {
		return nil
	}
	return o.PrivateAppID
}

func (o *PrivateAppsItem) GetPrivateAppName() *string {
	if o == nil {
		return nil
	}
	return o.PrivateAppName
}

func (o *PrivateAppsItem) GetAppOption() *AppOption {
	if o == nil {
		return nil
	}
	return o.AppOption
}

func (o *PrivateAppsItem) GetBypassUris() []string {
	if o == nil {
		return nil
	}
	return o.BypassUris
}

func (o *PrivateAppsItem) GetClientlessAccess() *bool {
	if o == nil {
		return nil
	}
	return o.ClientlessAccess
}

func (o *PrivateAppsItem) GetPrivateAppHostname() *string {
	if o == nil {
		return nil
	}
	return o.PrivateAppHostname
}

func (o *PrivateAppsItem) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *PrivateAppsItem) GetIsUserPortalApp() *bool {
	if o == nil {
		return nil
	}
	return o.IsUserPortalApp
}

func (o *PrivateAppsItem) GetModifiedBy() *string {
	if o == nil {
		return nil
	}
	return o.ModifiedBy
}

func (o *PrivateAppsItem) GetModifyTime() *string {
	if o == nil {
		return nil
	}
	return o.ModifyTime
}

func (o *PrivateAppsItem) GetPolicies() []string {
	if o == nil {
		return nil
	}
	return o.Policies
}

func (o *PrivateAppsItem) GetPrivateAppProtocol() *string {
	if o == nil {
		return nil
	}
	return o.PrivateAppProtocol
}

func (o *PrivateAppsItem) GetProtocols() []Protocols {
	if o == nil {
		return nil
	}
	return o.Protocols
}

func (o *PrivateAppsItem) GetPublicHost() *string {
	if o == nil {
		return nil
	}
	return o.PublicHost
}

func (o *PrivateAppsItem) GetReachability() *Reachability {
	if o == nil {
		return nil
	}
	return o.Reachability
}

func (o *PrivateAppsItem) GetRealHost() *string {
	if o == nil {
		return nil
	}
	return o.RealHost
}

func (o *PrivateAppsItem) GetServicePublisherAssignments() []ServicePublisherAssignments {
	if o == nil {
		return nil
	}
	return o.ServicePublisherAssignments
}

func (o *PrivateAppsItem) GetSteeringConfigs() []string {
	if o == nil {
		return nil
	}
	return o.SteeringConfigs
}

func (o *PrivateAppsItem) GetSupplementDNSForOsx() *bool {
	if o == nil {
		return nil
	}
	return o.SupplementDNSForOsx
}

func (o *PrivateAppsItem) GetTags() []Tags {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *PrivateAppsItem) GetTrustSelfSignedCerts() *bool {
	if o == nil {
		return nil
	}
	return o.TrustSelfSignedCerts
}

func (o *PrivateAppsItem) GetUribypassHeaderValue() *string {
	if o == nil {
		return nil
	}
	return o.UribypassHeaderValue
}

func (o *PrivateAppsItem) GetUsePublisherDNS() *bool {
	if o == nil {
		return nil
	}
	return o.UsePublisherDNS
}
