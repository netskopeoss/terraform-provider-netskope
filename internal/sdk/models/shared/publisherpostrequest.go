// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/netskope/terraform-provider-ns/internal/sdk/internal/utils"
)

// PublisherPostRequest - The NPA Publisher is a software package that enables private application
// connectivity between your data center and the Netskope cloud. It is a crucial
// component of Netskopeâ€™s Private Access (NPA) solution, which provides zero-trust
// network access (ZTNA) to private applications and data in hybrid IT environments.
type PublisherPostRequest struct {
	Name                       string `json:"name"`
	Lbrokerconnect             *bool  `default:"false" json:"lbrokerconnect"`
	PublisherUpgradeProfilesID *int   `default:"1" json:"publisher_upgrade_profiles_id"`
}

func (p PublisherPostRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PublisherPostRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PublisherPostRequest) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *PublisherPostRequest) GetLbrokerconnect() *bool {
	if o == nil {
		return nil
	}
	return o.Lbrokerconnect
}

func (o *PublisherPostRequest) GetPublisherUpgradeProfilesID() *int {
	if o == nil {
		return nil
	}
	return o.PublisherUpgradeProfilesID
}
