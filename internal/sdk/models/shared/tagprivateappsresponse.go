// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type TagPrivateAppsResponseAppOption struct {
}

type TagPrivateAppsResponse struct {
	AllowUnauthenticatedCors *bool                            `json:"allow_unauthenticated_cors,omitempty"`
	AllowURIBypass           *bool                            `json:"allow_uri_bypass,omitempty"`
	UribypassHeaderValue     *string                          `json:"uribypass_header_value,omitempty"`
	AppOption                *TagPrivateAppsResponseAppOption `json:"app_option,omitempty"`
	ClientlessAccess         *bool                            `json:"clientless_access,omitempty"`
	Host                     *string                          `json:"host,omitempty"`
	ID                       *int                             `json:"id,omitempty"`
	Name                     *string                          `json:"name,omitempty"`
	IsUserPortalApp          *bool                            `json:"is_user_portal_app,omitempty"`
	AppName                  *string                          `json:"app_name,omitempty"`
	AppID                    *int                             `json:"app_id,omitempty"`
	RealHost                 *string                          `json:"real_host,omitempty"`
	TrustSelfSignedCerts     *bool                            `json:"trust_self_signed_certs,omitempty"`
	UsePublisherDNS          *bool                            `json:"use_publisher_dns,omitempty"`
	SupplementDNSForOsx      *bool                            `json:"supplement_dns_for_osx,omitempty"`
	PublicHost               *string                          `json:"public_host,omitempty"`
	PrivateAppProtocol       *string                          `json:"private_app_protocol,omitempty"`
	UpdatedAt                *string                          `json:"updated_at,omitempty"`
	CreatedAt                *string                          `json:"created_at,omitempty"`
}

func (o *TagPrivateAppsResponse) GetAllowUnauthenticatedCors() *bool {
	if o == nil {
		return nil
	}
	return o.AllowUnauthenticatedCors
}

func (o *TagPrivateAppsResponse) GetAllowURIBypass() *bool {
	if o == nil {
		return nil
	}
	return o.AllowURIBypass
}

func (o *TagPrivateAppsResponse) GetUribypassHeaderValue() *string {
	if o == nil {
		return nil
	}
	return o.UribypassHeaderValue
}

func (o *TagPrivateAppsResponse) GetAppOption() *TagPrivateAppsResponseAppOption {
	if o == nil {
		return nil
	}
	return o.AppOption
}

func (o *TagPrivateAppsResponse) GetClientlessAccess() *bool {
	if o == nil {
		return nil
	}
	return o.ClientlessAccess
}

func (o *TagPrivateAppsResponse) GetHost() *string {
	if o == nil {
		return nil
	}
	return o.Host
}

func (o *TagPrivateAppsResponse) GetID() *int {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *TagPrivateAppsResponse) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *TagPrivateAppsResponse) GetIsUserPortalApp() *bool {
	if o == nil {
		return nil
	}
	return o.IsUserPortalApp
}

func (o *TagPrivateAppsResponse) GetAppName() *string {
	if o == nil {
		return nil
	}
	return o.AppName
}

func (o *TagPrivateAppsResponse) GetAppID() *int {
	if o == nil {
		return nil
	}
	return o.AppID
}

func (o *TagPrivateAppsResponse) GetRealHost() *string {
	if o == nil {
		return nil
	}
	return o.RealHost
}

func (o *TagPrivateAppsResponse) GetTrustSelfSignedCerts() *bool {
	if o == nil {
		return nil
	}
	return o.TrustSelfSignedCerts
}

func (o *TagPrivateAppsResponse) GetUsePublisherDNS() *bool {
	if o == nil {
		return nil
	}
	return o.UsePublisherDNS
}

func (o *TagPrivateAppsResponse) GetSupplementDNSForOsx() *bool {
	if o == nil {
		return nil
	}
	return o.SupplementDNSForOsx
}

func (o *TagPrivateAppsResponse) GetPublicHost() *string {
	if o == nil {
		return nil
	}
	return o.PublicHost
}

func (o *TagPrivateAppsResponse) GetPrivateAppProtocol() *string {
	if o == nil {
		return nil
	}
	return o.PrivateAppProtocol
}

func (o *TagPrivateAppsResponse) GetUpdatedAt() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *TagPrivateAppsResponse) GetCreatedAt() *string {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}
