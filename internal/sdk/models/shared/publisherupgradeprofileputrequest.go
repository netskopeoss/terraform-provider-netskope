// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PublisherUpgradeProfilePutRequestReleaseType - This is the Release Type that is to be installed. \
// Release Type for releases can be obtained from: \
// `api/v2/infrastructure/publishers/releases`
type PublisherUpgradeProfilePutRequestReleaseType string

const (
	PublisherUpgradeProfilePutRequestReleaseTypeBeta    PublisherUpgradeProfilePutRequestReleaseType = "Beta"
	PublisherUpgradeProfilePutRequestReleaseTypeLatest  PublisherUpgradeProfilePutRequestReleaseType = "Latest"
	PublisherUpgradeProfilePutRequestReleaseTypeLatest1 PublisherUpgradeProfilePutRequestReleaseType = "Latest-1"
	PublisherUpgradeProfilePutRequestReleaseTypeLatest2 PublisherUpgradeProfilePutRequestReleaseType = "Latest-2"
)

func (e PublisherUpgradeProfilePutRequestReleaseType) ToPointer() *PublisherUpgradeProfilePutRequestReleaseType {
	return &e
}
func (e *PublisherUpgradeProfilePutRequestReleaseType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Beta":
		fallthrough
	case "Latest":
		fallthrough
	case "Latest-1":
		fallthrough
	case "Latest-2":
		*e = PublisherUpgradeProfilePutRequestReleaseType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PublisherUpgradeProfilePutRequestReleaseType: %v", v)
	}
}

// PublisherUpgradeProfilePutRequestTimezone - The timezone for which the upgrade triggers. \
// Please vew enum values for acceptable values.
type PublisherUpgradeProfilePutRequestTimezone string

const (
	PublisherUpgradeProfilePutRequestTimezoneAfricaCairo                 PublisherUpgradeProfilePutRequestTimezone = "Africa/Cairo"
	PublisherUpgradeProfilePutRequestTimezoneAfricaCasablanca            PublisherUpgradeProfilePutRequestTimezone = "Africa/Casablanca"
	PublisherUpgradeProfilePutRequestTimezoneAfricaJohannesburg          PublisherUpgradeProfilePutRequestTimezone = "Africa/Johannesburg"
	PublisherUpgradeProfilePutRequestTimezoneAfricaNairobi               PublisherUpgradeProfilePutRequestTimezone = "Africa/Nairobi"
	PublisherUpgradeProfilePutRequestTimezoneAmericaArgentinaBuenosAires PublisherUpgradeProfilePutRequestTimezone = "America/Argentina/Buenos_Aires"
	PublisherUpgradeProfilePutRequestTimezoneAmericaCaracas              PublisherUpgradeProfilePutRequestTimezone = "America/Caracas"
	PublisherUpgradeProfilePutRequestTimezoneAmericaGodthab              PublisherUpgradeProfilePutRequestTimezone = "America/Godthab"
	PublisherUpgradeProfilePutRequestTimezoneAmericaLima                 PublisherUpgradeProfilePutRequestTimezone = "America/Lima"
	PublisherUpgradeProfilePutRequestTimezoneAmericaMazatlan             PublisherUpgradeProfilePutRequestTimezone = "America/Mazatlan"
	PublisherUpgradeProfilePutRequestTimezoneAmericaSantiago             PublisherUpgradeProfilePutRequestTimezone = "America/Santiago"
	PublisherUpgradeProfilePutRequestTimezoneAmericaTijuana              PublisherUpgradeProfilePutRequestTimezone = "America/Tijuana"
	PublisherUpgradeProfilePutRequestTimezoneAsiaAlmaty                  PublisherUpgradeProfilePutRequestTimezone = "Asia/Almaty"
	PublisherUpgradeProfilePutRequestTimezoneAsiaBaghdad                 PublisherUpgradeProfilePutRequestTimezone = "Asia/Baghdad"
	PublisherUpgradeProfilePutRequestTimezoneAsiaBaku                    PublisherUpgradeProfilePutRequestTimezone = "Asia/Baku"
	PublisherUpgradeProfilePutRequestTimezoneAsiaCalcutta                PublisherUpgradeProfilePutRequestTimezone = "Asia/Calcutta"
	PublisherUpgradeProfilePutRequestTimezoneAsiaDhaka                   PublisherUpgradeProfilePutRequestTimezone = "Asia/Dhaka"
	PublisherUpgradeProfilePutRequestTimezoneAsiaHarbin                  PublisherUpgradeProfilePutRequestTimezone = "Asia/Harbin"
	PublisherUpgradeProfilePutRequestTimezoneAsiaJakarta                 PublisherUpgradeProfilePutRequestTimezone = "Asia/Jakarta"
	PublisherUpgradeProfilePutRequestTimezoneAsiaJerusalem               PublisherUpgradeProfilePutRequestTimezone = "Asia/Jerusalem"
	PublisherUpgradeProfilePutRequestTimezoneAsiaKabul                   PublisherUpgradeProfilePutRequestTimezone = "Asia/Kabul"
	PublisherUpgradeProfilePutRequestTimezoneAsiaKarachi                 PublisherUpgradeProfilePutRequestTimezone = "Asia/Karachi"
	PublisherUpgradeProfilePutRequestTimezoneAsiaKathmandu               PublisherUpgradeProfilePutRequestTimezone = "Asia/Kathmandu"
	PublisherUpgradeProfilePutRequestTimezoneAsiaKrasnoyarsk             PublisherUpgradeProfilePutRequestTimezone = "Asia/Krasnoyarsk"
	PublisherUpgradeProfilePutRequestTimezoneAsiaKualaLumpur             PublisherUpgradeProfilePutRequestTimezone = "Asia/Kuala_Lumpur"
	PublisherUpgradeProfilePutRequestTimezoneAsiaMuscat                  PublisherUpgradeProfilePutRequestTimezone = "Asia/Muscat"
	PublisherUpgradeProfilePutRequestTimezoneAsiaRangoon                 PublisherUpgradeProfilePutRequestTimezone = "Asia/Rangoon"
	PublisherUpgradeProfilePutRequestTimezoneAsiaTaipei                  PublisherUpgradeProfilePutRequestTimezone = "Asia/Taipei"
	PublisherUpgradeProfilePutRequestTimezoneAsiaTehran                  PublisherUpgradeProfilePutRequestTimezone = "Asia/Tehran"
	PublisherUpgradeProfilePutRequestTimezoneAsiaVladivostok             PublisherUpgradeProfilePutRequestTimezone = "Asia/Vladivostok"
	PublisherUpgradeProfilePutRequestTimezoneAsiaYakutsk                 PublisherUpgradeProfilePutRequestTimezone = "Asia/Yakutsk"
	PublisherUpgradeProfilePutRequestTimezoneAsiaYerevan                 PublisherUpgradeProfilePutRequestTimezone = "Asia/Yerevan"
	PublisherUpgradeProfilePutRequestTimezoneAtlanticAzores              PublisherUpgradeProfilePutRequestTimezone = "Atlantic/Azores"
	PublisherUpgradeProfilePutRequestTimezoneAtlanticCapeVerde           PublisherUpgradeProfilePutRequestTimezone = "Atlantic/Cape_Verde"
	PublisherUpgradeProfilePutRequestTimezoneAustraliaAdelaide           PublisherUpgradeProfilePutRequestTimezone = "Australia/Adelaide"
	PublisherUpgradeProfilePutRequestTimezoneAustraliaBrisbane           PublisherUpgradeProfilePutRequestTimezone = "Australia/Brisbane"
	PublisherUpgradeProfilePutRequestTimezoneAustraliaDarwin             PublisherUpgradeProfilePutRequestTimezone = "Australia/Darwin"
	PublisherUpgradeProfilePutRequestTimezoneAustraliaHobart             PublisherUpgradeProfilePutRequestTimezone = "Australia/Hobart"
	PublisherUpgradeProfilePutRequestTimezoneAustraliaPerth              PublisherUpgradeProfilePutRequestTimezone = "Australia/Perth"
	PublisherUpgradeProfilePutRequestTimezoneAustraliaSydney             PublisherUpgradeProfilePutRequestTimezone = "Australia/Sydney"
	PublisherUpgradeProfilePutRequestTimezoneBrazilEast                  PublisherUpgradeProfilePutRequestTimezone = "Brazil/East"
	PublisherUpgradeProfilePutRequestTimezoneCanadaAtlantic              PublisherUpgradeProfilePutRequestTimezone = "Canada/Atlantic"
	PublisherUpgradeProfilePutRequestTimezoneCanadaCentral               PublisherUpgradeProfilePutRequestTimezone = "Canada/Central"
	PublisherUpgradeProfilePutRequestTimezoneCanadaNewfoundland          PublisherUpgradeProfilePutRequestTimezone = "Canada/Newfoundland"
	PublisherUpgradeProfilePutRequestTimezoneCanadaSaskatchewan          PublisherUpgradeProfilePutRequestTimezone = "Canada/Saskatchewan"
	PublisherUpgradeProfilePutRequestTimezoneEuropeAmsterdam             PublisherUpgradeProfilePutRequestTimezone = "Europe/Amsterdam"
	PublisherUpgradeProfilePutRequestTimezoneEuropeAthens                PublisherUpgradeProfilePutRequestTimezone = "Europe/Athens"
	PublisherUpgradeProfilePutRequestTimezoneEuropeCopenhagen            PublisherUpgradeProfilePutRequestTimezone = "Europe/Copenhagen"
	PublisherUpgradeProfilePutRequestTimezoneEuropeHelsinki              PublisherUpgradeProfilePutRequestTimezone = "Europe/Helsinki"
	PublisherUpgradeProfilePutRequestTimezoneEuropeLondon                PublisherUpgradeProfilePutRequestTimezone = "Europe/London"
	PublisherUpgradeProfilePutRequestTimezoneEuropeMinsk                 PublisherUpgradeProfilePutRequestTimezone = "Europe/Minsk"
	PublisherUpgradeProfilePutRequestTimezoneEuropeMoscow                PublisherUpgradeProfilePutRequestTimezone = "Europe/Moscow"
	PublisherUpgradeProfilePutRequestTimezoneEuropeParis                 PublisherUpgradeProfilePutRequestTimezone = "Europe/Paris"
	PublisherUpgradeProfilePutRequestTimezoneEuropePrague                PublisherUpgradeProfilePutRequestTimezone = "Europe/Prague"
	PublisherUpgradeProfilePutRequestTimezoneEuropeSarajevo              PublisherUpgradeProfilePutRequestTimezone = "Europe/Sarajevo"
	PublisherUpgradeProfilePutRequestTimezoneJapan                       PublisherUpgradeProfilePutRequestTimezone = "Japan"
	PublisherUpgradeProfilePutRequestTimezoneMexicoGeneral               PublisherUpgradeProfilePutRequestTimezone = "Mexico/General"
	PublisherUpgradeProfilePutRequestTimezonePacificAuckland             PublisherUpgradeProfilePutRequestTimezone = "Pacific/Auckland"
	PublisherUpgradeProfilePutRequestTimezonePacificFiji                 PublisherUpgradeProfilePutRequestTimezone = "Pacific/Fiji"
	PublisherUpgradeProfilePutRequestTimezonePacificGuadalcanal          PublisherUpgradeProfilePutRequestTimezone = "Pacific/Guadalcanal"
	PublisherUpgradeProfilePutRequestTimezonePacificGuam                 PublisherUpgradeProfilePutRequestTimezone = "Pacific/Guam"
	PublisherUpgradeProfilePutRequestTimezonePacificSamoa                PublisherUpgradeProfilePutRequestTimezone = "Pacific/Samoa"
	PublisherUpgradeProfilePutRequestTimezonePacificTongatapu            PublisherUpgradeProfilePutRequestTimezone = "Pacific/Tongatapu"
	PublisherUpgradeProfilePutRequestTimezoneUsAlaska                    PublisherUpgradeProfilePutRequestTimezone = "US/Alaska"
	PublisherUpgradeProfilePutRequestTimezoneUsArizona                   PublisherUpgradeProfilePutRequestTimezone = "US/Arizona"
	PublisherUpgradeProfilePutRequestTimezoneUsEastIndiana               PublisherUpgradeProfilePutRequestTimezone = "US/East-Indiana"
	PublisherUpgradeProfilePutRequestTimezoneUsEastern                   PublisherUpgradeProfilePutRequestTimezone = "US/Eastern"
	PublisherUpgradeProfilePutRequestTimezoneUsHawaii                    PublisherUpgradeProfilePutRequestTimezone = "US/Hawaii"
	PublisherUpgradeProfilePutRequestTimezoneUsMountain                  PublisherUpgradeProfilePutRequestTimezone = "US/Mountain"
	PublisherUpgradeProfilePutRequestTimezoneUsPacific                   PublisherUpgradeProfilePutRequestTimezone = "US/Pacific"
)

func (e PublisherUpgradeProfilePutRequestTimezone) ToPointer() *PublisherUpgradeProfilePutRequestTimezone {
	return &e
}
func (e *PublisherUpgradeProfilePutRequestTimezone) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Africa/Cairo":
		fallthrough
	case "Africa/Casablanca":
		fallthrough
	case "Africa/Johannesburg":
		fallthrough
	case "Africa/Nairobi":
		fallthrough
	case "America/Argentina/Buenos_Aires":
		fallthrough
	case "America/Caracas":
		fallthrough
	case "America/Godthab":
		fallthrough
	case "America/Lima":
		fallthrough
	case "America/Mazatlan":
		fallthrough
	case "America/Santiago":
		fallthrough
	case "America/Tijuana":
		fallthrough
	case "Asia/Almaty":
		fallthrough
	case "Asia/Baghdad":
		fallthrough
	case "Asia/Baku":
		fallthrough
	case "Asia/Calcutta":
		fallthrough
	case "Asia/Dhaka":
		fallthrough
	case "Asia/Harbin":
		fallthrough
	case "Asia/Jakarta":
		fallthrough
	case "Asia/Jerusalem":
		fallthrough
	case "Asia/Kabul":
		fallthrough
	case "Asia/Karachi":
		fallthrough
	case "Asia/Kathmandu":
		fallthrough
	case "Asia/Krasnoyarsk":
		fallthrough
	case "Asia/Kuala_Lumpur":
		fallthrough
	case "Asia/Muscat":
		fallthrough
	case "Asia/Rangoon":
		fallthrough
	case "Asia/Taipei":
		fallthrough
	case "Asia/Tehran":
		fallthrough
	case "Asia/Vladivostok":
		fallthrough
	case "Asia/Yakutsk":
		fallthrough
	case "Asia/Yerevan":
		fallthrough
	case "Atlantic/Azores":
		fallthrough
	case "Atlantic/Cape_Verde":
		fallthrough
	case "Australia/Adelaide":
		fallthrough
	case "Australia/Brisbane":
		fallthrough
	case "Australia/Darwin":
		fallthrough
	case "Australia/Hobart":
		fallthrough
	case "Australia/Perth":
		fallthrough
	case "Australia/Sydney":
		fallthrough
	case "Brazil/East":
		fallthrough
	case "Canada/Atlantic":
		fallthrough
	case "Canada/Central":
		fallthrough
	case "Canada/Newfoundland":
		fallthrough
	case "Canada/Saskatchewan":
		fallthrough
	case "Europe/Amsterdam":
		fallthrough
	case "Europe/Athens":
		fallthrough
	case "Europe/Copenhagen":
		fallthrough
	case "Europe/Helsinki":
		fallthrough
	case "Europe/London":
		fallthrough
	case "Europe/Minsk":
		fallthrough
	case "Europe/Moscow":
		fallthrough
	case "Europe/Paris":
		fallthrough
	case "Europe/Prague":
		fallthrough
	case "Europe/Sarajevo":
		fallthrough
	case "Japan":
		fallthrough
	case "Mexico/General":
		fallthrough
	case "Pacific/Auckland":
		fallthrough
	case "Pacific/Fiji":
		fallthrough
	case "Pacific/Guadalcanal":
		fallthrough
	case "Pacific/Guam":
		fallthrough
	case "Pacific/Samoa":
		fallthrough
	case "Pacific/Tongatapu":
		fallthrough
	case "US/Alaska":
		fallthrough
	case "US/Arizona":
		fallthrough
	case "US/East-Indiana":
		fallthrough
	case "US/Eastern":
		fallthrough
	case "US/Hawaii":
		fallthrough
	case "US/Mountain":
		fallthrough
	case "US/Pacific":
		*e = PublisherUpgradeProfilePutRequestTimezone(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PublisherUpgradeProfilePutRequestTimezone: %v", v)
	}
}

type PublisherUpgradeProfilePutRequest struct {
	// Docker Tag of the release version you wish to install. \
	// Docker Tag for releases can be obtained from: \
	// `api/v2/infrastructure/publishers/releases`
	//
	DockerTag string `json:"docker_tag"`
	// Is this updgrade profile enabled.
	// * `true` - Enabled
	// * `false` - Disabled
	//
	Enabled bool `json:"enabled"`
	// Frequency of updates. This frequency is in a CRON format. \
	// ┌───────────── minute (0–59) \
	// │ ┌───────────── hour (0–23) \
	// │ │ ┌───────────── day of the month (1–31) \
	// │ │ │ ┌───────────── month (1–12) (Leave as *) \
	// │ │ │ │ ┌───────────── day of the week (MON, TUE, WED, THU, FRI, SAT, SUN) \
	// 0 0 1 * TUE => (Midnight, Weekly, Tuesday)
	//
	Frequency string `json:"frequency"`
	// Please supply the `external_id` value for this attribute requirement.
	// This value should match the upgrade_profile_id parameter.
	//
	PublisherUpgradeProfileID int    `json:"id"`
	Name                      string `json:"name"`
	// This is the Release Type that is to be installed. \
	// Release Type for releases can be obtained from: \
	// `api/v2/infrastructure/publishers/releases`
	//
	ReleaseType PublisherUpgradeProfilePutRequestReleaseType `json:"release_type"`
	// The timezone for which the upgrade triggers. \
	// Please vew enum values for acceptable values.
	//
	Timezone PublisherUpgradeProfilePutRequestTimezone `json:"timezone"`
}

func (o *PublisherUpgradeProfilePutRequest) GetDockerTag() string {
	if o == nil {
		return ""
	}
	return o.DockerTag
}

func (o *PublisherUpgradeProfilePutRequest) GetEnabled() bool {
	if o == nil {
		return false
	}
	return o.Enabled
}

func (o *PublisherUpgradeProfilePutRequest) GetFrequency() string {
	if o == nil {
		return ""
	}
	return o.Frequency
}

func (o *PublisherUpgradeProfilePutRequest) GetPublisherUpgradeProfileID() int {
	if o == nil {
		return 0
	}
	return o.PublisherUpgradeProfileID
}

func (o *PublisherUpgradeProfilePutRequest) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *PublisherUpgradeProfilePutRequest) GetReleaseType() PublisherUpgradeProfilePutRequestReleaseType {
	if o == nil {
		return PublisherUpgradeProfilePutRequestReleaseType("")
	}
	return o.ReleaseType
}

func (o *PublisherUpgradeProfilePutRequest) GetTimezone() PublisherUpgradeProfilePutRequestTimezone {
	if o == nil {
		return PublisherUpgradeProfilePutRequestTimezone("")
	}
	return o.Timezone
}
