// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TagsResponseWithoutIDStatus string

const (
	TagsResponseWithoutIDStatusSuccess  TagsResponseWithoutIDStatus = "success"
	TagsResponseWithoutIDStatusNotFound TagsResponseWithoutIDStatus = "not found"
)

func (e TagsResponseWithoutIDStatus) ToPointer() *TagsResponseWithoutIDStatus {
	return &e
}
func (e *TagsResponseWithoutIDStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "not found":
		*e = TagsResponseWithoutIDStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TagsResponseWithoutIDStatus: %v", v)
	}
}

type TagsResponseWithoutID struct {
	Data   *TagResponseItem             `json:"data,omitempty"`
	Status *TagsResponseWithoutIDStatus `json:"status,omitempty"`
}

func (o *TagsResponseWithoutID) GetData() *TagResponseItem {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *TagsResponseWithoutID) GetStatus() *TagsResponseWithoutIDStatus {
	if o == nil {
		return nil
	}
	return o.Status
}
