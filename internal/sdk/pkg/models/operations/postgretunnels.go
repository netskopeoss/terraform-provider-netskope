// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type PostGreTunnelsXff struct {
	Enable *bool    `json:"enable,omitempty"`
	Iplist []string `json:"iplist,omitempty"`
}

func (o *PostGreTunnelsXff) GetEnable() *bool {
	if o == nil {
		return nil
	}
	return o.Enable
}

func (o *PostGreTunnelsXff) GetIplist() []string {
	if o == nil {
		return nil
	}
	return o.Iplist
}

type PostGreTunnelsOptions struct {
	Xff *PostGreTunnelsXff `json:"xff,omitempty"`
}

func (o *PostGreTunnelsOptions) GetXff() *PostGreTunnelsXff {
	if o == nil {
		return nil
	}
	return o.Xff
}

// PostGreTunnelsRequestBody - GRE tunnel object
type PostGreTunnelsRequestBody struct {
	Enable        *bool                  `json:"enable,omitempty"`
	Notes         *string                `json:"notes,omitempty"`
	Options       *PostGreTunnelsOptions `json:"options,omitempty"`
	Pops          []string               `json:"pops,omitempty"`
	Site          *string                `json:"site,omitempty"`
	Sourcetype    *string                `json:"sourcetype,omitempty"`
	Srcipidentity *string                `json:"srcipidentity,omitempty"`
	Template      *string                `json:"template,omitempty"`
	Vendor        *string                `json:"vendor,omitempty"`
}

func (o *PostGreTunnelsRequestBody) GetEnable() *bool {
	if o == nil {
		return nil
	}
	return o.Enable
}

func (o *PostGreTunnelsRequestBody) GetNotes() *string {
	if o == nil {
		return nil
	}
	return o.Notes
}

func (o *PostGreTunnelsRequestBody) GetOptions() *PostGreTunnelsOptions {
	if o == nil {
		return nil
	}
	return o.Options
}

func (o *PostGreTunnelsRequestBody) GetPops() []string {
	if o == nil {
		return nil
	}
	return o.Pops
}

func (o *PostGreTunnelsRequestBody) GetSite() *string {
	if o == nil {
		return nil
	}
	return o.Site
}

func (o *PostGreTunnelsRequestBody) GetSourcetype() *string {
	if o == nil {
		return nil
	}
	return o.Sourcetype
}

func (o *PostGreTunnelsRequestBody) GetSrcipidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcipidentity
}

func (o *PostGreTunnelsRequestBody) GetTemplate() *string {
	if o == nil {
		return nil
	}
	return o.Template
}

func (o *PostGreTunnelsRequestBody) GetVendor() *string {
	if o == nil {
		return nil
	}
	return o.Vendor
}

// PostGreTunnelsResponse500ResponseBody - Internal server error
type PostGreTunnelsResponse500ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PostGreTunnelsResponse500ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PostGreTunnelsResponse500ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PostGreTunnelsResponse429ResponseBody - Too many requests
type PostGreTunnelsResponse429ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PostGreTunnelsResponse429ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PostGreTunnelsResponse429ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PostGreTunnelsResponse409ResponseBody - Already exists
type PostGreTunnelsResponse409ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PostGreTunnelsResponse409ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PostGreTunnelsResponse409ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PostGreTunnelsResponse405ResponseBody - Method not allowed
type PostGreTunnelsResponse405ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PostGreTunnelsResponse405ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PostGreTunnelsResponse405ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PostGreTunnelsResponse403ResponseBody - Access forbidden
type PostGreTunnelsResponse403ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PostGreTunnelsResponse403ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PostGreTunnelsResponse403ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PostGreTunnelsResponseResponseBody - Invalid request
type PostGreTunnelsResponseResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PostGreTunnelsResponseResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PostGreTunnelsResponseResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type PostGreTunnelsResponseXff struct {
	Enabled *bool    `json:"enabled,omitempty"`
	Iplist  []string `json:"iplist,omitempty"`
}

func (o *PostGreTunnelsResponseXff) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *PostGreTunnelsResponseXff) GetIplist() []string {
	if o == nil {
		return nil
	}
	return o.Iplist
}

type PostGreTunnelsResponseOptions struct {
	Xff *PostGreTunnelsResponseXff `json:"xff,omitempty"`
}

func (o *PostGreTunnelsResponseOptions) GetXff() *PostGreTunnelsResponseXff {
	if o == nil {
		return nil
	}
	return o.Xff
}

type PostGreTunnelsPops struct {
	Gateway           *string `json:"gateway,omitempty"`
	KeepaliveLast     *string `json:"keepaliveLast,omitempty"`
	KeepaliveStatus   *string `json:"keepaliveStatus,omitempty"`
	Name              *string `json:"name,omitempty"`
	Primary           *bool   `json:"primary,omitempty"`
	Probeip           *string `json:"probeip,omitempty"`
	Throughput        *string `json:"throughput,omitempty"`
	UsertrafficLast   *string `json:"usertrafficLast,omitempty"`
	UsertrafficStatus *string `json:"usertrafficStatus,omitempty"`
}

func (o *PostGreTunnelsPops) GetGateway() *string {
	if o == nil {
		return nil
	}
	return o.Gateway
}

func (o *PostGreTunnelsPops) GetKeepaliveLast() *string {
	if o == nil {
		return nil
	}
	return o.KeepaliveLast
}

func (o *PostGreTunnelsPops) GetKeepaliveStatus() *string {
	if o == nil {
		return nil
	}
	return o.KeepaliveStatus
}

func (o *PostGreTunnelsPops) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *PostGreTunnelsPops) GetPrimary() *bool {
	if o == nil {
		return nil
	}
	return o.Primary
}

func (o *PostGreTunnelsPops) GetProbeip() *string {
	if o == nil {
		return nil
	}
	return o.Probeip
}

func (o *PostGreTunnelsPops) GetThroughput() *string {
	if o == nil {
		return nil
	}
	return o.Throughput
}

func (o *PostGreTunnelsPops) GetUsertrafficLast() *string {
	if o == nil {
		return nil
	}
	return o.UsertrafficLast
}

func (o *PostGreTunnelsPops) GetUsertrafficStatus() *string {
	if o == nil {
		return nil
	}
	return o.UsertrafficStatus
}

type PostGreTunnelsData struct {
	Enabled       *bool                          `json:"enabled,omitempty"`
	ID            *int64                         `json:"id,omitempty"`
	Notes         *string                        `json:"notes,omitempty"`
	Options       *PostGreTunnelsResponseOptions `json:"options,omitempty"`
	Pops          []PostGreTunnelsPops           `json:"pops,omitempty"`
	Site          *string                        `json:"site,omitempty"`
	Sourcetype    *string                        `json:"sourcetype,omitempty"`
	Srcipidentity *string                        `json:"srcipidentity,omitempty"`
	Template      *string                        `json:"template,omitempty"`
	Vendor        *string                        `json:"vendor,omitempty"`
	Version       *int64                         `json:"version,omitempty"`
}

func (o *PostGreTunnelsData) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *PostGreTunnelsData) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *PostGreTunnelsData) GetNotes() *string {
	if o == nil {
		return nil
	}
	return o.Notes
}

func (o *PostGreTunnelsData) GetOptions() *PostGreTunnelsResponseOptions {
	if o == nil {
		return nil
	}
	return o.Options
}

func (o *PostGreTunnelsData) GetPops() []PostGreTunnelsPops {
	if o == nil {
		return nil
	}
	return o.Pops
}

func (o *PostGreTunnelsData) GetSite() *string {
	if o == nil {
		return nil
	}
	return o.Site
}

func (o *PostGreTunnelsData) GetSourcetype() *string {
	if o == nil {
		return nil
	}
	return o.Sourcetype
}

func (o *PostGreTunnelsData) GetSrcipidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcipidentity
}

func (o *PostGreTunnelsData) GetTemplate() *string {
	if o == nil {
		return nil
	}
	return o.Template
}

func (o *PostGreTunnelsData) GetVendor() *string {
	if o == nil {
		return nil
	}
	return o.Vendor
}

func (o *PostGreTunnelsData) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

// PostGreTunnelsResponseBody - Successful operation
type PostGreTunnelsResponseBody struct {
	Data   []PostGreTunnelsData `json:"data,omitempty"`
	Result *string              `json:"result,omitempty"`
	Status *int64               `json:"status,omitempty"`
}

func (o *PostGreTunnelsResponseBody) GetData() []PostGreTunnelsData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *PostGreTunnelsResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PostGreTunnelsResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type PostGreTunnelsResponse struct {
	// Successful operation
	TwoHundredAndOneApplicationJSONObject *PostGreTunnelsResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *PostGreTunnelsResponseResponseBody
	// Access forbidden
	FourHundredAndThreeApplicationJSONObject *PostGreTunnelsResponse403ResponseBody
	// Method not allowed
	FourHundredAndFiveApplicationJSONObject *PostGreTunnelsResponse405ResponseBody
	// Already exists
	FourHundredAndNineApplicationJSONObject *PostGreTunnelsResponse409ResponseBody
	// Too many requests
	FourHundredAndTwentyNineApplicationJSONObject *PostGreTunnelsResponse429ResponseBody
	// Internal server error
	FiveHundredApplicationJSONObject *PostGreTunnelsResponse500ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *PostGreTunnelsResponse) GetTwoHundredAndOneApplicationJSONObject() *PostGreTunnelsResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredAndOneApplicationJSONObject
}

func (o *PostGreTunnelsResponse) GetFourHundredApplicationJSONObject() *PostGreTunnelsResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *PostGreTunnelsResponse) GetFourHundredAndThreeApplicationJSONObject() *PostGreTunnelsResponse403ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *PostGreTunnelsResponse) GetFourHundredAndFiveApplicationJSONObject() *PostGreTunnelsResponse405ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFiveApplicationJSONObject
}

func (o *PostGreTunnelsResponse) GetFourHundredAndNineApplicationJSONObject() *PostGreTunnelsResponse409ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndNineApplicationJSONObject
}

func (o *PostGreTunnelsResponse) GetFourHundredAndTwentyNineApplicationJSONObject() *PostGreTunnelsResponse429ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndTwentyNineApplicationJSONObject
}

func (o *PostGreTunnelsResponse) GetFiveHundredApplicationJSONObject() *PostGreTunnelsResponse500ResponseBody {
	if o == nil {
		return nil
	}
	return o.FiveHundredApplicationJSONObject
}

func (o *PostGreTunnelsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PostGreTunnelsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PostGreTunnelsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
