// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/netskope/terraform-provider-ns/internal/sdk/pkg/models/shared"
	"net/http"
)

// PatchPolicyNpaRulesIDQueryParamSilent - flag to skip output except status code
type PatchPolicyNpaRulesIDQueryParamSilent string

const (
	PatchPolicyNpaRulesIDQueryParamSilentOne  PatchPolicyNpaRulesIDQueryParamSilent = "1"
	PatchPolicyNpaRulesIDQueryParamSilentZero PatchPolicyNpaRulesIDQueryParamSilent = "0"
)

func (e PatchPolicyNpaRulesIDQueryParamSilent) ToPointer() *PatchPolicyNpaRulesIDQueryParamSilent {
	return &e
}

func (e *PatchPolicyNpaRulesIDQueryParamSilent) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "1":
		fallthrough
	case "0":
		*e = PatchPolicyNpaRulesIDQueryParamSilent(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchPolicyNpaRulesIDQueryParamSilent: %v", v)
	}
}

type PatchPolicyNpaRulesIDRequest struct {
	// policy rule id
	ID               string                  `pathParam:"style=simple,explode=false,name=id"`
	NpaPolicyRequest shared.NpaPolicyRequest `request:"mediaType=application/json"`
	// flag to skip output except status code
	Silent *PatchPolicyNpaRulesIDQueryParamSilent `queryParam:"style=form,explode=true,name=silent"`
}

func (o *PatchPolicyNpaRulesIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *PatchPolicyNpaRulesIDRequest) GetNpaPolicyRequest() shared.NpaPolicyRequest {
	if o == nil {
		return shared.NpaPolicyRequest{}
	}
	return o.NpaPolicyRequest
}

func (o *PatchPolicyNpaRulesIDRequest) GetSilent() *PatchPolicyNpaRulesIDQueryParamSilent {
	if o == nil {
		return nil
	}
	return o.Silent
}

// PatchPolicyNpaRulesIDResponseBody - successful operation
type PatchPolicyNpaRulesIDResponseBody struct {
	Data *shared.NpaPolicyResponseItem `json:"data,omitempty"`
}

func (o *PatchPolicyNpaRulesIDResponseBody) GetData() *shared.NpaPolicyResponseItem {
	if o == nil {
		return nil
	}
	return o.Data
}

type PatchPolicyNpaRulesIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Invalid request
	NpaPolicyResponse400 *shared.NpaPolicyResponse400
	// successful operation
	Object *PatchPolicyNpaRulesIDResponseBody
}

func (o *PatchPolicyNpaRulesIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PatchPolicyNpaRulesIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PatchPolicyNpaRulesIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PatchPolicyNpaRulesIDResponse) GetNpaPolicyResponse400() *shared.NpaPolicyResponse400 {
	if o == nil {
		return nil
	}
	return o.NpaPolicyResponse400
}

func (o *PatchPolicyNpaRulesIDResponse) GetObject() *PatchPolicyNpaRulesIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
