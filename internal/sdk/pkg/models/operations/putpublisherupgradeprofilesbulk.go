// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PutPublisherupgradeprofilesBulkApply struct {
	PublisherUpgradeProfilesID *string `json:"publisher_upgrade_profiles_id,omitempty"`
}

func (o *PutPublisherupgradeprofilesBulkApply) GetPublisherUpgradeProfilesID() *string {
	if o == nil {
		return nil
	}
	return o.PublisherUpgradeProfilesID
}

type PutPublisherupgradeprofilesBulkPublishers struct {
	Apply *PutPublisherupgradeprofilesBulkApply `json:"apply,omitempty"`
	ID    []string                              `json:"id,omitempty"`
}

func (o *PutPublisherupgradeprofilesBulkPublishers) GetApply() *PutPublisherupgradeprofilesBulkApply {
	if o == nil {
		return nil
	}
	return o.Apply
}

func (o *PutPublisherupgradeprofilesBulkPublishers) GetID() []string {
	if o == nil {
		return nil
	}
	return o.ID
}

type PutPublisherupgradeprofilesBulkRequestBody struct {
	Publishers *PutPublisherupgradeprofilesBulkPublishers `json:"publishers,omitempty"`
}

func (o *PutPublisherupgradeprofilesBulkRequestBody) GetPublishers() *PutPublisherupgradeprofilesBulkPublishers {
	if o == nil {
		return nil
	}
	return o.Publishers
}

// PutPublisherupgradeprofilesBulkQueryParamSilent - flag to skip output except status code:
//   - `1` - Skip response data
//   - `0` - Do not skip response data
type PutPublisherupgradeprofilesBulkQueryParamSilent string

const (
	PutPublisherupgradeprofilesBulkQueryParamSilentOne  PutPublisherupgradeprofilesBulkQueryParamSilent = "1"
	PutPublisherupgradeprofilesBulkQueryParamSilentZero PutPublisherupgradeprofilesBulkQueryParamSilent = "0"
)

func (e PutPublisherupgradeprofilesBulkQueryParamSilent) ToPointer() *PutPublisherupgradeprofilesBulkQueryParamSilent {
	return &e
}

func (e *PutPublisherupgradeprofilesBulkQueryParamSilent) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "1":
		fallthrough
	case "0":
		*e = PutPublisherupgradeprofilesBulkQueryParamSilent(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutPublisherupgradeprofilesBulkQueryParamSilent: %v", v)
	}
}

type PutPublisherupgradeprofilesBulkRequest struct {
	RequestBody PutPublisherupgradeprofilesBulkRequestBody `request:"mediaType=application/json"`
	// flag to skip output except status code:
	//  * `1` - Skip response data
	//  * `0` - Do not skip response data
	Silent *PutPublisherupgradeprofilesBulkQueryParamSilent `queryParam:"style=form,explode=true,name=silent"`
}

func (o *PutPublisherupgradeprofilesBulkRequest) GetRequestBody() PutPublisherupgradeprofilesBulkRequestBody {
	if o == nil {
		return PutPublisherupgradeprofilesBulkRequestBody{}
	}
	return o.RequestBody
}

func (o *PutPublisherupgradeprofilesBulkRequest) GetSilent() *PutPublisherupgradeprofilesBulkQueryParamSilent {
	if o == nil {
		return nil
	}
	return o.Silent
}

// PutPublisherupgradeprofilesBulkResponseResponseBody - Invalid request
type PutPublisherupgradeprofilesBulkResponseResponseBody struct {
	Message *string `json:"message,omitempty"`
	Status  *int64  `json:"status,omitempty"`
}

func (o *PutPublisherupgradeprofilesBulkResponseResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *PutPublisherupgradeprofilesBulkResponseResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type PutPublisherupgradeprofilesBulkAssessment struct {
}

type PutPublisherupgradeprofilesBulkResponseStatus string

const (
	PutPublisherupgradeprofilesBulkResponseStatusConnected     PutPublisherupgradeprofilesBulkResponseStatus = "connected"
	PutPublisherupgradeprofilesBulkResponseStatusNotRegistered PutPublisherupgradeprofilesBulkResponseStatus = "not registered"
)

func (e PutPublisherupgradeprofilesBulkResponseStatus) ToPointer() *PutPublisherupgradeprofilesBulkResponseStatus {
	return &e
}

func (e *PutPublisherupgradeprofilesBulkResponseStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "connected":
		fallthrough
	case "not registered":
		*e = PutPublisherupgradeprofilesBulkResponseStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutPublisherupgradeprofilesBulkResponseStatus: %v", v)
	}
}

type PutPublisherupgradeprofilesBulkTags struct {
	TagID   *int    `json:"tag_id,omitempty"`
	TagName *string `json:"tag_name,omitempty"`
}

func (o *PutPublisherupgradeprofilesBulkTags) GetTagID() *int {
	if o == nil {
		return nil
	}
	return o.TagID
}

func (o *PutPublisherupgradeprofilesBulkTags) GetTagName() *string {
	if o == nil {
		return nil
	}
	return o.TagName
}

type PutPublisherupgradeprofilesBulkData struct {
	Assessment                *PutPublisherupgradeprofilesBulkAssessment     `json:"assessment,omitempty"`
	CommonName                *string                                        `json:"common_name,omitempty"`
	Lbrokerconnect            *bool                                          `json:"lbrokerconnect,omitempty"`
	PublisherID               *int                                           `json:"publisher_id,omitempty"`
	PublisherName             *string                                        `json:"publisher_name,omitempty"`
	PublisherUpgradeProfileID *int                                           `json:"publisher_upgrade_profile_id,omitempty"`
	Registered                *bool                                          `json:"registered,omitempty"`
	Status                    *PutPublisherupgradeprofilesBulkResponseStatus `json:"status,omitempty"`
	StitcherID                *int                                           `json:"stitcher_id,omitempty"`
	Tags                      []PutPublisherupgradeprofilesBulkTags          `json:"tags,omitempty"`
}

func (o *PutPublisherupgradeprofilesBulkData) GetAssessment() *PutPublisherupgradeprofilesBulkAssessment {
	if o == nil {
		return nil
	}
	return o.Assessment
}

func (o *PutPublisherupgradeprofilesBulkData) GetCommonName() *string {
	if o == nil {
		return nil
	}
	return o.CommonName
}

func (o *PutPublisherupgradeprofilesBulkData) GetLbrokerconnect() *bool {
	if o == nil {
		return nil
	}
	return o.Lbrokerconnect
}

func (o *PutPublisherupgradeprofilesBulkData) GetPublisherID() *int {
	if o == nil {
		return nil
	}
	return o.PublisherID
}

func (o *PutPublisherupgradeprofilesBulkData) GetPublisherName() *string {
	if o == nil {
		return nil
	}
	return o.PublisherName
}

func (o *PutPublisherupgradeprofilesBulkData) GetPublisherUpgradeProfileID() *int {
	if o == nil {
		return nil
	}
	return o.PublisherUpgradeProfileID
}

func (o *PutPublisherupgradeprofilesBulkData) GetRegistered() *bool {
	if o == nil {
		return nil
	}
	return o.Registered
}

func (o *PutPublisherupgradeprofilesBulkData) GetStatus() *PutPublisherupgradeprofilesBulkResponseStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *PutPublisherupgradeprofilesBulkData) GetStitcherID() *int {
	if o == nil {
		return nil
	}
	return o.StitcherID
}

func (o *PutPublisherupgradeprofilesBulkData) GetTags() []PutPublisherupgradeprofilesBulkTags {
	if o == nil {
		return nil
	}
	return o.Tags
}

type PutPublisherupgradeprofilesBulkStatus string

const (
	PutPublisherupgradeprofilesBulkStatusSuccess  PutPublisherupgradeprofilesBulkStatus = "success"
	PutPublisherupgradeprofilesBulkStatusNotFound PutPublisherupgradeprofilesBulkStatus = "not found"
)

func (e PutPublisherupgradeprofilesBulkStatus) ToPointer() *PutPublisherupgradeprofilesBulkStatus {
	return &e
}

func (e *PutPublisherupgradeprofilesBulkStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "not found":
		*e = PutPublisherupgradeprofilesBulkStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutPublisherupgradeprofilesBulkStatus: %v", v)
	}
}

// PutPublisherupgradeprofilesBulkResponseBody - successful operation
type PutPublisherupgradeprofilesBulkResponseBody struct {
	Data   []PutPublisherupgradeprofilesBulkData  `json:"data,omitempty"`
	Status *PutPublisherupgradeprofilesBulkStatus `json:"status,omitempty"`
	Total  *int                                   `json:"total,omitempty"`
}

func (o *PutPublisherupgradeprofilesBulkResponseBody) GetData() []PutPublisherupgradeprofilesBulkData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *PutPublisherupgradeprofilesBulkResponseBody) GetStatus() *PutPublisherupgradeprofilesBulkStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *PutPublisherupgradeprofilesBulkResponseBody) GetTotal() *int {
	if o == nil {
		return nil
	}
	return o.Total
}

type PutPublisherupgradeprofilesBulkResponse struct {
	// successful operation
	TwoHundredApplicationJSONObject *PutPublisherupgradeprofilesBulkResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *PutPublisherupgradeprofilesBulkResponseResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *PutPublisherupgradeprofilesBulkResponse) GetTwoHundredApplicationJSONObject() *PutPublisherupgradeprofilesBulkResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *PutPublisherupgradeprofilesBulkResponse) GetFourHundredApplicationJSONObject() *PutPublisherupgradeprofilesBulkResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *PutPublisherupgradeprofilesBulkResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PutPublisherupgradeprofilesBulkResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PutPublisherupgradeprofilesBulkResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
