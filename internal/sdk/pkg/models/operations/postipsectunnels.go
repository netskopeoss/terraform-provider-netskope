// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type PostIpsecTunnelsXff struct {
	Enable *bool    `json:"enable,omitempty"`
	Iplist []string `json:"iplist,omitempty"`
}

func (o *PostIpsecTunnelsXff) GetEnable() *bool {
	if o == nil {
		return nil
	}
	return o.Enable
}

func (o *PostIpsecTunnelsXff) GetIplist() []string {
	if o == nil {
		return nil
	}
	return o.Iplist
}

type PostIpsecTunnelsOptions struct {
	Reauth *bool                `json:"reauth,omitempty"`
	Rekey  *bool                `json:"rekey,omitempty"`
	Xff    *PostIpsecTunnelsXff `json:"xff,omitempty"`
}

func (o *PostIpsecTunnelsOptions) GetReauth() *bool {
	if o == nil {
		return nil
	}
	return o.Reauth
}

func (o *PostIpsecTunnelsOptions) GetRekey() *bool {
	if o == nil {
		return nil
	}
	return o.Rekey
}

func (o *PostIpsecTunnelsOptions) GetXff() *PostIpsecTunnelsXff {
	if o == nil {
		return nil
	}
	return o.Xff
}

// PostIpsecTunnelsRequestBody - IPSec tunnel object
type PostIpsecTunnelsRequestBody struct {
	Bandwidth     *int64                   `json:"bandwidth,omitempty"`
	Enable        *bool                    `json:"enable,omitempty"`
	Encryption    *string                  `json:"encryption,omitempty"`
	Notes         *string                  `json:"notes,omitempty"`
	Options       *PostIpsecTunnelsOptions `json:"options,omitempty"`
	Pops          []string                 `json:"pops,omitempty"`
	Psk           *string                  `json:"psk,omitempty"`
	Site          *string                  `json:"site,omitempty"`
	Sourcetype    *string                  `json:"sourcetype,omitempty"`
	Srcidentity   *string                  `json:"srcidentity,omitempty"`
	Srcipidentity *string                  `json:"srcipidentity,omitempty"`
	Template      *string                  `json:"template,omitempty"`
	Vendor        *string                  `json:"vendor,omitempty"`
}

func (o *PostIpsecTunnelsRequestBody) GetBandwidth() *int64 {
	if o == nil {
		return nil
	}
	return o.Bandwidth
}

func (o *PostIpsecTunnelsRequestBody) GetEnable() *bool {
	if o == nil {
		return nil
	}
	return o.Enable
}

func (o *PostIpsecTunnelsRequestBody) GetEncryption() *string {
	if o == nil {
		return nil
	}
	return o.Encryption
}

func (o *PostIpsecTunnelsRequestBody) GetNotes() *string {
	if o == nil {
		return nil
	}
	return o.Notes
}

func (o *PostIpsecTunnelsRequestBody) GetOptions() *PostIpsecTunnelsOptions {
	if o == nil {
		return nil
	}
	return o.Options
}

func (o *PostIpsecTunnelsRequestBody) GetPops() []string {
	if o == nil {
		return nil
	}
	return o.Pops
}

func (o *PostIpsecTunnelsRequestBody) GetPsk() *string {
	if o == nil {
		return nil
	}
	return o.Psk
}

func (o *PostIpsecTunnelsRequestBody) GetSite() *string {
	if o == nil {
		return nil
	}
	return o.Site
}

func (o *PostIpsecTunnelsRequestBody) GetSourcetype() *string {
	if o == nil {
		return nil
	}
	return o.Sourcetype
}

func (o *PostIpsecTunnelsRequestBody) GetSrcidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcidentity
}

func (o *PostIpsecTunnelsRequestBody) GetSrcipidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcipidentity
}

func (o *PostIpsecTunnelsRequestBody) GetTemplate() *string {
	if o == nil {
		return nil
	}
	return o.Template
}

func (o *PostIpsecTunnelsRequestBody) GetVendor() *string {
	if o == nil {
		return nil
	}
	return o.Vendor
}

// PostIpsecTunnelsResponse500ResponseBody - Internal server error
type PostIpsecTunnelsResponse500ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PostIpsecTunnelsResponse500ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PostIpsecTunnelsResponse500ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PostIpsecTunnelsResponse429ResponseBody - Too many requests
type PostIpsecTunnelsResponse429ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PostIpsecTunnelsResponse429ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PostIpsecTunnelsResponse429ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PostIpsecTunnelsResponse409ResponseBody - Already exists
type PostIpsecTunnelsResponse409ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PostIpsecTunnelsResponse409ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PostIpsecTunnelsResponse409ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PostIpsecTunnelsResponse405ResponseBody - Method not allowed
type PostIpsecTunnelsResponse405ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PostIpsecTunnelsResponse405ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PostIpsecTunnelsResponse405ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PostIpsecTunnelsResponse403ResponseBody - Access forbidden
type PostIpsecTunnelsResponse403ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PostIpsecTunnelsResponse403ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PostIpsecTunnelsResponse403ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PostIpsecTunnelsResponseResponseBody - Invalid request
type PostIpsecTunnelsResponseResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PostIpsecTunnelsResponseResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PostIpsecTunnelsResponseResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type PostIpsecTunnelsResponseXff struct {
	Enabled *bool    `json:"enabled,omitempty"`
	Iplist  []string `json:"iplist,omitempty"`
}

func (o *PostIpsecTunnelsResponseXff) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *PostIpsecTunnelsResponseXff) GetIplist() []string {
	if o == nil {
		return nil
	}
	return o.Iplist
}

type PostIpsecTunnelsResponseOptions struct {
	Reauth *bool                        `json:"reauth,omitempty"`
	Rekey  *bool                        `json:"rekey,omitempty"`
	Xff    *PostIpsecTunnelsResponseXff `json:"xff,omitempty"`
}

func (o *PostIpsecTunnelsResponseOptions) GetReauth() *bool {
	if o == nil {
		return nil
	}
	return o.Reauth
}

func (o *PostIpsecTunnelsResponseOptions) GetRekey() *bool {
	if o == nil {
		return nil
	}
	return o.Rekey
}

func (o *PostIpsecTunnelsResponseOptions) GetXff() *PostIpsecTunnelsResponseXff {
	if o == nil {
		return nil
	}
	return o.Xff
}

type PostIpsecTunnelsPops struct {
	Gateway    *string `json:"gateway,omitempty"`
	Name       *string `json:"name,omitempty"`
	Primary    *bool   `json:"primary,omitempty"`
	Probeip    *string `json:"probeip,omitempty"`
	Since      *string `json:"since,omitempty"`
	Status     *string `json:"status,omitempty"`
	Throughput *string `json:"throughput,omitempty"`
}

func (o *PostIpsecTunnelsPops) GetGateway() *string {
	if o == nil {
		return nil
	}
	return o.Gateway
}

func (o *PostIpsecTunnelsPops) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *PostIpsecTunnelsPops) GetPrimary() *bool {
	if o == nil {
		return nil
	}
	return o.Primary
}

func (o *PostIpsecTunnelsPops) GetProbeip() *string {
	if o == nil {
		return nil
	}
	return o.Probeip
}

func (o *PostIpsecTunnelsPops) GetSince() *string {
	if o == nil {
		return nil
	}
	return o.Since
}

func (o *PostIpsecTunnelsPops) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *PostIpsecTunnelsPops) GetThroughput() *string {
	if o == nil {
		return nil
	}
	return o.Throughput
}

type PostIpsecTunnelsData struct {
	Bandwidth     *int64                           `json:"bandwidth,omitempty"`
	Enabled       *bool                            `json:"enabled,omitempty"`
	Encryption    *string                          `json:"encryption,omitempty"`
	ID            *int64                           `json:"id,omitempty"`
	Notes         *string                          `json:"notes,omitempty"`
	Options       *PostIpsecTunnelsResponseOptions `json:"options,omitempty"`
	Pops          []PostIpsecTunnelsPops           `json:"pops,omitempty"`
	Site          *string                          `json:"site,omitempty"`
	Sourcetype    *string                          `json:"sourcetype,omitempty"`
	Srcidentity   *string                          `json:"srcidentity,omitempty"`
	Srcipidentity *string                          `json:"srcipidentity,omitempty"`
	Template      *string                          `json:"template,omitempty"`
	Vendor        *string                          `json:"vendor,omitempty"`
	Version       *int64                           `json:"version,omitempty"`
}

func (o *PostIpsecTunnelsData) GetBandwidth() *int64 {
	if o == nil {
		return nil
	}
	return o.Bandwidth
}

func (o *PostIpsecTunnelsData) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *PostIpsecTunnelsData) GetEncryption() *string {
	if o == nil {
		return nil
	}
	return o.Encryption
}

func (o *PostIpsecTunnelsData) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *PostIpsecTunnelsData) GetNotes() *string {
	if o == nil {
		return nil
	}
	return o.Notes
}

func (o *PostIpsecTunnelsData) GetOptions() *PostIpsecTunnelsResponseOptions {
	if o == nil {
		return nil
	}
	return o.Options
}

func (o *PostIpsecTunnelsData) GetPops() []PostIpsecTunnelsPops {
	if o == nil {
		return nil
	}
	return o.Pops
}

func (o *PostIpsecTunnelsData) GetSite() *string {
	if o == nil {
		return nil
	}
	return o.Site
}

func (o *PostIpsecTunnelsData) GetSourcetype() *string {
	if o == nil {
		return nil
	}
	return o.Sourcetype
}

func (o *PostIpsecTunnelsData) GetSrcidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcidentity
}

func (o *PostIpsecTunnelsData) GetSrcipidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcipidentity
}

func (o *PostIpsecTunnelsData) GetTemplate() *string {
	if o == nil {
		return nil
	}
	return o.Template
}

func (o *PostIpsecTunnelsData) GetVendor() *string {
	if o == nil {
		return nil
	}
	return o.Vendor
}

func (o *PostIpsecTunnelsData) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

// PostIpsecTunnelsResponseBody - Successful operation
type PostIpsecTunnelsResponseBody struct {
	Data   []PostIpsecTunnelsData `json:"data,omitempty"`
	Result *string                `json:"result,omitempty"`
	Status *int64                 `json:"status,omitempty"`
}

func (o *PostIpsecTunnelsResponseBody) GetData() []PostIpsecTunnelsData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *PostIpsecTunnelsResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PostIpsecTunnelsResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type PostIpsecTunnelsResponse struct {
	// Successful operation
	TwoHundredAndOneApplicationJSONObject *PostIpsecTunnelsResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *PostIpsecTunnelsResponseResponseBody
	// Access forbidden
	FourHundredAndThreeApplicationJSONObject *PostIpsecTunnelsResponse403ResponseBody
	// Method not allowed
	FourHundredAndFiveApplicationJSONObject *PostIpsecTunnelsResponse405ResponseBody
	// Already exists
	FourHundredAndNineApplicationJSONObject *PostIpsecTunnelsResponse409ResponseBody
	// Too many requests
	FourHundredAndTwentyNineApplicationJSONObject *PostIpsecTunnelsResponse429ResponseBody
	// Internal server error
	FiveHundredApplicationJSONObject *PostIpsecTunnelsResponse500ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *PostIpsecTunnelsResponse) GetTwoHundredAndOneApplicationJSONObject() *PostIpsecTunnelsResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredAndOneApplicationJSONObject
}

func (o *PostIpsecTunnelsResponse) GetFourHundredApplicationJSONObject() *PostIpsecTunnelsResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *PostIpsecTunnelsResponse) GetFourHundredAndThreeApplicationJSONObject() *PostIpsecTunnelsResponse403ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *PostIpsecTunnelsResponse) GetFourHundredAndFiveApplicationJSONObject() *PostIpsecTunnelsResponse405ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFiveApplicationJSONObject
}

func (o *PostIpsecTunnelsResponse) GetFourHundredAndNineApplicationJSONObject() *PostIpsecTunnelsResponse409ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndNineApplicationJSONObject
}

func (o *PostIpsecTunnelsResponse) GetFourHundredAndTwentyNineApplicationJSONObject() *PostIpsecTunnelsResponse429ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndTwentyNineApplicationJSONObject
}

func (o *PostIpsecTunnelsResponse) GetFiveHundredApplicationJSONObject() *PostIpsecTunnelsResponse500ResponseBody {
	if o == nil {
		return nil
	}
	return o.FiveHundredApplicationJSONObject
}

func (o *PostIpsecTunnelsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PostIpsecTunnelsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PostIpsecTunnelsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
