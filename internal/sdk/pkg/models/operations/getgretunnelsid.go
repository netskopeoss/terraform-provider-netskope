// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetGreTunnelsIDRequest struct {
	// Provide comma separated list of fields to be displayed
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// GRE tunnel id
	ID int64 `pathParam:"style=simple,explode=false,name=id"`
}

func (o *GetGreTunnelsIDRequest) GetFields() *string {
	if o == nil {
		return nil
	}
	return o.Fields
}

func (o *GetGreTunnelsIDRequest) GetID() int64 {
	if o == nil {
		return 0
	}
	return o.ID
}

// GetGreTunnelsIDResponse500ResponseBody - Internal server error
type GetGreTunnelsIDResponse500ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetGreTunnelsIDResponse500ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetGreTunnelsIDResponse500ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetGreTunnelsIDResponse429ResponseBody - Too many requests
type GetGreTunnelsIDResponse429ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetGreTunnelsIDResponse429ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetGreTunnelsIDResponse429ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetGreTunnelsIDResponse405ResponseBody - Method not allowed
type GetGreTunnelsIDResponse405ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetGreTunnelsIDResponse405ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetGreTunnelsIDResponse405ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetGreTunnelsIDResponse404ResponseBody - Not found
type GetGreTunnelsIDResponse404ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetGreTunnelsIDResponse404ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetGreTunnelsIDResponse404ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetGreTunnelsIDResponse403ResponseBody - Access forbidden
type GetGreTunnelsIDResponse403ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetGreTunnelsIDResponse403ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetGreTunnelsIDResponse403ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetGreTunnelsIDResponseResponseBody - Invalid request
type GetGreTunnelsIDResponseResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetGreTunnelsIDResponseResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetGreTunnelsIDResponseResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type GetGreTunnelsIDXff struct {
	Enabled *bool    `json:"enabled,omitempty"`
	Iplist  []string `json:"iplist,omitempty"`
}

func (o *GetGreTunnelsIDXff) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *GetGreTunnelsIDXff) GetIplist() []string {
	if o == nil {
		return nil
	}
	return o.Iplist
}

type GetGreTunnelsIDOptions struct {
	Xff *GetGreTunnelsIDXff `json:"xff,omitempty"`
}

func (o *GetGreTunnelsIDOptions) GetXff() *GetGreTunnelsIDXff {
	if o == nil {
		return nil
	}
	return o.Xff
}

type Pops struct {
	Gateway           *string `json:"gateway,omitempty"`
	KeepaliveLast     *string `json:"keepaliveLast,omitempty"`
	KeepaliveStatus   *string `json:"keepaliveStatus,omitempty"`
	Name              *string `json:"name,omitempty"`
	Primary           *bool   `json:"primary,omitempty"`
	Probeip           *string `json:"probeip,omitempty"`
	Throughput        *string `json:"throughput,omitempty"`
	UsertrafficLast   *string `json:"usertrafficLast,omitempty"`
	UsertrafficStatus *string `json:"usertrafficStatus,omitempty"`
}

func (o *Pops) GetGateway() *string {
	if o == nil {
		return nil
	}
	return o.Gateway
}

func (o *Pops) GetKeepaliveLast() *string {
	if o == nil {
		return nil
	}
	return o.KeepaliveLast
}

func (o *Pops) GetKeepaliveStatus() *string {
	if o == nil {
		return nil
	}
	return o.KeepaliveStatus
}

func (o *Pops) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *Pops) GetPrimary() *bool {
	if o == nil {
		return nil
	}
	return o.Primary
}

func (o *Pops) GetProbeip() *string {
	if o == nil {
		return nil
	}
	return o.Probeip
}

func (o *Pops) GetThroughput() *string {
	if o == nil {
		return nil
	}
	return o.Throughput
}

func (o *Pops) GetUsertrafficLast() *string {
	if o == nil {
		return nil
	}
	return o.UsertrafficLast
}

func (o *Pops) GetUsertrafficStatus() *string {
	if o == nil {
		return nil
	}
	return o.UsertrafficStatus
}

type GetGreTunnelsIDResult struct {
	Enabled       *bool                   `json:"enabled,omitempty"`
	ID            *int64                  `json:"id,omitempty"`
	Notes         *string                 `json:"notes,omitempty"`
	Options       *GetGreTunnelsIDOptions `json:"options,omitempty"`
	Pops          []Pops                  `json:"pops,omitempty"`
	Site          *string                 `json:"site,omitempty"`
	Sourcetype    *string                 `json:"sourcetype,omitempty"`
	Srcipidentity *string                 `json:"srcipidentity,omitempty"`
	Template      *string                 `json:"template,omitempty"`
	Vendor        *string                 `json:"vendor,omitempty"`
	Version       *int64                  `json:"version,omitempty"`
}

func (o *GetGreTunnelsIDResult) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *GetGreTunnelsIDResult) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *GetGreTunnelsIDResult) GetNotes() *string {
	if o == nil {
		return nil
	}
	return o.Notes
}

func (o *GetGreTunnelsIDResult) GetOptions() *GetGreTunnelsIDOptions {
	if o == nil {
		return nil
	}
	return o.Options
}

func (o *GetGreTunnelsIDResult) GetPops() []Pops {
	if o == nil {
		return nil
	}
	return o.Pops
}

func (o *GetGreTunnelsIDResult) GetSite() *string {
	if o == nil {
		return nil
	}
	return o.Site
}

func (o *GetGreTunnelsIDResult) GetSourcetype() *string {
	if o == nil {
		return nil
	}
	return o.Sourcetype
}

func (o *GetGreTunnelsIDResult) GetSrcipidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcipidentity
}

func (o *GetGreTunnelsIDResult) GetTemplate() *string {
	if o == nil {
		return nil
	}
	return o.Template
}

func (o *GetGreTunnelsIDResult) GetVendor() *string {
	if o == nil {
		return nil
	}
	return o.Vendor
}

func (o *GetGreTunnelsIDResult) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

// GetGreTunnelsIDResponseBody - Successful operation
type GetGreTunnelsIDResponseBody struct {
	Result []GetGreTunnelsIDResult `json:"result,omitempty"`
	Status *int64                  `json:"status,omitempty"`
	Total  *int64                  `json:"total,omitempty"`
}

func (o *GetGreTunnelsIDResponseBody) GetResult() []GetGreTunnelsIDResult {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetGreTunnelsIDResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *GetGreTunnelsIDResponseBody) GetTotal() *int64 {
	if o == nil {
		return nil
	}
	return o.Total
}

type GetGreTunnelsIDResponse struct {
	// Successful operation
	TwoHundredApplicationJSONObject *GetGreTunnelsIDResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *GetGreTunnelsIDResponseResponseBody
	// Access forbidden
	FourHundredAndThreeApplicationJSONObject *GetGreTunnelsIDResponse403ResponseBody
	// Not found
	FourHundredAndFourApplicationJSONObject *GetGreTunnelsIDResponse404ResponseBody
	// Method not allowed
	FourHundredAndFiveApplicationJSONObject *GetGreTunnelsIDResponse405ResponseBody
	// Too many requests
	FourHundredAndTwentyNineApplicationJSONObject *GetGreTunnelsIDResponse429ResponseBody
	// Internal server error
	FiveHundredApplicationJSONObject *GetGreTunnelsIDResponse500ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *GetGreTunnelsIDResponse) GetTwoHundredApplicationJSONObject() *GetGreTunnelsIDResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *GetGreTunnelsIDResponse) GetFourHundredApplicationJSONObject() *GetGreTunnelsIDResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *GetGreTunnelsIDResponse) GetFourHundredAndThreeApplicationJSONObject() *GetGreTunnelsIDResponse403ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *GetGreTunnelsIDResponse) GetFourHundredAndFourApplicationJSONObject() *GetGreTunnelsIDResponse404ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFourApplicationJSONObject
}

func (o *GetGreTunnelsIDResponse) GetFourHundredAndFiveApplicationJSONObject() *GetGreTunnelsIDResponse405ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFiveApplicationJSONObject
}

func (o *GetGreTunnelsIDResponse) GetFourHundredAndTwentyNineApplicationJSONObject() *GetGreTunnelsIDResponse429ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndTwentyNineApplicationJSONObject
}

func (o *GetGreTunnelsIDResponse) GetFiveHundredApplicationJSONObject() *GetGreTunnelsIDResponse500ResponseBody {
	if o == nil {
		return nil
	}
	return o.FiveHundredApplicationJSONObject
}

func (o *GetGreTunnelsIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetGreTunnelsIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetGreTunnelsIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
