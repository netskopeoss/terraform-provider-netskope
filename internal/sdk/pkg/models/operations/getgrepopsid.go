// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetGrePopsIDRequest struct {
	// Provide comma separated list of fields to be displayed
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// POP id
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *GetGrePopsIDRequest) GetFields() *string {
	if o == nil {
		return nil
	}
	return o.Fields
}

func (o *GetGrePopsIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// GetGrePopsIDResponse500ResponseBody - Internal server error
type GetGrePopsIDResponse500ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetGrePopsIDResponse500ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetGrePopsIDResponse500ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetGrePopsIDResponse429ResponseBody - Too many requests
type GetGrePopsIDResponse429ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetGrePopsIDResponse429ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetGrePopsIDResponse429ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetGrePopsIDResponse405ResponseBody - Method not allowed
type GetGrePopsIDResponse405ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetGrePopsIDResponse405ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetGrePopsIDResponse405ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetGrePopsIDResponse404ResponseBody - Not found
type GetGrePopsIDResponse404ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetGrePopsIDResponse404ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetGrePopsIDResponse404ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetGrePopsIDResponse403ResponseBody - Access forbidden
type GetGrePopsIDResponse403ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetGrePopsIDResponse403ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetGrePopsIDResponse403ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetGrePopsIDResponseResponseBody - Invalid request
type GetGrePopsIDResponseResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetGrePopsIDResponseResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetGrePopsIDResponseResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type Result struct {
	Acceptingtunnels *bool   `json:"acceptingtunnels,omitempty"`
	Distance         *string `json:"distance,omitempty"`
	Gateway          *string `json:"gateway,omitempty"`
	ID               *string `json:"id,omitempty"`
	Location         *string `json:"location,omitempty"`
	Name             *string `json:"name,omitempty"`
	Probeip          *string `json:"probeip,omitempty"`
	Region           *string `json:"region,omitempty"`
}

func (o *Result) GetAcceptingtunnels() *bool {
	if o == nil {
		return nil
	}
	return o.Acceptingtunnels
}

func (o *Result) GetDistance() *string {
	if o == nil {
		return nil
	}
	return o.Distance
}

func (o *Result) GetGateway() *string {
	if o == nil {
		return nil
	}
	return o.Gateway
}

func (o *Result) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Result) GetLocation() *string {
	if o == nil {
		return nil
	}
	return o.Location
}

func (o *Result) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *Result) GetProbeip() *string {
	if o == nil {
		return nil
	}
	return o.Probeip
}

func (o *Result) GetRegion() *string {
	if o == nil {
		return nil
	}
	return o.Region
}

// GetGrePopsIDResponseBody - Successful operation
type GetGrePopsIDResponseBody struct {
	Result []Result `json:"result,omitempty"`
	Status *int64   `json:"status,omitempty"`
	Total  *int64   `json:"total,omitempty"`
}

func (o *GetGrePopsIDResponseBody) GetResult() []Result {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetGrePopsIDResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *GetGrePopsIDResponseBody) GetTotal() *int64 {
	if o == nil {
		return nil
	}
	return o.Total
}

type GetGrePopsIDResponse struct {
	// Successful operation
	TwoHundredApplicationJSONObject *GetGrePopsIDResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *GetGrePopsIDResponseResponseBody
	// Access forbidden
	FourHundredAndThreeApplicationJSONObject *GetGrePopsIDResponse403ResponseBody
	// Not found
	FourHundredAndFourApplicationJSONObject *GetGrePopsIDResponse404ResponseBody
	// Method not allowed
	FourHundredAndFiveApplicationJSONObject *GetGrePopsIDResponse405ResponseBody
	// Too many requests
	FourHundredAndTwentyNineApplicationJSONObject *GetGrePopsIDResponse429ResponseBody
	// Internal server error
	FiveHundredApplicationJSONObject *GetGrePopsIDResponse500ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *GetGrePopsIDResponse) GetTwoHundredApplicationJSONObject() *GetGrePopsIDResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *GetGrePopsIDResponse) GetFourHundredApplicationJSONObject() *GetGrePopsIDResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *GetGrePopsIDResponse) GetFourHundredAndThreeApplicationJSONObject() *GetGrePopsIDResponse403ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *GetGrePopsIDResponse) GetFourHundredAndFourApplicationJSONObject() *GetGrePopsIDResponse404ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFourApplicationJSONObject
}

func (o *GetGrePopsIDResponse) GetFourHundredAndFiveApplicationJSONObject() *GetGrePopsIDResponse405ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFiveApplicationJSONObject
}

func (o *GetGrePopsIDResponse) GetFourHundredAndTwentyNineApplicationJSONObject() *GetGrePopsIDResponse429ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndTwentyNineApplicationJSONObject
}

func (o *GetGrePopsIDResponse) GetFiveHundredApplicationJSONObject() *GetGrePopsIDResponse500ResponseBody {
	if o == nil {
		return nil
	}
	return o.FiveHundredApplicationJSONObject
}

func (o *GetGrePopsIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetGrePopsIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetGrePopsIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
