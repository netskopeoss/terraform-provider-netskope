// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetPolicyNpaRulesIDRequest struct {
	// Return values only from specified fields
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// npa policy id
	ID int64 `pathParam:"style=simple,explode=false,name=id"`
}

func (o *GetPolicyNpaRulesIDRequest) GetFields() *string {
	if o == nil {
		return nil
	}
	return o.Fields
}

func (o *GetPolicyNpaRulesIDRequest) GetID() int64 {
	if o == nil {
		return 0
	}
	return o.ID
}

// GetPolicyNpaRulesIDResponseResponseBody - Invalid request
type GetPolicyNpaRulesIDResponseResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetPolicyNpaRulesIDResponseResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetPolicyNpaRulesIDResponseResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type GetPolicyNpaRulesIDAccessMethod string

const (
	GetPolicyNpaRulesIDAccessMethodClient     GetPolicyNpaRulesIDAccessMethod = "Client"
	GetPolicyNpaRulesIDAccessMethodClientless GetPolicyNpaRulesIDAccessMethod = "Clientless"
)

func (e GetPolicyNpaRulesIDAccessMethod) ToPointer() *GetPolicyNpaRulesIDAccessMethod {
	return &e
}

func (e *GetPolicyNpaRulesIDAccessMethod) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Client":
		fallthrough
	case "Clientless":
		*e = GetPolicyNpaRulesIDAccessMethod(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPolicyNpaRulesIDAccessMethod: %v", v)
	}
}

type GetPolicyNpaRulesIDActions string

const (
	GetPolicyNpaRulesIDActionsAllow       GetPolicyNpaRulesIDActions = "allow"
	GetPolicyNpaRulesIDActionsBlock       GetPolicyNpaRulesIDActions = "block"
	GetPolicyNpaRulesIDActionsAlert       GetPolicyNpaRulesIDActions = "alert"
	GetPolicyNpaRulesIDActionsQuanrantine GetPolicyNpaRulesIDActions = "quanrantine"
	GetPolicyNpaRulesIDActionsBypass      GetPolicyNpaRulesIDActions = "bypass"
)

func (e GetPolicyNpaRulesIDActions) ToPointer() *GetPolicyNpaRulesIDActions {
	return &e
}

func (e *GetPolicyNpaRulesIDActions) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "allow":
		fallthrough
	case "block":
		fallthrough
	case "alert":
		fallthrough
	case "quanrantine":
		fallthrough
	case "bypass":
		*e = GetPolicyNpaRulesIDActions(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPolicyNpaRulesIDActions: %v", v)
	}
}

type GetPolicyNpaRulesIDDlpActions struct {
	Actions    []GetPolicyNpaRulesIDActions `json:"actions,omitempty"`
	DlpProfile *string                      `json:"dlp_profile,omitempty"`
}

func (o *GetPolicyNpaRulesIDDlpActions) GetActions() []GetPolicyNpaRulesIDActions {
	if o == nil {
		return nil
	}
	return o.Actions
}

func (o *GetPolicyNpaRulesIDDlpActions) GetDlpProfile() *string {
	if o == nil {
		return nil
	}
	return o.DlpProfile
}

type GetPolicyNpaRulesIDActionName string

const (
	GetPolicyNpaRulesIDActionNameAllow GetPolicyNpaRulesIDActionName = "allow"
	GetPolicyNpaRulesIDActionNameBlock GetPolicyNpaRulesIDActionName = "block"
)

func (e GetPolicyNpaRulesIDActionName) ToPointer() *GetPolicyNpaRulesIDActionName {
	return &e
}

func (e *GetPolicyNpaRulesIDActionName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "allow":
		fallthrough
	case "block":
		*e = GetPolicyNpaRulesIDActionName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPolicyNpaRulesIDActionName: %v", v)
	}
}

type GetPolicyNpaRulesIDMatchCriteriaAction struct {
	ActionName *GetPolicyNpaRulesIDActionName `json:"action_name,omitempty"`
}

func (o *GetPolicyNpaRulesIDMatchCriteriaAction) GetActionName() *GetPolicyNpaRulesIDActionName {
	if o == nil {
		return nil
	}
	return o.ActionName
}

type GetPolicyNpaRulesIDPolicyType string

const (
	GetPolicyNpaRulesIDPolicyTypePrivateApp GetPolicyNpaRulesIDPolicyType = "private-app"
)

func (e GetPolicyNpaRulesIDPolicyType) ToPointer() *GetPolicyNpaRulesIDPolicyType {
	return &e
}

func (e *GetPolicyNpaRulesIDPolicyType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private-app":
		*e = GetPolicyNpaRulesIDPolicyType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPolicyNpaRulesIDPolicyType: %v", v)
	}
}

type GetPolicyNpaRulesIDActivity string

const (
	GetPolicyNpaRulesIDActivityAny GetPolicyNpaRulesIDActivity = "any"
)

func (e GetPolicyNpaRulesIDActivity) ToPointer() *GetPolicyNpaRulesIDActivity {
	return &e
}

func (e *GetPolicyNpaRulesIDActivity) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "any":
		*e = GetPolicyNpaRulesIDActivity(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPolicyNpaRulesIDActivity: %v", v)
	}
}

type GetPolicyNpaRulesIDActivities struct {
	Activity          *GetPolicyNpaRulesIDActivity `json:"activity,omitempty"`
	ListOfConstraints []string                     `json:"list_of_constraints,omitempty"`
}

func (o *GetPolicyNpaRulesIDActivities) GetActivity() *GetPolicyNpaRulesIDActivity {
	if o == nil {
		return nil
	}
	return o.Activity
}

func (o *GetPolicyNpaRulesIDActivities) GetListOfConstraints() []string {
	if o == nil {
		return nil
	}
	return o.ListOfConstraints
}

type GetPolicyNpaRulesIDPrivateAppsWithActivities struct {
	Activities []GetPolicyNpaRulesIDActivities `json:"activities,omitempty"`
	AppName    *string                         `json:"appName,omitempty"`
}

func (o *GetPolicyNpaRulesIDPrivateAppsWithActivities) GetActivities() []GetPolicyNpaRulesIDActivities {
	if o == nil {
		return nil
	}
	return o.Activities
}

func (o *GetPolicyNpaRulesIDPrivateAppsWithActivities) GetAppName() *string {
	if o == nil {
		return nil
	}
	return o.AppName
}

type GetPolicyNpaRulesIDUserType string

const (
	GetPolicyNpaRulesIDUserTypeUser GetPolicyNpaRulesIDUserType = "user"
)

func (e GetPolicyNpaRulesIDUserType) ToPointer() *GetPolicyNpaRulesIDUserType {
	return &e
}

func (e *GetPolicyNpaRulesIDUserType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "user":
		*e = GetPolicyNpaRulesIDUserType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPolicyNpaRulesIDUserType: %v", v)
	}
}

type GetPolicyNpaRulesIDRuleData struct {
	AccessMethod              *GetPolicyNpaRulesIDAccessMethod               `json:"access_method,omitempty"`
	BNegateNetLocation        *bool                                          `json:"b_negateNetLocation,omitempty"`
	BNegateSrcCountries       *bool                                          `json:"b_negateSrcCountries,omitempty"`
	Classification            *string                                        `json:"classification,omitempty"`
	DlpActions                []GetPolicyNpaRulesIDDlpActions                `json:"dlp_actions,omitempty"`
	ExternalDlp               *bool                                          `json:"external_dlp,omitempty"`
	JSONVersion               *int64                                         `json:"json_version,omitempty"`
	MatchCriteriaAction       *GetPolicyNpaRulesIDMatchCriteriaAction        `json:"match_criteria_action,omitempty"`
	NetLocationObj            []string                                       `json:"net_location_obj,omitempty"`
	OrganizationUnits         []string                                       `json:"organization_units,omitempty"`
	PolicyType                *GetPolicyNpaRulesIDPolicyType                 `json:"policy_type,omitempty"`
	PrivateAppIds             []string                                       `json:"privateAppIds,omitempty"`
	PrivateAppTagIds          []string                                       `json:"privateAppTagIds,omitempty"`
	PrivateAppTags            []string                                       `json:"privateAppTags,omitempty"`
	PrivateApps               []string                                       `json:"privateApps,omitempty"`
	PrivateAppsWithActivities []GetPolicyNpaRulesIDPrivateAppsWithActivities `json:"privateAppsWithActivities,omitempty"`
	ShowDlpProfileActionTable *bool                                          `json:"show_dlp_profile_action_table,omitempty"`
	SrcCountries              []string                                       `json:"srcCountries,omitempty"`
	UserGroups                []string                                       `json:"userGroups,omitempty"`
	UserType                  *GetPolicyNpaRulesIDUserType                   `json:"userType,omitempty"`
	Users                     []string                                       `json:"users,omitempty"`
	Version                   *int64                                         `json:"version,omitempty"`
}

func (o *GetPolicyNpaRulesIDRuleData) GetAccessMethod() *GetPolicyNpaRulesIDAccessMethod {
	if o == nil {
		return nil
	}
	return o.AccessMethod
}

func (o *GetPolicyNpaRulesIDRuleData) GetBNegateNetLocation() *bool {
	if o == nil {
		return nil
	}
	return o.BNegateNetLocation
}

func (o *GetPolicyNpaRulesIDRuleData) GetBNegateSrcCountries() *bool {
	if o == nil {
		return nil
	}
	return o.BNegateSrcCountries
}

func (o *GetPolicyNpaRulesIDRuleData) GetClassification() *string {
	if o == nil {
		return nil
	}
	return o.Classification
}

func (o *GetPolicyNpaRulesIDRuleData) GetDlpActions() []GetPolicyNpaRulesIDDlpActions {
	if o == nil {
		return nil
	}
	return o.DlpActions
}

func (o *GetPolicyNpaRulesIDRuleData) GetExternalDlp() *bool {
	if o == nil {
		return nil
	}
	return o.ExternalDlp
}

func (o *GetPolicyNpaRulesIDRuleData) GetJSONVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.JSONVersion
}

func (o *GetPolicyNpaRulesIDRuleData) GetMatchCriteriaAction() *GetPolicyNpaRulesIDMatchCriteriaAction {
	if o == nil {
		return nil
	}
	return o.MatchCriteriaAction
}

func (o *GetPolicyNpaRulesIDRuleData) GetNetLocationObj() []string {
	if o == nil {
		return nil
	}
	return o.NetLocationObj
}

func (o *GetPolicyNpaRulesIDRuleData) GetOrganizationUnits() []string {
	if o == nil {
		return nil
	}
	return o.OrganizationUnits
}

func (o *GetPolicyNpaRulesIDRuleData) GetPolicyType() *GetPolicyNpaRulesIDPolicyType {
	if o == nil {
		return nil
	}
	return o.PolicyType
}

func (o *GetPolicyNpaRulesIDRuleData) GetPrivateAppIds() []string {
	if o == nil {
		return nil
	}
	return o.PrivateAppIds
}

func (o *GetPolicyNpaRulesIDRuleData) GetPrivateAppTagIds() []string {
	if o == nil {
		return nil
	}
	return o.PrivateAppTagIds
}

func (o *GetPolicyNpaRulesIDRuleData) GetPrivateAppTags() []string {
	if o == nil {
		return nil
	}
	return o.PrivateAppTags
}

func (o *GetPolicyNpaRulesIDRuleData) GetPrivateApps() []string {
	if o == nil {
		return nil
	}
	return o.PrivateApps
}

func (o *GetPolicyNpaRulesIDRuleData) GetPrivateAppsWithActivities() []GetPolicyNpaRulesIDPrivateAppsWithActivities {
	if o == nil {
		return nil
	}
	return o.PrivateAppsWithActivities
}

func (o *GetPolicyNpaRulesIDRuleData) GetShowDlpProfileActionTable() *bool {
	if o == nil {
		return nil
	}
	return o.ShowDlpProfileActionTable
}

func (o *GetPolicyNpaRulesIDRuleData) GetSrcCountries() []string {
	if o == nil {
		return nil
	}
	return o.SrcCountries
}

func (o *GetPolicyNpaRulesIDRuleData) GetUserGroups() []string {
	if o == nil {
		return nil
	}
	return o.UserGroups
}

func (o *GetPolicyNpaRulesIDRuleData) GetUserType() *GetPolicyNpaRulesIDUserType {
	if o == nil {
		return nil
	}
	return o.UserType
}

func (o *GetPolicyNpaRulesIDRuleData) GetUsers() []string {
	if o == nil {
		return nil
	}
	return o.Users
}

func (o *GetPolicyNpaRulesIDRuleData) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

type GetPolicyNpaRulesIDData struct {
	RuleData *GetPolicyNpaRulesIDRuleData `json:"rule_data,omitempty"`
	RuleID   *int64                       `json:"rule_id,omitempty"`
	RuleName *string                      `json:"rule_name,omitempty"`
}

func (o *GetPolicyNpaRulesIDData) GetRuleData() *GetPolicyNpaRulesIDRuleData {
	if o == nil {
		return nil
	}
	return o.RuleData
}

func (o *GetPolicyNpaRulesIDData) GetRuleID() *int64 {
	if o == nil {
		return nil
	}
	return o.RuleID
}

func (o *GetPolicyNpaRulesIDData) GetRuleName() *string {
	if o == nil {
		return nil
	}
	return o.RuleName
}

type GetPolicyNpaRulesIDStatus string

const (
	GetPolicyNpaRulesIDStatusSuccess GetPolicyNpaRulesIDStatus = "success"
	GetPolicyNpaRulesIDStatusError   GetPolicyNpaRulesIDStatus = "error"
)

func (e GetPolicyNpaRulesIDStatus) ToPointer() *GetPolicyNpaRulesIDStatus {
	return &e
}

func (e *GetPolicyNpaRulesIDStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "error":
		*e = GetPolicyNpaRulesIDStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPolicyNpaRulesIDStatus: %v", v)
	}
}

// GetPolicyNpaRulesIDResponseBody - successful operation
type GetPolicyNpaRulesIDResponseBody struct {
	Data   *GetPolicyNpaRulesIDData   `json:"data,omitempty"`
	Status *GetPolicyNpaRulesIDStatus `json:"status,omitempty"`
}

func (o *GetPolicyNpaRulesIDResponseBody) GetData() *GetPolicyNpaRulesIDData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *GetPolicyNpaRulesIDResponseBody) GetStatus() *GetPolicyNpaRulesIDStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

type GetPolicyNpaRulesIDResponse struct {
	// successful operation
	TwoHundredApplicationJSONObject *GetPolicyNpaRulesIDResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *GetPolicyNpaRulesIDResponseResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *GetPolicyNpaRulesIDResponse) GetTwoHundredApplicationJSONObject() *GetPolicyNpaRulesIDResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *GetPolicyNpaRulesIDResponse) GetFourHundredApplicationJSONObject() *GetPolicyNpaRulesIDResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *GetPolicyNpaRulesIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetPolicyNpaRulesIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetPolicyNpaRulesIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
