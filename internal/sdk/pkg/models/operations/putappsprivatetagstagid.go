// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PutAppsPrivateTagsTagIDPublisherTags struct {
	TagID   *int    `json:"tag_id,omitempty"`
	TagName *string `json:"tag_name,omitempty"`
}

func (o *PutAppsPrivateTagsTagIDPublisherTags) GetTagID() *int {
	if o == nil {
		return nil
	}
	return o.TagID
}

func (o *PutAppsPrivateTagsTagIDPublisherTags) GetTagName() *string {
	if o == nil {
		return nil
	}
	return o.TagName
}

type PutAppsPrivateTagsTagIDTags struct {
	TagID   *int    `json:"tag_id,omitempty"`
	TagName *string `json:"tag_name,omitempty"`
}

func (o *PutAppsPrivateTagsTagIDTags) GetTagID() *int {
	if o == nil {
		return nil
	}
	return o.TagID
}

func (o *PutAppsPrivateTagsTagIDTags) GetTagName() *string {
	if o == nil {
		return nil
	}
	return o.TagName
}

type PutAppsPrivateTagsTagIDRequestBody struct {
	ID            *string                                `json:"id,omitempty"`
	Ids           []string                               `json:"ids,omitempty"`
	PublisherTags []PutAppsPrivateTagsTagIDPublisherTags `json:"publisher_tags,omitempty"`
	Tags          []PutAppsPrivateTagsTagIDTags          `json:"tags,omitempty"`
}

func (o *PutAppsPrivateTagsTagIDRequestBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *PutAppsPrivateTagsTagIDRequestBody) GetIds() []string {
	if o == nil {
		return nil
	}
	return o.Ids
}

func (o *PutAppsPrivateTagsTagIDRequestBody) GetPublisherTags() []PutAppsPrivateTagsTagIDPublisherTags {
	if o == nil {
		return nil
	}
	return o.PublisherTags
}

func (o *PutAppsPrivateTagsTagIDRequestBody) GetTags() []PutAppsPrivateTagsTagIDTags {
	if o == nil {
		return nil
	}
	return o.Tags
}

type PutAppsPrivateTagsTagIDRequest struct {
	RequestBody PutAppsPrivateTagsTagIDRequestBody `request:"mediaType=application/json"`
	// tag id
	TagID int `pathParam:"style=simple,explode=false,name=tag_id"`
}

func (o *PutAppsPrivateTagsTagIDRequest) GetRequestBody() PutAppsPrivateTagsTagIDRequestBody {
	if o == nil {
		return PutAppsPrivateTagsTagIDRequestBody{}
	}
	return o.RequestBody
}

func (o *PutAppsPrivateTagsTagIDRequest) GetTagID() int {
	if o == nil {
		return 0
	}
	return o.TagID
}

// PutAppsPrivateTagsTagIDResponseResponseBody - Invalid request
type PutAppsPrivateTagsTagIDResponseResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PutAppsPrivateTagsTagIDResponseResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PutAppsPrivateTagsTagIDResponseResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type PutAppsPrivateTagsTagIDData struct {
	TagID   *int    `json:"tag_id,omitempty"`
	TagName *string `json:"tag_name,omitempty"`
}

func (o *PutAppsPrivateTagsTagIDData) GetTagID() *int {
	if o == nil {
		return nil
	}
	return o.TagID
}

func (o *PutAppsPrivateTagsTagIDData) GetTagName() *string {
	if o == nil {
		return nil
	}
	return o.TagName
}

type PutAppsPrivateTagsTagIDStatus string

const (
	PutAppsPrivateTagsTagIDStatusSuccess  PutAppsPrivateTagsTagIDStatus = "success"
	PutAppsPrivateTagsTagIDStatusNotFound PutAppsPrivateTagsTagIDStatus = "not found"
)

func (e PutAppsPrivateTagsTagIDStatus) ToPointer() *PutAppsPrivateTagsTagIDStatus {
	return &e
}

func (e *PutAppsPrivateTagsTagIDStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "not found":
		*e = PutAppsPrivateTagsTagIDStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutAppsPrivateTagsTagIDStatus: %v", v)
	}
}

// PutAppsPrivateTagsTagIDResponseBody - successful operation
type PutAppsPrivateTagsTagIDResponseBody struct {
	Data   []PutAppsPrivateTagsTagIDData  `json:"data,omitempty"`
	Status *PutAppsPrivateTagsTagIDStatus `json:"status,omitempty"`
}

func (o *PutAppsPrivateTagsTagIDResponseBody) GetData() []PutAppsPrivateTagsTagIDData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *PutAppsPrivateTagsTagIDResponseBody) GetStatus() *PutAppsPrivateTagsTagIDStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

type PutAppsPrivateTagsTagIDResponse struct {
	// successful operation
	TwoHundredApplicationJSONObject *PutAppsPrivateTagsTagIDResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *PutAppsPrivateTagsTagIDResponseResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *PutAppsPrivateTagsTagIDResponse) GetTwoHundredApplicationJSONObject() *PutAppsPrivateTagsTagIDResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *PutAppsPrivateTagsTagIDResponse) GetFourHundredApplicationJSONObject() *PutAppsPrivateTagsTagIDResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *PutAppsPrivateTagsTagIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PutAppsPrivateTagsTagIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PutAppsPrivateTagsTagIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
