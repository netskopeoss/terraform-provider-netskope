// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/netskope/terraform-provider-ns/internal/sdk/pkg/utils"
	"net/http"
)

type GetSteeringIpsecTunnelsRequest struct {
	// Provide comma separated list of fields to be displayed
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Max number of records to retrieve
	Limit *int64 `default:"100" queryParam:"style=form,explode=true,name=limit"`
	// Offset used to shift the window
	Offset *int64 `default:"0" queryParam:"style=form,explode=true,name=offset"`
	// IPSec tunnel POP name
	Pop *string `queryParam:"style=form,explode=true,name=pop"`
	// IPSec tunnel site
	Site *string `queryParam:"style=form,explode=true,name=site"`
	// IPSec tunnel sortby column
	Sortby *string `queryParam:"style=form,explode=true,name=sortby"`
	// IPSec tunnel sortorder asc or desc. Default is asc
	Sortorder *string `queryParam:"style=form,explode=true,name=sortorder"`
	// IPSec tunnel sourcetype
	Sourcetype *string `queryParam:"style=form,explode=true,name=sourcetype"`
	// IPSec tunnel source identity
	Srcidentity *string `queryParam:"style=form,explode=true,name=srcidentity"`
	// IPSec tunnel source ip identity
	Srcipidentity *string `queryParam:"style=form,explode=true,name=srcipidentity"`
	// IPSec tunnel status
	Status *string `queryParam:"style=form,explode=true,name=status"`
}

func (g GetSteeringIpsecTunnelsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetSteeringIpsecTunnelsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetSteeringIpsecTunnelsRequest) GetFields() *string {
	if o == nil {
		return nil
	}
	return o.Fields
}

func (o *GetSteeringIpsecTunnelsRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *GetSteeringIpsecTunnelsRequest) GetOffset() *int64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

func (o *GetSteeringIpsecTunnelsRequest) GetPop() *string {
	if o == nil {
		return nil
	}
	return o.Pop
}

func (o *GetSteeringIpsecTunnelsRequest) GetSite() *string {
	if o == nil {
		return nil
	}
	return o.Site
}

func (o *GetSteeringIpsecTunnelsRequest) GetSortby() *string {
	if o == nil {
		return nil
	}
	return o.Sortby
}

func (o *GetSteeringIpsecTunnelsRequest) GetSortorder() *string {
	if o == nil {
		return nil
	}
	return o.Sortorder
}

func (o *GetSteeringIpsecTunnelsRequest) GetSourcetype() *string {
	if o == nil {
		return nil
	}
	return o.Sourcetype
}

func (o *GetSteeringIpsecTunnelsRequest) GetSrcidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcidentity
}

func (o *GetSteeringIpsecTunnelsRequest) GetSrcipidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcipidentity
}

func (o *GetSteeringIpsecTunnelsRequest) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetSteeringIpsecTunnelsResponse500ResponseBody - Internal server error
type GetSteeringIpsecTunnelsResponse500ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetSteeringIpsecTunnelsResponse500ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetSteeringIpsecTunnelsResponse500ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetSteeringIpsecTunnelsResponse429ResponseBody - Too many requests
type GetSteeringIpsecTunnelsResponse429ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetSteeringIpsecTunnelsResponse429ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetSteeringIpsecTunnelsResponse429ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetSteeringIpsecTunnelsResponse405ResponseBody - Method not allowed
type GetSteeringIpsecTunnelsResponse405ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetSteeringIpsecTunnelsResponse405ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetSteeringIpsecTunnelsResponse405ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetSteeringIpsecTunnelsResponse403ResponseBody - Access forbidden
type GetSteeringIpsecTunnelsResponse403ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetSteeringIpsecTunnelsResponse403ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetSteeringIpsecTunnelsResponse403ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetSteeringIpsecTunnelsResponseResponseBody - Invalid request
type GetSteeringIpsecTunnelsResponseResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetSteeringIpsecTunnelsResponseResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetSteeringIpsecTunnelsResponseResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type GetSteeringIpsecTunnelsXff struct {
	Enabled *bool    `json:"enabled,omitempty"`
	Iplist  []string `json:"iplist,omitempty"`
}

func (o *GetSteeringIpsecTunnelsXff) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *GetSteeringIpsecTunnelsXff) GetIplist() []string {
	if o == nil {
		return nil
	}
	return o.Iplist
}

type GetSteeringIpsecTunnelsOptions struct {
	Reauth *bool                       `json:"reauth,omitempty"`
	Rekey  *bool                       `json:"rekey,omitempty"`
	Xff    *GetSteeringIpsecTunnelsXff `json:"xff,omitempty"`
}

func (o *GetSteeringIpsecTunnelsOptions) GetReauth() *bool {
	if o == nil {
		return nil
	}
	return o.Reauth
}

func (o *GetSteeringIpsecTunnelsOptions) GetRekey() *bool {
	if o == nil {
		return nil
	}
	return o.Rekey
}

func (o *GetSteeringIpsecTunnelsOptions) GetXff() *GetSteeringIpsecTunnelsXff {
	if o == nil {
		return nil
	}
	return o.Xff
}

type GetSteeringIpsecTunnelsPops struct {
	Gateway    *string `json:"gateway,omitempty"`
	Name       *string `json:"name,omitempty"`
	Primary    *bool   `json:"primary,omitempty"`
	Probeip    *string `json:"probeip,omitempty"`
	Since      *string `json:"since,omitempty"`
	Status     *string `json:"status,omitempty"`
	Throughput *string `json:"throughput,omitempty"`
}

func (o *GetSteeringIpsecTunnelsPops) GetGateway() *string {
	if o == nil {
		return nil
	}
	return o.Gateway
}

func (o *GetSteeringIpsecTunnelsPops) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *GetSteeringIpsecTunnelsPops) GetPrimary() *bool {
	if o == nil {
		return nil
	}
	return o.Primary
}

func (o *GetSteeringIpsecTunnelsPops) GetProbeip() *string {
	if o == nil {
		return nil
	}
	return o.Probeip
}

func (o *GetSteeringIpsecTunnelsPops) GetSince() *string {
	if o == nil {
		return nil
	}
	return o.Since
}

func (o *GetSteeringIpsecTunnelsPops) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *GetSteeringIpsecTunnelsPops) GetThroughput() *string {
	if o == nil {
		return nil
	}
	return o.Throughput
}

type GetSteeringIpsecTunnelsResult struct {
	Bandwidth     *int64                          `json:"bandwidth,omitempty"`
	Enabled       *bool                           `json:"enabled,omitempty"`
	Encryption    *string                         `json:"encryption,omitempty"`
	ID            *int64                          `json:"id,omitempty"`
	Notes         *string                         `json:"notes,omitempty"`
	Options       *GetSteeringIpsecTunnelsOptions `json:"options,omitempty"`
	Pops          []GetSteeringIpsecTunnelsPops   `json:"pops,omitempty"`
	Site          *string                         `json:"site,omitempty"`
	Sourcetype    *string                         `json:"sourcetype,omitempty"`
	Srcidentity   *string                         `json:"srcidentity,omitempty"`
	Srcipidentity *string                         `json:"srcipidentity,omitempty"`
	Template      *string                         `json:"template,omitempty"`
	Vendor        *string                         `json:"vendor,omitempty"`
	Version       *int64                          `json:"version,omitempty"`
}

func (o *GetSteeringIpsecTunnelsResult) GetBandwidth() *int64 {
	if o == nil {
		return nil
	}
	return o.Bandwidth
}

func (o *GetSteeringIpsecTunnelsResult) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *GetSteeringIpsecTunnelsResult) GetEncryption() *string {
	if o == nil {
		return nil
	}
	return o.Encryption
}

func (o *GetSteeringIpsecTunnelsResult) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *GetSteeringIpsecTunnelsResult) GetNotes() *string {
	if o == nil {
		return nil
	}
	return o.Notes
}

func (o *GetSteeringIpsecTunnelsResult) GetOptions() *GetSteeringIpsecTunnelsOptions {
	if o == nil {
		return nil
	}
	return o.Options
}

func (o *GetSteeringIpsecTunnelsResult) GetPops() []GetSteeringIpsecTunnelsPops {
	if o == nil {
		return nil
	}
	return o.Pops
}

func (o *GetSteeringIpsecTunnelsResult) GetSite() *string {
	if o == nil {
		return nil
	}
	return o.Site
}

func (o *GetSteeringIpsecTunnelsResult) GetSourcetype() *string {
	if o == nil {
		return nil
	}
	return o.Sourcetype
}

func (o *GetSteeringIpsecTunnelsResult) GetSrcidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcidentity
}

func (o *GetSteeringIpsecTunnelsResult) GetSrcipidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcipidentity
}

func (o *GetSteeringIpsecTunnelsResult) GetTemplate() *string {
	if o == nil {
		return nil
	}
	return o.Template
}

func (o *GetSteeringIpsecTunnelsResult) GetVendor() *string {
	if o == nil {
		return nil
	}
	return o.Vendor
}

func (o *GetSteeringIpsecTunnelsResult) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

// GetSteeringIpsecTunnelsResponseBody - Successful operation
type GetSteeringIpsecTunnelsResponseBody struct {
	Result []GetSteeringIpsecTunnelsResult `json:"result,omitempty"`
	Status *int64                          `json:"status,omitempty"`
	Total  *int64                          `json:"total,omitempty"`
}

func (o *GetSteeringIpsecTunnelsResponseBody) GetResult() []GetSteeringIpsecTunnelsResult {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetSteeringIpsecTunnelsResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *GetSteeringIpsecTunnelsResponseBody) GetTotal() *int64 {
	if o == nil {
		return nil
	}
	return o.Total
}

type GetSteeringIpsecTunnelsResponse struct {
	// Successful operation
	TwoHundredApplicationJSONObject *GetSteeringIpsecTunnelsResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *GetSteeringIpsecTunnelsResponseResponseBody
	// Access forbidden
	FourHundredAndThreeApplicationJSONObject *GetSteeringIpsecTunnelsResponse403ResponseBody
	// Method not allowed
	FourHundredAndFiveApplicationJSONObject *GetSteeringIpsecTunnelsResponse405ResponseBody
	// Too many requests
	FourHundredAndTwentyNineApplicationJSONObject *GetSteeringIpsecTunnelsResponse429ResponseBody
	// Internal server error
	FiveHundredApplicationJSONObject *GetSteeringIpsecTunnelsResponse500ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *GetSteeringIpsecTunnelsResponse) GetTwoHundredApplicationJSONObject() *GetSteeringIpsecTunnelsResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *GetSteeringIpsecTunnelsResponse) GetFourHundredApplicationJSONObject() *GetSteeringIpsecTunnelsResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *GetSteeringIpsecTunnelsResponse) GetFourHundredAndThreeApplicationJSONObject() *GetSteeringIpsecTunnelsResponse403ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *GetSteeringIpsecTunnelsResponse) GetFourHundredAndFiveApplicationJSONObject() *GetSteeringIpsecTunnelsResponse405ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFiveApplicationJSONObject
}

func (o *GetSteeringIpsecTunnelsResponse) GetFourHundredAndTwentyNineApplicationJSONObject() *GetSteeringIpsecTunnelsResponse429ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndTwentyNineApplicationJSONObject
}

func (o *GetSteeringIpsecTunnelsResponse) GetFiveHundredApplicationJSONObject() *GetSteeringIpsecTunnelsResponse500ResponseBody {
	if o == nil {
		return nil
	}
	return o.FiveHundredApplicationJSONObject
}

func (o *GetSteeringIpsecTunnelsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetSteeringIpsecTunnelsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetSteeringIpsecTunnelsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
