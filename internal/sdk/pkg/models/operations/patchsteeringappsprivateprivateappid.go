// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy/terraform-provider-terraform/internal/sdk/pkg/models/shared"
	"net/http"
)

// PatchSteeringAppsPrivatePrivateAppIDQueryParamSilent - flag to skip output except status code
type PatchSteeringAppsPrivatePrivateAppIDQueryParamSilent string

const (
	PatchSteeringAppsPrivatePrivateAppIDQueryParamSilentOne  PatchSteeringAppsPrivatePrivateAppIDQueryParamSilent = "1"
	PatchSteeringAppsPrivatePrivateAppIDQueryParamSilentZero PatchSteeringAppsPrivatePrivateAppIDQueryParamSilent = "0"
)

func (e PatchSteeringAppsPrivatePrivateAppIDQueryParamSilent) ToPointer() *PatchSteeringAppsPrivatePrivateAppIDQueryParamSilent {
	return &e
}

func (e *PatchSteeringAppsPrivatePrivateAppIDQueryParamSilent) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "1":
		fallthrough
	case "0":
		*e = PatchSteeringAppsPrivatePrivateAppIDQueryParamSilent(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchSteeringAppsPrivatePrivateAppIDQueryParamSilent: %v", v)
	}
}

type PatchSteeringAppsPrivatePrivateAppIDRequest struct {
	// private apps id
	PrivateAppID int `pathParam:"style=simple,explode=false,name=private_app_id"`
	// flag to skip output except status code
	Silent                *PatchSteeringAppsPrivatePrivateAppIDQueryParamSilent `queryParam:"style=form,explode=true,name=silent"`
	PrivateAppsPutRequest shared.PrivateAppsPutRequest                          `request:"mediaType=application/json"`
}

func (o *PatchSteeringAppsPrivatePrivateAppIDRequest) GetPrivateAppID() int {
	if o == nil {
		return 0
	}
	return o.PrivateAppID
}

func (o *PatchSteeringAppsPrivatePrivateAppIDRequest) GetSilent() *PatchSteeringAppsPrivatePrivateAppIDQueryParamSilent {
	if o == nil {
		return nil
	}
	return o.Silent
}

func (o *PatchSteeringAppsPrivatePrivateAppIDRequest) GetPrivateAppsPutRequest() shared.PrivateAppsPutRequest {
	if o == nil {
		return shared.PrivateAppsPutRequest{}
	}
	return o.PrivateAppsPutRequest
}

type PatchSteeringAppsPrivatePrivateAppIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// successful operation
	PrivateAppsResponse *shared.PrivateAppsResponse
	// Invalid request
	PrivateAppsResponse400 *shared.PrivateAppsResponse400
}

func (o *PatchSteeringAppsPrivatePrivateAppIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PatchSteeringAppsPrivatePrivateAppIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PatchSteeringAppsPrivatePrivateAppIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PatchSteeringAppsPrivatePrivateAppIDResponse) GetPrivateAppsResponse() *shared.PrivateAppsResponse {
	if o == nil {
		return nil
	}
	return o.PrivateAppsResponse
}

func (o *PatchSteeringAppsPrivatePrivateAppIDResponse) GetPrivateAppsResponse400() *shared.PrivateAppsResponse400 {
	if o == nil {
		return nil
	}
	return o.PrivateAppsResponse400
}
