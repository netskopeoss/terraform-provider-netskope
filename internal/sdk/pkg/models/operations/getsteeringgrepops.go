// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"ns/internal/sdk/pkg/utils"
)

type GetSteeringGrePopsRequest struct {
	// POP country, requires ISO-3166 country code and return POPs closest to value
	Country *string `queryParam:"style=form,explode=true,name=country"`
	// Provide comma separated list of fields to be displayed
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// POP ipaddress, return POPs closest to value
	IP *string `queryParam:"style=form,explode=true,name=ip"`
	// POP latitude, lat requires long in combination and return POPs closest to value
	Lat *string `queryParam:"style=form,explode=true,name=lat"`
	// Max number of POPs to retrieve
	Limit *int64 `default:"100" queryParam:"style=form,explode=true,name=limit"`
	// POP longitude, long requires lat in combination and return POPs closest to value
	Long *string `queryParam:"style=form,explode=true,name=long"`
	// POP name
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Offset used to shift the output window
	Offset *int64 `default:"0" queryParam:"style=form,explode=true,name=offset"`
	// POP region, requires ISO-3166 region code and return POPs closest to value
	Region *string `queryParam:"style=form,explode=true,name=region"`
}

func (g GetSteeringGrePopsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetSteeringGrePopsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetSteeringGrePopsRequest) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

func (o *GetSteeringGrePopsRequest) GetFields() *string {
	if o == nil {
		return nil
	}
	return o.Fields
}

func (o *GetSteeringGrePopsRequest) GetIP() *string {
	if o == nil {
		return nil
	}
	return o.IP
}

func (o *GetSteeringGrePopsRequest) GetLat() *string {
	if o == nil {
		return nil
	}
	return o.Lat
}

func (o *GetSteeringGrePopsRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *GetSteeringGrePopsRequest) GetLong() *string {
	if o == nil {
		return nil
	}
	return o.Long
}

func (o *GetSteeringGrePopsRequest) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *GetSteeringGrePopsRequest) GetOffset() *int64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

func (o *GetSteeringGrePopsRequest) GetRegion() *string {
	if o == nil {
		return nil
	}
	return o.Region
}

// GetSteeringGrePopsResponse500ResponseBody - Internal server error
type GetSteeringGrePopsResponse500ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetSteeringGrePopsResponse500ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetSteeringGrePopsResponse500ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetSteeringGrePopsResponse429ResponseBody - Too many requests
type GetSteeringGrePopsResponse429ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetSteeringGrePopsResponse429ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetSteeringGrePopsResponse429ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetSteeringGrePopsResponse405ResponseBody - Method not allowed
type GetSteeringGrePopsResponse405ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetSteeringGrePopsResponse405ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetSteeringGrePopsResponse405ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetSteeringGrePopsResponse403ResponseBody - Access forbidden
type GetSteeringGrePopsResponse403ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetSteeringGrePopsResponse403ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetSteeringGrePopsResponse403ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetSteeringGrePopsResponseResponseBody - Invalid request
type GetSteeringGrePopsResponseResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetSteeringGrePopsResponseResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetSteeringGrePopsResponseResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type GetSteeringGrePopsResult struct {
	Acceptingtunnels *bool   `json:"acceptingtunnels,omitempty"`
	Distance         *string `json:"distance,omitempty"`
	Gateway          *string `json:"gateway,omitempty"`
	ID               *string `json:"id,omitempty"`
	Location         *string `json:"location,omitempty"`
	Name             *string `json:"name,omitempty"`
	Probeip          *string `json:"probeip,omitempty"`
	Region           *string `json:"region,omitempty"`
}

func (o *GetSteeringGrePopsResult) GetAcceptingtunnels() *bool {
	if o == nil {
		return nil
	}
	return o.Acceptingtunnels
}

func (o *GetSteeringGrePopsResult) GetDistance() *string {
	if o == nil {
		return nil
	}
	return o.Distance
}

func (o *GetSteeringGrePopsResult) GetGateway() *string {
	if o == nil {
		return nil
	}
	return o.Gateway
}

func (o *GetSteeringGrePopsResult) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *GetSteeringGrePopsResult) GetLocation() *string {
	if o == nil {
		return nil
	}
	return o.Location
}

func (o *GetSteeringGrePopsResult) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *GetSteeringGrePopsResult) GetProbeip() *string {
	if o == nil {
		return nil
	}
	return o.Probeip
}

func (o *GetSteeringGrePopsResult) GetRegion() *string {
	if o == nil {
		return nil
	}
	return o.Region
}

// GetSteeringGrePopsResponseBody - Successful operation
type GetSteeringGrePopsResponseBody struct {
	Result []GetSteeringGrePopsResult `json:"result,omitempty"`
	Status *int64                     `json:"status,omitempty"`
	Total  *int64                     `json:"total,omitempty"`
}

func (o *GetSteeringGrePopsResponseBody) GetResult() []GetSteeringGrePopsResult {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetSteeringGrePopsResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *GetSteeringGrePopsResponseBody) GetTotal() *int64 {
	if o == nil {
		return nil
	}
	return o.Total
}

type GetSteeringGrePopsResponse struct {
	// Successful operation
	TwoHundredApplicationJSONObject *GetSteeringGrePopsResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *GetSteeringGrePopsResponseResponseBody
	// Access forbidden
	FourHundredAndThreeApplicationJSONObject *GetSteeringGrePopsResponse403ResponseBody
	// Method not allowed
	FourHundredAndFiveApplicationJSONObject *GetSteeringGrePopsResponse405ResponseBody
	// Too many requests
	FourHundredAndTwentyNineApplicationJSONObject *GetSteeringGrePopsResponse429ResponseBody
	// Internal server error
	FiveHundredApplicationJSONObject *GetSteeringGrePopsResponse500ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *GetSteeringGrePopsResponse) GetTwoHundredApplicationJSONObject() *GetSteeringGrePopsResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *GetSteeringGrePopsResponse) GetFourHundredApplicationJSONObject() *GetSteeringGrePopsResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *GetSteeringGrePopsResponse) GetFourHundredAndThreeApplicationJSONObject() *GetSteeringGrePopsResponse403ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *GetSteeringGrePopsResponse) GetFourHundredAndFiveApplicationJSONObject() *GetSteeringGrePopsResponse405ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFiveApplicationJSONObject
}

func (o *GetSteeringGrePopsResponse) GetFourHundredAndTwentyNineApplicationJSONObject() *GetSteeringGrePopsResponse429ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndTwentyNineApplicationJSONObject
}

func (o *GetSteeringGrePopsResponse) GetFiveHundredApplicationJSONObject() *GetSteeringGrePopsResponse500ResponseBody {
	if o == nil {
		return nil
	}
	return o.FiveHundredApplicationJSONObject
}

func (o *GetSteeringGrePopsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetSteeringGrePopsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetSteeringGrePopsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
