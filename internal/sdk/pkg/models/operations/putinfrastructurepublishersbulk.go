// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/netskope/terraform-provider-ns/internal/sdk/pkg/utils"
	"net/http"
)

type Apply struct {
	UpgradeRequest *bool `default:"true" json:"upgrade_request"`
}

func (a Apply) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *Apply) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Apply) GetUpgradeRequest() *bool {
	if o == nil {
		return nil
	}
	return o.UpgradeRequest
}

type PutInfrastructurePublishersBulkPublishers struct {
	Apply *Apply   `json:"apply,omitempty"`
	ID    []string `json:"id,omitempty"`
}

func (o *PutInfrastructurePublishersBulkPublishers) GetApply() *Apply {
	if o == nil {
		return nil
	}
	return o.Apply
}

func (o *PutInfrastructurePublishersBulkPublishers) GetID() []string {
	if o == nil {
		return nil
	}
	return o.ID
}

type PutInfrastructurePublishersBulkRequestBody struct {
	Publishers *PutInfrastructurePublishersBulkPublishers `json:"publishers,omitempty"`
}

func (o *PutInfrastructurePublishersBulkRequestBody) GetPublishers() *PutInfrastructurePublishersBulkPublishers {
	if o == nil {
		return nil
	}
	return o.Publishers
}

// PutInfrastructurePublishersBulkResponseResponseBody - Invalid request
type PutInfrastructurePublishersBulkResponseResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PutInfrastructurePublishersBulkResponseResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PutInfrastructurePublishersBulkResponseResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type Assessment struct {
}

type PutInfrastructurePublishersBulkResponseStatus string

const (
	PutInfrastructurePublishersBulkResponseStatusConnected     PutInfrastructurePublishersBulkResponseStatus = "connected"
	PutInfrastructurePublishersBulkResponseStatusNotRegistered PutInfrastructurePublishersBulkResponseStatus = "not registered"
)

func (e PutInfrastructurePublishersBulkResponseStatus) ToPointer() *PutInfrastructurePublishersBulkResponseStatus {
	return &e
}

func (e *PutInfrastructurePublishersBulkResponseStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "connected":
		fallthrough
	case "not registered":
		*e = PutInfrastructurePublishersBulkResponseStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutInfrastructurePublishersBulkResponseStatus: %v", v)
	}
}

type PutInfrastructurePublishersBulkTags struct {
	TagID   *int    `json:"tag_id,omitempty"`
	TagName *string `json:"tag_name,omitempty"`
}

func (o *PutInfrastructurePublishersBulkTags) GetTagID() *int {
	if o == nil {
		return nil
	}
	return o.TagID
}

func (o *PutInfrastructurePublishersBulkTags) GetTagName() *string {
	if o == nil {
		return nil
	}
	return o.TagName
}

type UpgradeFailedReason struct {
}

type UpgradeStatus struct {
}

type PutInfrastructurePublishersBulkData struct {
	Assessment                *Assessment                                    `json:"assessment,omitempty"`
	CommonName                *string                                        `json:"common_name,omitempty"`
	ID                        *int                                           `json:"id,omitempty"`
	Lbrokerconnect            *bool                                          `json:"lbrokerconnect,omitempty"`
	Name                      *string                                        `json:"name,omitempty"`
	PublisherUpgradeProfileID *int                                           `json:"publisher_upgrade_profile_id,omitempty"`
	Registered                *bool                                          `json:"registered,omitempty"`
	Status                    *PutInfrastructurePublishersBulkResponseStatus `json:"status,omitempty"`
	StitcherID                *int                                           `json:"stitcher_id,omitempty"`
	Tags                      []PutInfrastructurePublishersBulkTags          `json:"tags,omitempty"`
	UpgradeFailedReason       *UpgradeFailedReason                           `json:"upgrade_failed_reason,omitempty"`
	UpgradeRequest            *bool                                          `json:"upgrade_request,omitempty"`
	UpgradeStatus             *UpgradeStatus                                 `json:"upgrade_status,omitempty"`
}

func (o *PutInfrastructurePublishersBulkData) GetAssessment() *Assessment {
	if o == nil {
		return nil
	}
	return o.Assessment
}

func (o *PutInfrastructurePublishersBulkData) GetCommonName() *string {
	if o == nil {
		return nil
	}
	return o.CommonName
}

func (o *PutInfrastructurePublishersBulkData) GetID() *int {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *PutInfrastructurePublishersBulkData) GetLbrokerconnect() *bool {
	if o == nil {
		return nil
	}
	return o.Lbrokerconnect
}

func (o *PutInfrastructurePublishersBulkData) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *PutInfrastructurePublishersBulkData) GetPublisherUpgradeProfileID() *int {
	if o == nil {
		return nil
	}
	return o.PublisherUpgradeProfileID
}

func (o *PutInfrastructurePublishersBulkData) GetRegistered() *bool {
	if o == nil {
		return nil
	}
	return o.Registered
}

func (o *PutInfrastructurePublishersBulkData) GetStatus() *PutInfrastructurePublishersBulkResponseStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *PutInfrastructurePublishersBulkData) GetStitcherID() *int {
	if o == nil {
		return nil
	}
	return o.StitcherID
}

func (o *PutInfrastructurePublishersBulkData) GetTags() []PutInfrastructurePublishersBulkTags {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *PutInfrastructurePublishersBulkData) GetUpgradeFailedReason() *UpgradeFailedReason {
	if o == nil {
		return nil
	}
	return o.UpgradeFailedReason
}

func (o *PutInfrastructurePublishersBulkData) GetUpgradeRequest() *bool {
	if o == nil {
		return nil
	}
	return o.UpgradeRequest
}

func (o *PutInfrastructurePublishersBulkData) GetUpgradeStatus() *UpgradeStatus {
	if o == nil {
		return nil
	}
	return o.UpgradeStatus
}

type PutInfrastructurePublishersBulkStatus string

const (
	PutInfrastructurePublishersBulkStatusSuccess  PutInfrastructurePublishersBulkStatus = "success"
	PutInfrastructurePublishersBulkStatusNotFound PutInfrastructurePublishersBulkStatus = "not found"
)

func (e PutInfrastructurePublishersBulkStatus) ToPointer() *PutInfrastructurePublishersBulkStatus {
	return &e
}

func (e *PutInfrastructurePublishersBulkStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "not found":
		*e = PutInfrastructurePublishersBulkStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutInfrastructurePublishersBulkStatus: %v", v)
	}
}

// PutInfrastructurePublishersBulkResponseBody - successful operation
type PutInfrastructurePublishersBulkResponseBody struct {
	Data   []PutInfrastructurePublishersBulkData  `json:"data,omitempty"`
	Status *PutInfrastructurePublishersBulkStatus `json:"status,omitempty"`
}

func (o *PutInfrastructurePublishersBulkResponseBody) GetData() []PutInfrastructurePublishersBulkData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *PutInfrastructurePublishersBulkResponseBody) GetStatus() *PutInfrastructurePublishersBulkStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

type PutInfrastructurePublishersBulkResponse struct {
	// successful operation
	TwoHundredApplicationJSONObject *PutInfrastructurePublishersBulkResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *PutInfrastructurePublishersBulkResponseResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *PutInfrastructurePublishersBulkResponse) GetTwoHundredApplicationJSONObject() *PutInfrastructurePublishersBulkResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *PutInfrastructurePublishersBulkResponse) GetFourHundredApplicationJSONObject() *PutInfrastructurePublishersBulkResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *PutInfrastructurePublishersBulkResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PutInfrastructurePublishersBulkResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PutInfrastructurePublishersBulkResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
