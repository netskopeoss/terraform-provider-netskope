// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetAppsPrivateRequest struct {
	// Return values only from specified fields
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
}

func (o *GetAppsPrivateRequest) GetFields() *string {
	if o == nil {
		return nil
	}
	return o.Fields
}

// GetAppsPrivateResponseResponseBody - Invalid request
type GetAppsPrivateResponseResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetAppsPrivateResponseResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetAppsPrivateResponseResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type GetAppsPrivateProtocols struct {
	ID        *int    `json:"id,omitempty"`
	Port      *string `json:"port,omitempty"`
	ServiceID *int    `json:"service_id,omitempty"`
	Transport *string `json:"transport,omitempty"`
}

func (o *GetAppsPrivateProtocols) GetID() *int {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *GetAppsPrivateProtocols) GetPort() *string {
	if o == nil {
		return nil
	}
	return o.Port
}

func (o *GetAppsPrivateProtocols) GetServiceID() *int {
	if o == nil {
		return nil
	}
	return o.ServiceID
}

func (o *GetAppsPrivateProtocols) GetTransport() *string {
	if o == nil {
		return nil
	}
	return o.Transport
}

type GetAppsPrivateReachability struct {
	ErrorCode   *int    `json:"error_code,omitempty"`
	ErrorString *string `json:"error_string,omitempty"`
	Reachable   *bool   `json:"reachable,omitempty"`
}

func (o *GetAppsPrivateReachability) GetErrorCode() *int {
	if o == nil {
		return nil
	}
	return o.ErrorCode
}

func (o *GetAppsPrivateReachability) GetErrorString() *string {
	if o == nil {
		return nil
	}
	return o.ErrorString
}

func (o *GetAppsPrivateReachability) GetReachable() *bool {
	if o == nil {
		return nil
	}
	return o.Reachable
}

type GetAppsPrivateServicePublisherAssignments struct {
	Primary      *bool                       `json:"primary,omitempty"`
	PublisherID  *int                        `json:"publisher_id,omitempty"`
	Reachability *GetAppsPrivateReachability `json:"reachability,omitempty"`
	ServiceID    *int                        `json:"service_id,omitempty"`
}

func (o *GetAppsPrivateServicePublisherAssignments) GetPrimary() *bool {
	if o == nil {
		return nil
	}
	return o.Primary
}

func (o *GetAppsPrivateServicePublisherAssignments) GetPublisherID() *int {
	if o == nil {
		return nil
	}
	return o.PublisherID
}

func (o *GetAppsPrivateServicePublisherAssignments) GetReachability() *GetAppsPrivateReachability {
	if o == nil {
		return nil
	}
	return o.Reachability
}

func (o *GetAppsPrivateServicePublisherAssignments) GetServiceID() *int {
	if o == nil {
		return nil
	}
	return o.ServiceID
}

type GetAppsPrivateTags struct {
	TagID   *int    `json:"tag_id,omitempty"`
	TagName *string `json:"tag_name,omitempty"`
}

func (o *GetAppsPrivateTags) GetTagID() *int {
	if o == nil {
		return nil
	}
	return o.TagID
}

func (o *GetAppsPrivateTags) GetTagName() *string {
	if o == nil {
		return nil
	}
	return o.TagName
}

type GetAppsPrivateData struct {
	AppID                       *int                                        `json:"app_id,omitempty"`
	AppName                     *string                                     `json:"app_name,omitempty"`
	ClientlessAccess            *bool                                       `json:"clientless_access,omitempty"`
	Host                        *string                                     `json:"host,omitempty"`
	Protocols                   []GetAppsPrivateProtocols                   `json:"protocols,omitempty"`
	RealHost                    *string                                     `json:"real_host,omitempty"`
	ServicePublisherAssignments []GetAppsPrivateServicePublisherAssignments `json:"service_publisher_assignments,omitempty"`
	Tags                        []GetAppsPrivateTags                        `json:"tags,omitempty"`
	TrustSelfSignedCerts        *bool                                       `json:"trust_self_signed_certs,omitempty"`
	UsePublisherDNS             *bool                                       `json:"use_publisher_dns,omitempty"`
}

func (o *GetAppsPrivateData) GetAppID() *int {
	if o == nil {
		return nil
	}
	return o.AppID
}

func (o *GetAppsPrivateData) GetAppName() *string {
	if o == nil {
		return nil
	}
	return o.AppName
}

func (o *GetAppsPrivateData) GetClientlessAccess() *bool {
	if o == nil {
		return nil
	}
	return o.ClientlessAccess
}

func (o *GetAppsPrivateData) GetHost() *string {
	if o == nil {
		return nil
	}
	return o.Host
}

func (o *GetAppsPrivateData) GetProtocols() []GetAppsPrivateProtocols {
	if o == nil {
		return nil
	}
	return o.Protocols
}

func (o *GetAppsPrivateData) GetRealHost() *string {
	if o == nil {
		return nil
	}
	return o.RealHost
}

func (o *GetAppsPrivateData) GetServicePublisherAssignments() []GetAppsPrivateServicePublisherAssignments {
	if o == nil {
		return nil
	}
	return o.ServicePublisherAssignments
}

func (o *GetAppsPrivateData) GetTags() []GetAppsPrivateTags {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *GetAppsPrivateData) GetTrustSelfSignedCerts() *bool {
	if o == nil {
		return nil
	}
	return o.TrustSelfSignedCerts
}

func (o *GetAppsPrivateData) GetUsePublisherDNS() *bool {
	if o == nil {
		return nil
	}
	return o.UsePublisherDNS
}

type GetAppsPrivateStatus string

const (
	GetAppsPrivateStatusSuccess  GetAppsPrivateStatus = "success"
	GetAppsPrivateStatusNotFound GetAppsPrivateStatus = "not found"
)

func (e GetAppsPrivateStatus) ToPointer() *GetAppsPrivateStatus {
	return &e
}

func (e *GetAppsPrivateStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "not found":
		*e = GetAppsPrivateStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAppsPrivateStatus: %v", v)
	}
}

// GetAppsPrivateResponseBody - successful operation
type GetAppsPrivateResponseBody struct {
	Data   []GetAppsPrivateData  `json:"data,omitempty"`
	Status *GetAppsPrivateStatus `json:"status,omitempty"`
	Total  *int                  `json:"total,omitempty"`
}

func (o *GetAppsPrivateResponseBody) GetData() []GetAppsPrivateData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *GetAppsPrivateResponseBody) GetStatus() *GetAppsPrivateStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *GetAppsPrivateResponseBody) GetTotal() *int {
	if o == nil {
		return nil
	}
	return o.Total
}

type GetAppsPrivateResponse struct {
	// successful operation
	TwoHundredApplicationJSONObject *GetAppsPrivateResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *GetAppsPrivateResponseResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *GetAppsPrivateResponse) GetTwoHundredApplicationJSONObject() *GetAppsPrivateResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *GetAppsPrivateResponse) GetFourHundredApplicationJSONObject() *GetAppsPrivateResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *GetAppsPrivateResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetAppsPrivateResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetAppsPrivateResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
