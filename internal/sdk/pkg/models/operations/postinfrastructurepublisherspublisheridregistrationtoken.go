// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PostInfrastructurePublishersPublisherIDRegistrationTokenRequest struct {
	// publisher id
	PublisherID int `pathParam:"style=simple,explode=false,name=publisher_id"`
}

func (o *PostInfrastructurePublishersPublisherIDRegistrationTokenRequest) GetPublisherID() int {
	if o == nil {
		return 0
	}
	return o.PublisherID
}

// PostInfrastructurePublishersPublisherIDRegistrationTokenPublisherTokenResponseBody - Invalid request
type PostInfrastructurePublishersPublisherIDRegistrationTokenPublisherTokenResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PostInfrastructurePublishersPublisherIDRegistrationTokenPublisherTokenResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PostInfrastructurePublishersPublisherIDRegistrationTokenPublisherTokenResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type PostInfrastructurePublishersPublisherIDRegistrationTokenData struct {
	Token string `json:"token"`
}

func (o *PostInfrastructurePublishersPublisherIDRegistrationTokenData) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

type PostInfrastructurePublishersPublisherIDRegistrationTokenStatus string

const (
	PostInfrastructurePublishersPublisherIDRegistrationTokenStatusSuccess  PostInfrastructurePublishersPublisherIDRegistrationTokenStatus = "success"
	PostInfrastructurePublishersPublisherIDRegistrationTokenStatusNotFound PostInfrastructurePublishersPublisherIDRegistrationTokenStatus = "not found"
)

func (e PostInfrastructurePublishersPublisherIDRegistrationTokenStatus) ToPointer() *PostInfrastructurePublishersPublisherIDRegistrationTokenStatus {
	return &e
}

func (e *PostInfrastructurePublishersPublisherIDRegistrationTokenStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "not found":
		*e = PostInfrastructurePublishersPublisherIDRegistrationTokenStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostInfrastructurePublishersPublisherIDRegistrationTokenStatus: %v", v)
	}
}

// PostInfrastructurePublishersPublisherIDRegistrationTokenResponseBody - successful operation
type PostInfrastructurePublishersPublisherIDRegistrationTokenResponseBody struct {
	Data   PostInfrastructurePublishersPublisherIDRegistrationTokenData   `json:"data"`
	Status PostInfrastructurePublishersPublisherIDRegistrationTokenStatus `json:"status"`
}

func (o *PostInfrastructurePublishersPublisherIDRegistrationTokenResponseBody) GetData() PostInfrastructurePublishersPublisherIDRegistrationTokenData {
	if o == nil {
		return PostInfrastructurePublishersPublisherIDRegistrationTokenData{}
	}
	return o.Data
}

func (o *PostInfrastructurePublishersPublisherIDRegistrationTokenResponseBody) GetStatus() PostInfrastructurePublishersPublisherIDRegistrationTokenStatus {
	if o == nil {
		return PostInfrastructurePublishersPublisherIDRegistrationTokenStatus("")
	}
	return o.Status
}

type PostInfrastructurePublishersPublisherIDRegistrationTokenResponse struct {
	// successful operation
	TwoHundredApplicationJSONObject *PostInfrastructurePublishersPublisherIDRegistrationTokenResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *PostInfrastructurePublishersPublisherIDRegistrationTokenPublisherTokenResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *PostInfrastructurePublishersPublisherIDRegistrationTokenResponse) GetTwoHundredApplicationJSONObject() *PostInfrastructurePublishersPublisherIDRegistrationTokenResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *PostInfrastructurePublishersPublisherIDRegistrationTokenResponse) GetFourHundredApplicationJSONObject() *PostInfrastructurePublishersPublisherIDRegistrationTokenPublisherTokenResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *PostInfrastructurePublishersPublisherIDRegistrationTokenResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PostInfrastructurePublishersPublisherIDRegistrationTokenResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PostInfrastructurePublishersPublisherIDRegistrationTokenResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
