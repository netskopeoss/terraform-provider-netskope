// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/netskope/terraform-provider-ns/internal/sdk/pkg/models/shared"
	"net/http"
)

// QueryParamSilent - flag to skip output except status code
type QueryParamSilent string

const (
	QueryParamSilentOne  QueryParamSilent = "1"
	QueryParamSilentZero QueryParamSilent = "0"
)

func (e QueryParamSilent) ToPointer() *QueryParamSilent {
	return &e
}

func (e *QueryParamSilent) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "1":
		fallthrough
	case "0":
		*e = QueryParamSilent(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryParamSilent: %v", v)
	}
}

type PatchPolicyNpaPolicygroupsIDRequest struct {
	// policy group rule id
	ID                    string                       `pathParam:"style=simple,explode=false,name=id"`
	NpaPolicygroupRequest shared.NpaPolicygroupRequest `request:"mediaType=application/json"`
	// flag to skip output except status code
	Silent *QueryParamSilent `queryParam:"style=form,explode=true,name=silent"`
}

func (o *PatchPolicyNpaPolicygroupsIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *PatchPolicyNpaPolicygroupsIDRequest) GetNpaPolicygroupRequest() shared.NpaPolicygroupRequest {
	if o == nil {
		return shared.NpaPolicygroupRequest{}
	}
	return o.NpaPolicygroupRequest
}

func (o *PatchPolicyNpaPolicygroupsIDRequest) GetSilent() *QueryParamSilent {
	if o == nil {
		return nil
	}
	return o.Silent
}

// PatchPolicyNpaPolicygroupsIDResponseBody - successful operation
type PatchPolicyNpaPolicygroupsIDResponseBody struct {
	Data *shared.NpaPolicygroupResponseItem `json:"data,omitempty"`
}

func (o *PatchPolicyNpaPolicygroupsIDResponseBody) GetData() *shared.NpaPolicygroupResponseItem {
	if o == nil {
		return nil
	}
	return o.Data
}

type PatchPolicyNpaPolicygroupsIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Invalid request
	NpaPolicygroupResponse400 *shared.NpaPolicygroupResponse400
	// successful operation
	Object *PatchPolicyNpaPolicygroupsIDResponseBody
}

func (o *PatchPolicyNpaPolicygroupsIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PatchPolicyNpaPolicygroupsIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PatchPolicyNpaPolicygroupsIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PatchPolicyNpaPolicygroupsIDResponse) GetNpaPolicygroupResponse400() *shared.NpaPolicygroupResponse400 {
	if o == nil {
		return nil
	}
	return o.NpaPolicygroupResponse400
}

func (o *PatchPolicyNpaPolicygroupsIDResponse) GetObject() *PatchPolicyNpaPolicygroupsIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
