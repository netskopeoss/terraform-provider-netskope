// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PostPublisherupgradeprofilesRequestBody struct {
	DockerTag   *string `json:"docker_tag,omitempty"`
	Enabled     *int    `json:"enabled,omitempty"`
	Frequency   *string `json:"frequency,omitempty"`
	Name        *string `json:"name,omitempty"`
	ReleaseType *string `json:"release_type,omitempty"`
	Timezone    *string `json:"timezone,omitempty"`
}

func (o *PostPublisherupgradeprofilesRequestBody) GetDockerTag() *string {
	if o == nil {
		return nil
	}
	return o.DockerTag
}

func (o *PostPublisherupgradeprofilesRequestBody) GetEnabled() *int {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *PostPublisherupgradeprofilesRequestBody) GetFrequency() *string {
	if o == nil {
		return nil
	}
	return o.Frequency
}

func (o *PostPublisherupgradeprofilesRequestBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *PostPublisherupgradeprofilesRequestBody) GetReleaseType() *string {
	if o == nil {
		return nil
	}
	return o.ReleaseType
}

func (o *PostPublisherupgradeprofilesRequestBody) GetTimezone() *string {
	if o == nil {
		return nil
	}
	return o.Timezone
}

// PostPublisherupgradeprofilesQueryParamSilent - flag to skip output except status code
type PostPublisherupgradeprofilesQueryParamSilent string

const (
	PostPublisherupgradeprofilesQueryParamSilentOne  PostPublisherupgradeprofilesQueryParamSilent = "1"
	PostPublisherupgradeprofilesQueryParamSilentZero PostPublisherupgradeprofilesQueryParamSilent = "0"
)

func (e PostPublisherupgradeprofilesQueryParamSilent) ToPointer() *PostPublisherupgradeprofilesQueryParamSilent {
	return &e
}

func (e *PostPublisherupgradeprofilesQueryParamSilent) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "1":
		fallthrough
	case "0":
		*e = PostPublisherupgradeprofilesQueryParamSilent(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostPublisherupgradeprofilesQueryParamSilent: %v", v)
	}
}

type PostPublisherupgradeprofilesRequest struct {
	RequestBody *PostPublisherupgradeprofilesRequestBody `request:"mediaType=application/json"`
	// flag to skip output except status code
	Silent *PostPublisherupgradeprofilesQueryParamSilent `queryParam:"style=form,explode=true,name=silent"`
}

func (o *PostPublisherupgradeprofilesRequest) GetRequestBody() *PostPublisherupgradeprofilesRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

func (o *PostPublisherupgradeprofilesRequest) GetSilent() *PostPublisherupgradeprofilesQueryParamSilent {
	if o == nil {
		return nil
	}
	return o.Silent
}

// PostPublisherupgradeprofilesNPAPublisherUpgradeProfilesResponseBody - Invalid request
type PostPublisherupgradeprofilesNPAPublisherUpgradeProfilesResponseBody struct {
	Message *string `json:"message,omitempty"`
	Status  *int64  `json:"status,omitempty"`
}

func (o *PostPublisherupgradeprofilesNPAPublisherUpgradeProfilesResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *PostPublisherupgradeprofilesNPAPublisherUpgradeProfilesResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type PostPublisherupgradeprofilesData struct {
	DockerTag   *string `json:"docker_tag,omitempty"`
	Enabled     *int    `json:"enabled,omitempty"`
	Frequency   *string `json:"frequency,omitempty"`
	ID          *int    `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
	ReleaseType *string `json:"release_type,omitempty"`
	Timezone    *string `json:"timezone,omitempty"`
}

func (o *PostPublisherupgradeprofilesData) GetDockerTag() *string {
	if o == nil {
		return nil
	}
	return o.DockerTag
}

func (o *PostPublisherupgradeprofilesData) GetEnabled() *int {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *PostPublisherupgradeprofilesData) GetFrequency() *string {
	if o == nil {
		return nil
	}
	return o.Frequency
}

func (o *PostPublisherupgradeprofilesData) GetID() *int {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *PostPublisherupgradeprofilesData) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *PostPublisherupgradeprofilesData) GetReleaseType() *string {
	if o == nil {
		return nil
	}
	return o.ReleaseType
}

func (o *PostPublisherupgradeprofilesData) GetTimezone() *string {
	if o == nil {
		return nil
	}
	return o.Timezone
}

type PostPublisherupgradeprofilesStatus string

const (
	PostPublisherupgradeprofilesStatusSuccess  PostPublisherupgradeprofilesStatus = "success"
	PostPublisherupgradeprofilesStatusNotFound PostPublisherupgradeprofilesStatus = "not found"
)

func (e PostPublisherupgradeprofilesStatus) ToPointer() *PostPublisherupgradeprofilesStatus {
	return &e
}

func (e *PostPublisherupgradeprofilesStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "not found":
		*e = PostPublisherupgradeprofilesStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostPublisherupgradeprofilesStatus: %v", v)
	}
}

// PostPublisherupgradeprofilesResponseBody - successful operation
type PostPublisherupgradeprofilesResponseBody struct {
	Data   *PostPublisherupgradeprofilesData   `json:"data,omitempty"`
	Status *PostPublisherupgradeprofilesStatus `json:"status,omitempty"`
}

func (o *PostPublisherupgradeprofilesResponseBody) GetData() *PostPublisherupgradeprofilesData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *PostPublisherupgradeprofilesResponseBody) GetStatus() *PostPublisherupgradeprofilesStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

type PostPublisherupgradeprofilesResponse struct {
	// successful operation
	TwoHundredApplicationJSONObject *PostPublisherupgradeprofilesResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *PostPublisherupgradeprofilesNPAPublisherUpgradeProfilesResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *PostPublisherupgradeprofilesResponse) GetTwoHundredApplicationJSONObject() *PostPublisherupgradeprofilesResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *PostPublisherupgradeprofilesResponse) GetFourHundredApplicationJSONObject() *PostPublisherupgradeprofilesNPAPublisherUpgradeProfilesResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *PostPublisherupgradeprofilesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PostPublisherupgradeprofilesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PostPublisherupgradeprofilesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
