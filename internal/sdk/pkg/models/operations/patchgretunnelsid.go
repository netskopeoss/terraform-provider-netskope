// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type Xff struct {
	Enable *bool    `json:"enable,omitempty"`
	Iplist []string `json:"iplist,omitempty"`
}

func (o *Xff) GetEnable() *bool {
	if o == nil {
		return nil
	}
	return o.Enable
}

func (o *Xff) GetIplist() []string {
	if o == nil {
		return nil
	}
	return o.Iplist
}

type Options struct {
	Xff *Xff `json:"xff,omitempty"`
}

func (o *Options) GetXff() *Xff {
	if o == nil {
		return nil
	}
	return o.Xff
}

// PatchGreTunnelsIDRequestBody - GRE tunnel object
type PatchGreTunnelsIDRequestBody struct {
	Enable        *bool    `json:"enable,omitempty"`
	Notes         *string  `json:"notes,omitempty"`
	Options       *Options `json:"options,omitempty"`
	Pops          []string `json:"pops,omitempty"`
	Site          *string  `json:"site,omitempty"`
	Sourcetype    *string  `json:"sourcetype,omitempty"`
	Srcipidentity *string  `json:"srcipidentity,omitempty"`
	Template      *string  `json:"template,omitempty"`
	Vendor        *string  `json:"vendor,omitempty"`
}

func (o *PatchGreTunnelsIDRequestBody) GetEnable() *bool {
	if o == nil {
		return nil
	}
	return o.Enable
}

func (o *PatchGreTunnelsIDRequestBody) GetNotes() *string {
	if o == nil {
		return nil
	}
	return o.Notes
}

func (o *PatchGreTunnelsIDRequestBody) GetOptions() *Options {
	if o == nil {
		return nil
	}
	return o.Options
}

func (o *PatchGreTunnelsIDRequestBody) GetPops() []string {
	if o == nil {
		return nil
	}
	return o.Pops
}

func (o *PatchGreTunnelsIDRequestBody) GetSite() *string {
	if o == nil {
		return nil
	}
	return o.Site
}

func (o *PatchGreTunnelsIDRequestBody) GetSourcetype() *string {
	if o == nil {
		return nil
	}
	return o.Sourcetype
}

func (o *PatchGreTunnelsIDRequestBody) GetSrcipidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcipidentity
}

func (o *PatchGreTunnelsIDRequestBody) GetTemplate() *string {
	if o == nil {
		return nil
	}
	return o.Template
}

func (o *PatchGreTunnelsIDRequestBody) GetVendor() *string {
	if o == nil {
		return nil
	}
	return o.Vendor
}

type PatchGreTunnelsIDRequest struct {
	// GRE tunnel object
	RequestBody PatchGreTunnelsIDRequestBody `request:"mediaType=application/json"`
	// GRE tunnel id
	ID int64 `pathParam:"style=simple,explode=false,name=id"`
}

func (o *PatchGreTunnelsIDRequest) GetRequestBody() PatchGreTunnelsIDRequestBody {
	if o == nil {
		return PatchGreTunnelsIDRequestBody{}
	}
	return o.RequestBody
}

func (o *PatchGreTunnelsIDRequest) GetID() int64 {
	if o == nil {
		return 0
	}
	return o.ID
}

// PatchGreTunnelsIDResponse500ResponseBody - Internal server error
type PatchGreTunnelsIDResponse500ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PatchGreTunnelsIDResponse500ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PatchGreTunnelsIDResponse500ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PatchGreTunnelsIDResponse429ResponseBody - Too many requests
type PatchGreTunnelsIDResponse429ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PatchGreTunnelsIDResponse429ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PatchGreTunnelsIDResponse429ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PatchGreTunnelsIDResponse405ResponseBody - Method not allowed
type PatchGreTunnelsIDResponse405ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PatchGreTunnelsIDResponse405ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PatchGreTunnelsIDResponse405ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PatchGreTunnelsIDResponse404ResponseBody - Not found
type PatchGreTunnelsIDResponse404ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PatchGreTunnelsIDResponse404ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PatchGreTunnelsIDResponse404ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PatchGreTunnelsIDResponse403ResponseBody - Access forbidden
type PatchGreTunnelsIDResponse403ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PatchGreTunnelsIDResponse403ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PatchGreTunnelsIDResponse403ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PatchGreTunnelsIDResponseResponseBody - Invalid request
type PatchGreTunnelsIDResponseResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PatchGreTunnelsIDResponseResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PatchGreTunnelsIDResponseResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type PatchGreTunnelsIDXff struct {
	Enabled *bool    `json:"enabled,omitempty"`
	Iplist  []string `json:"iplist,omitempty"`
}

func (o *PatchGreTunnelsIDXff) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *PatchGreTunnelsIDXff) GetIplist() []string {
	if o == nil {
		return nil
	}
	return o.Iplist
}

type PatchGreTunnelsIDOptions struct {
	Xff *PatchGreTunnelsIDXff `json:"xff,omitempty"`
}

func (o *PatchGreTunnelsIDOptions) GetXff() *PatchGreTunnelsIDXff {
	if o == nil {
		return nil
	}
	return o.Xff
}

type PatchGreTunnelsIDPops struct {
	Gateway           *string `json:"gateway,omitempty"`
	KeepaliveLast     *string `json:"keepaliveLast,omitempty"`
	KeepaliveStatus   *string `json:"keepaliveStatus,omitempty"`
	Name              *string `json:"name,omitempty"`
	Primary           *bool   `json:"primary,omitempty"`
	Probeip           *string `json:"probeip,omitempty"`
	Throughput        *string `json:"throughput,omitempty"`
	UsertrafficLast   *string `json:"usertrafficLast,omitempty"`
	UsertrafficStatus *string `json:"usertrafficStatus,omitempty"`
}

func (o *PatchGreTunnelsIDPops) GetGateway() *string {
	if o == nil {
		return nil
	}
	return o.Gateway
}

func (o *PatchGreTunnelsIDPops) GetKeepaliveLast() *string {
	if o == nil {
		return nil
	}
	return o.KeepaliveLast
}

func (o *PatchGreTunnelsIDPops) GetKeepaliveStatus() *string {
	if o == nil {
		return nil
	}
	return o.KeepaliveStatus
}

func (o *PatchGreTunnelsIDPops) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *PatchGreTunnelsIDPops) GetPrimary() *bool {
	if o == nil {
		return nil
	}
	return o.Primary
}

func (o *PatchGreTunnelsIDPops) GetProbeip() *string {
	if o == nil {
		return nil
	}
	return o.Probeip
}

func (o *PatchGreTunnelsIDPops) GetThroughput() *string {
	if o == nil {
		return nil
	}
	return o.Throughput
}

func (o *PatchGreTunnelsIDPops) GetUsertrafficLast() *string {
	if o == nil {
		return nil
	}
	return o.UsertrafficLast
}

func (o *PatchGreTunnelsIDPops) GetUsertrafficStatus() *string {
	if o == nil {
		return nil
	}
	return o.UsertrafficStatus
}

type PatchGreTunnelsIDData struct {
	Enabled       *bool                     `json:"enabled,omitempty"`
	ID            *int64                    `json:"id,omitempty"`
	Notes         *string                   `json:"notes,omitempty"`
	Options       *PatchGreTunnelsIDOptions `json:"options,omitempty"`
	Pops          []PatchGreTunnelsIDPops   `json:"pops,omitempty"`
	Site          *string                   `json:"site,omitempty"`
	Sourcetype    *string                   `json:"sourcetype,omitempty"`
	Srcipidentity *string                   `json:"srcipidentity,omitempty"`
	Template      *string                   `json:"template,omitempty"`
	Vendor        *string                   `json:"vendor,omitempty"`
	Version       *int64                    `json:"version,omitempty"`
}

func (o *PatchGreTunnelsIDData) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *PatchGreTunnelsIDData) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *PatchGreTunnelsIDData) GetNotes() *string {
	if o == nil {
		return nil
	}
	return o.Notes
}

func (o *PatchGreTunnelsIDData) GetOptions() *PatchGreTunnelsIDOptions {
	if o == nil {
		return nil
	}
	return o.Options
}

func (o *PatchGreTunnelsIDData) GetPops() []PatchGreTunnelsIDPops {
	if o == nil {
		return nil
	}
	return o.Pops
}

func (o *PatchGreTunnelsIDData) GetSite() *string {
	if o == nil {
		return nil
	}
	return o.Site
}

func (o *PatchGreTunnelsIDData) GetSourcetype() *string {
	if o == nil {
		return nil
	}
	return o.Sourcetype
}

func (o *PatchGreTunnelsIDData) GetSrcipidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcipidentity
}

func (o *PatchGreTunnelsIDData) GetTemplate() *string {
	if o == nil {
		return nil
	}
	return o.Template
}

func (o *PatchGreTunnelsIDData) GetVendor() *string {
	if o == nil {
		return nil
	}
	return o.Vendor
}

func (o *PatchGreTunnelsIDData) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

// PatchGreTunnelsIDResponseBody - Successful operation
type PatchGreTunnelsIDResponseBody struct {
	Data   []PatchGreTunnelsIDData `json:"data,omitempty"`
	Result *string                 `json:"result,omitempty"`
	Status *int64                  `json:"status,omitempty"`
}

func (o *PatchGreTunnelsIDResponseBody) GetData() []PatchGreTunnelsIDData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *PatchGreTunnelsIDResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PatchGreTunnelsIDResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type PatchGreTunnelsIDResponse struct {
	// Successful operation
	TwoHundredApplicationJSONObject *PatchGreTunnelsIDResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *PatchGreTunnelsIDResponseResponseBody
	// Access forbidden
	FourHundredAndThreeApplicationJSONObject *PatchGreTunnelsIDResponse403ResponseBody
	// Not found
	FourHundredAndFourApplicationJSONObject *PatchGreTunnelsIDResponse404ResponseBody
	// Method not allowed
	FourHundredAndFiveApplicationJSONObject *PatchGreTunnelsIDResponse405ResponseBody
	// Too many requests
	FourHundredAndTwentyNineApplicationJSONObject *PatchGreTunnelsIDResponse429ResponseBody
	// Internal server error
	FiveHundredApplicationJSONObject *PatchGreTunnelsIDResponse500ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *PatchGreTunnelsIDResponse) GetTwoHundredApplicationJSONObject() *PatchGreTunnelsIDResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *PatchGreTunnelsIDResponse) GetFourHundredApplicationJSONObject() *PatchGreTunnelsIDResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *PatchGreTunnelsIDResponse) GetFourHundredAndThreeApplicationJSONObject() *PatchGreTunnelsIDResponse403ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *PatchGreTunnelsIDResponse) GetFourHundredAndFourApplicationJSONObject() *PatchGreTunnelsIDResponse404ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFourApplicationJSONObject
}

func (o *PatchGreTunnelsIDResponse) GetFourHundredAndFiveApplicationJSONObject() *PatchGreTunnelsIDResponse405ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFiveApplicationJSONObject
}

func (o *PatchGreTunnelsIDResponse) GetFourHundredAndTwentyNineApplicationJSONObject() *PatchGreTunnelsIDResponse429ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndTwentyNineApplicationJSONObject
}

func (o *PatchGreTunnelsIDResponse) GetFiveHundredApplicationJSONObject() *PatchGreTunnelsIDResponse500ResponseBody {
	if o == nil {
		return nil
	}
	return o.FiveHundredApplicationJSONObject
}

func (o *PatchGreTunnelsIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PatchGreTunnelsIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PatchGreTunnelsIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
