// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type DeletePolicyNpaPolicygroupsIDRequest struct {
	// npa policy group id
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *DeletePolicyNpaPolicygroupsIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// DeletePolicyNpaPolicygroupsIDResponseResponseBody - Invalid request
type DeletePolicyNpaPolicygroupsIDResponseResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *DeletePolicyNpaPolicygroupsIDResponseResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *DeletePolicyNpaPolicygroupsIDResponseResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type Status string

const (
	StatusSuccess Status = "success"
	StatusError   Status = "error"
)

func (e Status) ToPointer() *Status {
	return &e
}

func (e *Status) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "error":
		*e = Status(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Status: %v", v)
	}
}

// DeletePolicyNpaPolicygroupsIDResponseBody - successful operation
type DeletePolicyNpaPolicygroupsIDResponseBody struct {
	Status *Status `json:"status,omitempty"`
}

func (o *DeletePolicyNpaPolicygroupsIDResponseBody) GetStatus() *Status {
	if o == nil {
		return nil
	}
	return o.Status
}

type DeletePolicyNpaPolicygroupsIDResponse struct {
	// successful operation
	TwoHundredApplicationJSONObject *DeletePolicyNpaPolicygroupsIDResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *DeletePolicyNpaPolicygroupsIDResponseResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *DeletePolicyNpaPolicygroupsIDResponse) GetTwoHundredApplicationJSONObject() *DeletePolicyNpaPolicygroupsIDResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *DeletePolicyNpaPolicygroupsIDResponse) GetFourHundredApplicationJSONObject() *DeletePolicyNpaPolicygroupsIDResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *DeletePolicyNpaPolicygroupsIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DeletePolicyNpaPolicygroupsIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DeletePolicyNpaPolicygroupsIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
