// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetPublisherupgradeprofilesUpgradeProfileIDRequest struct {
	// publisher upgrade profile id
	UpgradeProfileID int `pathParam:"style=simple,explode=false,name=upgrade_profile_id"`
}

func (o *GetPublisherupgradeprofilesUpgradeProfileIDRequest) GetUpgradeProfileID() int {
	if o == nil {
		return 0
	}
	return o.UpgradeProfileID
}

// GetPublisherupgradeprofilesUpgradeProfileIDResponseResponseBody - Invalid request
type GetPublisherupgradeprofilesUpgradeProfileIDResponseResponseBody struct {
	Message *string `json:"message,omitempty"`
	Status  *int64  `json:"status,omitempty"`
}

func (o *GetPublisherupgradeprofilesUpgradeProfileIDResponseResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *GetPublisherupgradeprofilesUpgradeProfileIDResponseResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type GetPublisherupgradeprofilesUpgradeProfileIDData struct {
	DockerTag   *string `json:"docker_tag,omitempty"`
	Enabled     *int    `json:"enabled,omitempty"`
	Frequency   *string `json:"frequency,omitempty"`
	ID          *int    `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
	ReleaseType *string `json:"release_type,omitempty"`
	Timezone    *string `json:"timezone,omitempty"`
}

func (o *GetPublisherupgradeprofilesUpgradeProfileIDData) GetDockerTag() *string {
	if o == nil {
		return nil
	}
	return o.DockerTag
}

func (o *GetPublisherupgradeprofilesUpgradeProfileIDData) GetEnabled() *int {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *GetPublisherupgradeprofilesUpgradeProfileIDData) GetFrequency() *string {
	if o == nil {
		return nil
	}
	return o.Frequency
}

func (o *GetPublisherupgradeprofilesUpgradeProfileIDData) GetID() *int {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *GetPublisherupgradeprofilesUpgradeProfileIDData) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *GetPublisherupgradeprofilesUpgradeProfileIDData) GetReleaseType() *string {
	if o == nil {
		return nil
	}
	return o.ReleaseType
}

func (o *GetPublisherupgradeprofilesUpgradeProfileIDData) GetTimezone() *string {
	if o == nil {
		return nil
	}
	return o.Timezone
}

type GetPublisherupgradeprofilesUpgradeProfileIDStatus string

const (
	GetPublisherupgradeprofilesUpgradeProfileIDStatusSuccess  GetPublisherupgradeprofilesUpgradeProfileIDStatus = "success"
	GetPublisherupgradeprofilesUpgradeProfileIDStatusNotFound GetPublisherupgradeprofilesUpgradeProfileIDStatus = "not found"
)

func (e GetPublisherupgradeprofilesUpgradeProfileIDStatus) ToPointer() *GetPublisherupgradeprofilesUpgradeProfileIDStatus {
	return &e
}

func (e *GetPublisherupgradeprofilesUpgradeProfileIDStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "not found":
		*e = GetPublisherupgradeprofilesUpgradeProfileIDStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPublisherupgradeprofilesUpgradeProfileIDStatus: %v", v)
	}
}

// GetPublisherupgradeprofilesUpgradeProfileIDResponseBody - successful operation
type GetPublisherupgradeprofilesUpgradeProfileIDResponseBody struct {
	Data   *GetPublisherupgradeprofilesUpgradeProfileIDData   `json:"data,omitempty"`
	Status *GetPublisherupgradeprofilesUpgradeProfileIDStatus `json:"status,omitempty"`
}

func (o *GetPublisherupgradeprofilesUpgradeProfileIDResponseBody) GetData() *GetPublisherupgradeprofilesUpgradeProfileIDData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *GetPublisherupgradeprofilesUpgradeProfileIDResponseBody) GetStatus() *GetPublisherupgradeprofilesUpgradeProfileIDStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

type GetPublisherupgradeprofilesUpgradeProfileIDResponse struct {
	// successful operation
	TwoHundredApplicationJSONObject *GetPublisherupgradeprofilesUpgradeProfileIDResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *GetPublisherupgradeprofilesUpgradeProfileIDResponseResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *GetPublisherupgradeprofilesUpgradeProfileIDResponse) GetTwoHundredApplicationJSONObject() *GetPublisherupgradeprofilesUpgradeProfileIDResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *GetPublisherupgradeprofilesUpgradeProfileIDResponse) GetFourHundredApplicationJSONObject() *GetPublisherupgradeprofilesUpgradeProfileIDResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *GetPublisherupgradeprofilesUpgradeProfileIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetPublisherupgradeprofilesUpgradeProfileIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetPublisherupgradeprofilesUpgradeProfileIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
