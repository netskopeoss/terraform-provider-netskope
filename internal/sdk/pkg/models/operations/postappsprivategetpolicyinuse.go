// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PostAppsPrivateGetpolicyinuseRequestBody struct {
	Ids []string `json:"ids,omitempty"`
}

func (o *PostAppsPrivateGetpolicyinuseRequestBody) GetIds() []string {
	if o == nil {
		return nil
	}
	return o.Ids
}

// PostAppsPrivateGetpolicyinuseResponseResponseBody - Invalid request
type PostAppsPrivateGetpolicyinuseResponseResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PostAppsPrivateGetpolicyinuseResponseResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PostAppsPrivateGetpolicyinuseResponseResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type PostAppsPrivateGetpolicyinuseData struct {
	Token *string `json:"token,omitempty"`
}

func (o *PostAppsPrivateGetpolicyinuseData) GetToken() *string {
	if o == nil {
		return nil
	}
	return o.Token
}

type PostAppsPrivateGetpolicyinuseStatus string

const (
	PostAppsPrivateGetpolicyinuseStatusSuccess  PostAppsPrivateGetpolicyinuseStatus = "success"
	PostAppsPrivateGetpolicyinuseStatusNotFound PostAppsPrivateGetpolicyinuseStatus = "not found"
)

func (e PostAppsPrivateGetpolicyinuseStatus) ToPointer() *PostAppsPrivateGetpolicyinuseStatus {
	return &e
}

func (e *PostAppsPrivateGetpolicyinuseStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "not found":
		*e = PostAppsPrivateGetpolicyinuseStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostAppsPrivateGetpolicyinuseStatus: %v", v)
	}
}

// PostAppsPrivateGetpolicyinuseResponseBody - successful operation
type PostAppsPrivateGetpolicyinuseResponseBody struct {
	Data   []PostAppsPrivateGetpolicyinuseData  `json:"data,omitempty"`
	Status *PostAppsPrivateGetpolicyinuseStatus `json:"status,omitempty"`
}

func (o *PostAppsPrivateGetpolicyinuseResponseBody) GetData() []PostAppsPrivateGetpolicyinuseData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *PostAppsPrivateGetpolicyinuseResponseBody) GetStatus() *PostAppsPrivateGetpolicyinuseStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

type PostAppsPrivateGetpolicyinuseResponse struct {
	// successful operation
	TwoHundredApplicationJSONObject *PostAppsPrivateGetpolicyinuseResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *PostAppsPrivateGetpolicyinuseResponseResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *PostAppsPrivateGetpolicyinuseResponse) GetTwoHundredApplicationJSONObject() *PostAppsPrivateGetpolicyinuseResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *PostAppsPrivateGetpolicyinuseResponse) GetFourHundredApplicationJSONObject() *PostAppsPrivateGetpolicyinuseResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *PostAppsPrivateGetpolicyinuseResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PostAppsPrivateGetpolicyinuseResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PostAppsPrivateGetpolicyinuseResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
