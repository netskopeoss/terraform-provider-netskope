// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"ns/internal/sdk/pkg/utils"
)

type GetGreTunnelsRequest struct {
	// Provide comma separated list of fields to be displayed
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Max number of records to retrieve
	Limit *int64 `default:"100" queryParam:"style=form,explode=true,name=limit"`
	// Offset used to shift the window
	Offset *int64 `default:"0" queryParam:"style=form,explode=true,name=offset"`
	// GRE tunnel POP name
	Pop *string `queryParam:"style=form,explode=true,name=pop"`
	// GRE tunnel site
	Site *string `queryParam:"style=form,explode=true,name=site"`
	// GRE tunnel sortby column
	Sortby *string `queryParam:"style=form,explode=true,name=sortby"`
	// GRE tunnel sortorder asc or desc. Default is asc
	Sortorder *string `queryParam:"style=form,explode=true,name=sortorder"`
	// GRE tunnel sourcetype
	Sourcetype *string `queryParam:"style=form,explode=true,name=sourcetype"`
	// GRE tunnel source ip identity
	Srcipidentity *string `queryParam:"style=form,explode=true,name=srcipidentity"`
	// GRE tunnel status
	Status *string `queryParam:"style=form,explode=true,name=status"`
}

func (g GetGreTunnelsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetGreTunnelsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetGreTunnelsRequest) GetFields() *string {
	if o == nil {
		return nil
	}
	return o.Fields
}

func (o *GetGreTunnelsRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *GetGreTunnelsRequest) GetOffset() *int64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

func (o *GetGreTunnelsRequest) GetPop() *string {
	if o == nil {
		return nil
	}
	return o.Pop
}

func (o *GetGreTunnelsRequest) GetSite() *string {
	if o == nil {
		return nil
	}
	return o.Site
}

func (o *GetGreTunnelsRequest) GetSortby() *string {
	if o == nil {
		return nil
	}
	return o.Sortby
}

func (o *GetGreTunnelsRequest) GetSortorder() *string {
	if o == nil {
		return nil
	}
	return o.Sortorder
}

func (o *GetGreTunnelsRequest) GetSourcetype() *string {
	if o == nil {
		return nil
	}
	return o.Sourcetype
}

func (o *GetGreTunnelsRequest) GetSrcipidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcipidentity
}

func (o *GetGreTunnelsRequest) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetGreTunnelsResponse500ResponseBody - Internal server error
type GetGreTunnelsResponse500ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetGreTunnelsResponse500ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetGreTunnelsResponse500ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetGreTunnelsResponse429ResponseBody - Too many requests
type GetGreTunnelsResponse429ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetGreTunnelsResponse429ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetGreTunnelsResponse429ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetGreTunnelsResponse405ResponseBody - Method not allowed
type GetGreTunnelsResponse405ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetGreTunnelsResponse405ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetGreTunnelsResponse405ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetGreTunnelsResponse403ResponseBody - Access forbidden
type GetGreTunnelsResponse403ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetGreTunnelsResponse403ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetGreTunnelsResponse403ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetGreTunnelsResponseResponseBody - Invalid request
type GetGreTunnelsResponseResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetGreTunnelsResponseResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetGreTunnelsResponseResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type GetGreTunnelsXff struct {
	Enabled *bool    `json:"enabled,omitempty"`
	Iplist  []string `json:"iplist,omitempty"`
}

func (o *GetGreTunnelsXff) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *GetGreTunnelsXff) GetIplist() []string {
	if o == nil {
		return nil
	}
	return o.Iplist
}

type GetGreTunnelsOptions struct {
	Xff *GetGreTunnelsXff `json:"xff,omitempty"`
}

func (o *GetGreTunnelsOptions) GetXff() *GetGreTunnelsXff {
	if o == nil {
		return nil
	}
	return o.Xff
}

type GetGreTunnelsPops struct {
	Gateway           *string `json:"gateway,omitempty"`
	KeepaliveLast     *string `json:"keepaliveLast,omitempty"`
	KeepaliveStatus   *string `json:"keepaliveStatus,omitempty"`
	Name              *string `json:"name,omitempty"`
	Primary           *bool   `json:"primary,omitempty"`
	Probeip           *string `json:"probeip,omitempty"`
	Throughput        *string `json:"throughput,omitempty"`
	UsertrafficLast   *string `json:"usertrafficLast,omitempty"`
	UsertrafficStatus *string `json:"usertrafficStatus,omitempty"`
}

func (o *GetGreTunnelsPops) GetGateway() *string {
	if o == nil {
		return nil
	}
	return o.Gateway
}

func (o *GetGreTunnelsPops) GetKeepaliveLast() *string {
	if o == nil {
		return nil
	}
	return o.KeepaliveLast
}

func (o *GetGreTunnelsPops) GetKeepaliveStatus() *string {
	if o == nil {
		return nil
	}
	return o.KeepaliveStatus
}

func (o *GetGreTunnelsPops) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *GetGreTunnelsPops) GetPrimary() *bool {
	if o == nil {
		return nil
	}
	return o.Primary
}

func (o *GetGreTunnelsPops) GetProbeip() *string {
	if o == nil {
		return nil
	}
	return o.Probeip
}

func (o *GetGreTunnelsPops) GetThroughput() *string {
	if o == nil {
		return nil
	}
	return o.Throughput
}

func (o *GetGreTunnelsPops) GetUsertrafficLast() *string {
	if o == nil {
		return nil
	}
	return o.UsertrafficLast
}

func (o *GetGreTunnelsPops) GetUsertrafficStatus() *string {
	if o == nil {
		return nil
	}
	return o.UsertrafficStatus
}

type GetGreTunnelsResult struct {
	Enabled       *bool                 `json:"enabled,omitempty"`
	ID            *int64                `json:"id,omitempty"`
	Notes         *string               `json:"notes,omitempty"`
	Options       *GetGreTunnelsOptions `json:"options,omitempty"`
	Pops          []GetGreTunnelsPops   `json:"pops,omitempty"`
	Site          *string               `json:"site,omitempty"`
	Sourcetype    *string               `json:"sourcetype,omitempty"`
	Srcipidentity *string               `json:"srcipidentity,omitempty"`
	Template      *string               `json:"template,omitempty"`
	Vendor        *string               `json:"vendor,omitempty"`
	Version       *int64                `json:"version,omitempty"`
}

func (o *GetGreTunnelsResult) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *GetGreTunnelsResult) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *GetGreTunnelsResult) GetNotes() *string {
	if o == nil {
		return nil
	}
	return o.Notes
}

func (o *GetGreTunnelsResult) GetOptions() *GetGreTunnelsOptions {
	if o == nil {
		return nil
	}
	return o.Options
}

func (o *GetGreTunnelsResult) GetPops() []GetGreTunnelsPops {
	if o == nil {
		return nil
	}
	return o.Pops
}

func (o *GetGreTunnelsResult) GetSite() *string {
	if o == nil {
		return nil
	}
	return o.Site
}

func (o *GetGreTunnelsResult) GetSourcetype() *string {
	if o == nil {
		return nil
	}
	return o.Sourcetype
}

func (o *GetGreTunnelsResult) GetSrcipidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcipidentity
}

func (o *GetGreTunnelsResult) GetTemplate() *string {
	if o == nil {
		return nil
	}
	return o.Template
}

func (o *GetGreTunnelsResult) GetVendor() *string {
	if o == nil {
		return nil
	}
	return o.Vendor
}

func (o *GetGreTunnelsResult) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

// GetGreTunnelsResponseBody - Successful operation
type GetGreTunnelsResponseBody struct {
	Result []GetGreTunnelsResult `json:"result,omitempty"`
	Status *int64                `json:"status,omitempty"`
	Total  *int64                `json:"total,omitempty"`
}

func (o *GetGreTunnelsResponseBody) GetResult() []GetGreTunnelsResult {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetGreTunnelsResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *GetGreTunnelsResponseBody) GetTotal() *int64 {
	if o == nil {
		return nil
	}
	return o.Total
}

type GetGreTunnelsResponse struct {
	// Successful operation
	TwoHundredApplicationJSONObject *GetGreTunnelsResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *GetGreTunnelsResponseResponseBody
	// Access forbidden
	FourHundredAndThreeApplicationJSONObject *GetGreTunnelsResponse403ResponseBody
	// Method not allowed
	FourHundredAndFiveApplicationJSONObject *GetGreTunnelsResponse405ResponseBody
	// Too many requests
	FourHundredAndTwentyNineApplicationJSONObject *GetGreTunnelsResponse429ResponseBody
	// Internal server error
	FiveHundredApplicationJSONObject *GetGreTunnelsResponse500ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *GetGreTunnelsResponse) GetTwoHundredApplicationJSONObject() *GetGreTunnelsResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *GetGreTunnelsResponse) GetFourHundredApplicationJSONObject() *GetGreTunnelsResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *GetGreTunnelsResponse) GetFourHundredAndThreeApplicationJSONObject() *GetGreTunnelsResponse403ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *GetGreTunnelsResponse) GetFourHundredAndFiveApplicationJSONObject() *GetGreTunnelsResponse405ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFiveApplicationJSONObject
}

func (o *GetGreTunnelsResponse) GetFourHundredAndTwentyNineApplicationJSONObject() *GetGreTunnelsResponse429ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndTwentyNineApplicationJSONObject
}

func (o *GetGreTunnelsResponse) GetFiveHundredApplicationJSONObject() *GetGreTunnelsResponse500ResponseBody {
	if o == nil {
		return nil
	}
	return o.FiveHundredApplicationJSONObject
}

func (o *GetGreTunnelsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetGreTunnelsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetGreTunnelsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
