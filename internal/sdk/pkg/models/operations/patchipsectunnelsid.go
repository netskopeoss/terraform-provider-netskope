// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type PatchIpsecTunnelsIDXff struct {
	Enable *bool    `json:"enable,omitempty"`
	Iplist []string `json:"iplist,omitempty"`
}

func (o *PatchIpsecTunnelsIDXff) GetEnable() *bool {
	if o == nil {
		return nil
	}
	return o.Enable
}

func (o *PatchIpsecTunnelsIDXff) GetIplist() []string {
	if o == nil {
		return nil
	}
	return o.Iplist
}

type PatchIpsecTunnelsIDOptions struct {
	Reauth *bool                   `json:"reauth,omitempty"`
	Rekey  *bool                   `json:"rekey,omitempty"`
	Xff    *PatchIpsecTunnelsIDXff `json:"xff,omitempty"`
}

func (o *PatchIpsecTunnelsIDOptions) GetReauth() *bool {
	if o == nil {
		return nil
	}
	return o.Reauth
}

func (o *PatchIpsecTunnelsIDOptions) GetRekey() *bool {
	if o == nil {
		return nil
	}
	return o.Rekey
}

func (o *PatchIpsecTunnelsIDOptions) GetXff() *PatchIpsecTunnelsIDXff {
	if o == nil {
		return nil
	}
	return o.Xff
}

// PatchIpsecTunnelsIDRequestBody - IPSec tunnel object
type PatchIpsecTunnelsIDRequestBody struct {
	Bandwidth     *int64                      `json:"bandwidth,omitempty"`
	Enable        *bool                       `json:"enable,omitempty"`
	Encryption    *string                     `json:"encryption,omitempty"`
	Notes         *string                     `json:"notes,omitempty"`
	Options       *PatchIpsecTunnelsIDOptions `json:"options,omitempty"`
	Pops          []string                    `json:"pops,omitempty"`
	Psk           *string                     `json:"psk,omitempty"`
	Site          *string                     `json:"site,omitempty"`
	Sourcetype    *string                     `json:"sourcetype,omitempty"`
	Srcidentity   *string                     `json:"srcidentity,omitempty"`
	Srcipidentity *string                     `json:"srcipidentity,omitempty"`
	Template      *string                     `json:"template,omitempty"`
	Vendor        *string                     `json:"vendor,omitempty"`
}

func (o *PatchIpsecTunnelsIDRequestBody) GetBandwidth() *int64 {
	if o == nil {
		return nil
	}
	return o.Bandwidth
}

func (o *PatchIpsecTunnelsIDRequestBody) GetEnable() *bool {
	if o == nil {
		return nil
	}
	return o.Enable
}

func (o *PatchIpsecTunnelsIDRequestBody) GetEncryption() *string {
	if o == nil {
		return nil
	}
	return o.Encryption
}

func (o *PatchIpsecTunnelsIDRequestBody) GetNotes() *string {
	if o == nil {
		return nil
	}
	return o.Notes
}

func (o *PatchIpsecTunnelsIDRequestBody) GetOptions() *PatchIpsecTunnelsIDOptions {
	if o == nil {
		return nil
	}
	return o.Options
}

func (o *PatchIpsecTunnelsIDRequestBody) GetPops() []string {
	if o == nil {
		return nil
	}
	return o.Pops
}

func (o *PatchIpsecTunnelsIDRequestBody) GetPsk() *string {
	if o == nil {
		return nil
	}
	return o.Psk
}

func (o *PatchIpsecTunnelsIDRequestBody) GetSite() *string {
	if o == nil {
		return nil
	}
	return o.Site
}

func (o *PatchIpsecTunnelsIDRequestBody) GetSourcetype() *string {
	if o == nil {
		return nil
	}
	return o.Sourcetype
}

func (o *PatchIpsecTunnelsIDRequestBody) GetSrcidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcidentity
}

func (o *PatchIpsecTunnelsIDRequestBody) GetSrcipidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcipidentity
}

func (o *PatchIpsecTunnelsIDRequestBody) GetTemplate() *string {
	if o == nil {
		return nil
	}
	return o.Template
}

func (o *PatchIpsecTunnelsIDRequestBody) GetVendor() *string {
	if o == nil {
		return nil
	}
	return o.Vendor
}

type PatchIpsecTunnelsIDRequest struct {
	// IPSec tunnel object
	RequestBody PatchIpsecTunnelsIDRequestBody `request:"mediaType=application/json"`
	// IPSec tunnel id
	ID int64 `pathParam:"style=simple,explode=false,name=id"`
}

func (o *PatchIpsecTunnelsIDRequest) GetRequestBody() PatchIpsecTunnelsIDRequestBody {
	if o == nil {
		return PatchIpsecTunnelsIDRequestBody{}
	}
	return o.RequestBody
}

func (o *PatchIpsecTunnelsIDRequest) GetID() int64 {
	if o == nil {
		return 0
	}
	return o.ID
}

// PatchIpsecTunnelsIDResponse500ResponseBody - Internal server error
type PatchIpsecTunnelsIDResponse500ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PatchIpsecTunnelsIDResponse500ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PatchIpsecTunnelsIDResponse500ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PatchIpsecTunnelsIDResponse429ResponseBody - Too many requests
type PatchIpsecTunnelsIDResponse429ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PatchIpsecTunnelsIDResponse429ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PatchIpsecTunnelsIDResponse429ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PatchIpsecTunnelsIDResponse405ResponseBody - Method not allowed
type PatchIpsecTunnelsIDResponse405ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PatchIpsecTunnelsIDResponse405ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PatchIpsecTunnelsIDResponse405ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PatchIpsecTunnelsIDResponse404ResponseBody - Not found
type PatchIpsecTunnelsIDResponse404ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PatchIpsecTunnelsIDResponse404ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PatchIpsecTunnelsIDResponse404ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PatchIpsecTunnelsIDResponse403ResponseBody - Access forbidden
type PatchIpsecTunnelsIDResponse403ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PatchIpsecTunnelsIDResponse403ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PatchIpsecTunnelsIDResponse403ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PatchIpsecTunnelsIDResponseResponseBody - Invalid request
type PatchIpsecTunnelsIDResponseResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PatchIpsecTunnelsIDResponseResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PatchIpsecTunnelsIDResponseResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type PatchIpsecTunnelsIDResponseXff struct {
	Enabled *bool    `json:"enabled,omitempty"`
	Iplist  []string `json:"iplist,omitempty"`
}

func (o *PatchIpsecTunnelsIDResponseXff) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *PatchIpsecTunnelsIDResponseXff) GetIplist() []string {
	if o == nil {
		return nil
	}
	return o.Iplist
}

type PatchIpsecTunnelsIDResponseOptions struct {
	Reauth *bool                           `json:"reauth,omitempty"`
	Rekey  *bool                           `json:"rekey,omitempty"`
	Xff    *PatchIpsecTunnelsIDResponseXff `json:"xff,omitempty"`
}

func (o *PatchIpsecTunnelsIDResponseOptions) GetReauth() *bool {
	if o == nil {
		return nil
	}
	return o.Reauth
}

func (o *PatchIpsecTunnelsIDResponseOptions) GetRekey() *bool {
	if o == nil {
		return nil
	}
	return o.Rekey
}

func (o *PatchIpsecTunnelsIDResponseOptions) GetXff() *PatchIpsecTunnelsIDResponseXff {
	if o == nil {
		return nil
	}
	return o.Xff
}

type PatchIpsecTunnelsIDPops struct {
	Gateway    *string `json:"gateway,omitempty"`
	Name       *string `json:"name,omitempty"`
	Primary    *bool   `json:"primary,omitempty"`
	Probeip    *string `json:"probeip,omitempty"`
	Since      *string `json:"since,omitempty"`
	Status     *string `json:"status,omitempty"`
	Throughput *string `json:"throughput,omitempty"`
}

func (o *PatchIpsecTunnelsIDPops) GetGateway() *string {
	if o == nil {
		return nil
	}
	return o.Gateway
}

func (o *PatchIpsecTunnelsIDPops) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *PatchIpsecTunnelsIDPops) GetPrimary() *bool {
	if o == nil {
		return nil
	}
	return o.Primary
}

func (o *PatchIpsecTunnelsIDPops) GetProbeip() *string {
	if o == nil {
		return nil
	}
	return o.Probeip
}

func (o *PatchIpsecTunnelsIDPops) GetSince() *string {
	if o == nil {
		return nil
	}
	return o.Since
}

func (o *PatchIpsecTunnelsIDPops) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *PatchIpsecTunnelsIDPops) GetThroughput() *string {
	if o == nil {
		return nil
	}
	return o.Throughput
}

type PatchIpsecTunnelsIDData struct {
	Bandwidth     *int64                              `json:"bandwidth,omitempty"`
	Enabled       *bool                               `json:"enabled,omitempty"`
	Encryption    *string                             `json:"encryption,omitempty"`
	ID            *int64                              `json:"id,omitempty"`
	Notes         *string                             `json:"notes,omitempty"`
	Options       *PatchIpsecTunnelsIDResponseOptions `json:"options,omitempty"`
	Pops          []PatchIpsecTunnelsIDPops           `json:"pops,omitempty"`
	Site          *string                             `json:"site,omitempty"`
	Sourcetype    *string                             `json:"sourcetype,omitempty"`
	Srcidentity   *string                             `json:"srcidentity,omitempty"`
	Srcipidentity *string                             `json:"srcipidentity,omitempty"`
	Template      *string                             `json:"template,omitempty"`
	Vendor        *string                             `json:"vendor,omitempty"`
	Version       *int64                              `json:"version,omitempty"`
}

func (o *PatchIpsecTunnelsIDData) GetBandwidth() *int64 {
	if o == nil {
		return nil
	}
	return o.Bandwidth
}

func (o *PatchIpsecTunnelsIDData) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *PatchIpsecTunnelsIDData) GetEncryption() *string {
	if o == nil {
		return nil
	}
	return o.Encryption
}

func (o *PatchIpsecTunnelsIDData) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *PatchIpsecTunnelsIDData) GetNotes() *string {
	if o == nil {
		return nil
	}
	return o.Notes
}

func (o *PatchIpsecTunnelsIDData) GetOptions() *PatchIpsecTunnelsIDResponseOptions {
	if o == nil {
		return nil
	}
	return o.Options
}

func (o *PatchIpsecTunnelsIDData) GetPops() []PatchIpsecTunnelsIDPops {
	if o == nil {
		return nil
	}
	return o.Pops
}

func (o *PatchIpsecTunnelsIDData) GetSite() *string {
	if o == nil {
		return nil
	}
	return o.Site
}

func (o *PatchIpsecTunnelsIDData) GetSourcetype() *string {
	if o == nil {
		return nil
	}
	return o.Sourcetype
}

func (o *PatchIpsecTunnelsIDData) GetSrcidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcidentity
}

func (o *PatchIpsecTunnelsIDData) GetSrcipidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcipidentity
}

func (o *PatchIpsecTunnelsIDData) GetTemplate() *string {
	if o == nil {
		return nil
	}
	return o.Template
}

func (o *PatchIpsecTunnelsIDData) GetVendor() *string {
	if o == nil {
		return nil
	}
	return o.Vendor
}

func (o *PatchIpsecTunnelsIDData) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

// PatchIpsecTunnelsIDResponseBody - Successful operation
type PatchIpsecTunnelsIDResponseBody struct {
	Data   []PatchIpsecTunnelsIDData `json:"data,omitempty"`
	Result *string                   `json:"result,omitempty"`
	Status *int64                    `json:"status,omitempty"`
}

func (o *PatchIpsecTunnelsIDResponseBody) GetData() []PatchIpsecTunnelsIDData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *PatchIpsecTunnelsIDResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PatchIpsecTunnelsIDResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type PatchIpsecTunnelsIDResponse struct {
	// Successful operation
	TwoHundredApplicationJSONObject *PatchIpsecTunnelsIDResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *PatchIpsecTunnelsIDResponseResponseBody
	// Access forbidden
	FourHundredAndThreeApplicationJSONObject *PatchIpsecTunnelsIDResponse403ResponseBody
	// Not found
	FourHundredAndFourApplicationJSONObject *PatchIpsecTunnelsIDResponse404ResponseBody
	// Method not allowed
	FourHundredAndFiveApplicationJSONObject *PatchIpsecTunnelsIDResponse405ResponseBody
	// Too many requests
	FourHundredAndTwentyNineApplicationJSONObject *PatchIpsecTunnelsIDResponse429ResponseBody
	// Internal server error
	FiveHundredApplicationJSONObject *PatchIpsecTunnelsIDResponse500ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *PatchIpsecTunnelsIDResponse) GetTwoHundredApplicationJSONObject() *PatchIpsecTunnelsIDResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *PatchIpsecTunnelsIDResponse) GetFourHundredApplicationJSONObject() *PatchIpsecTunnelsIDResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *PatchIpsecTunnelsIDResponse) GetFourHundredAndThreeApplicationJSONObject() *PatchIpsecTunnelsIDResponse403ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *PatchIpsecTunnelsIDResponse) GetFourHundredAndFourApplicationJSONObject() *PatchIpsecTunnelsIDResponse404ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFourApplicationJSONObject
}

func (o *PatchIpsecTunnelsIDResponse) GetFourHundredAndFiveApplicationJSONObject() *PatchIpsecTunnelsIDResponse405ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFiveApplicationJSONObject
}

func (o *PatchIpsecTunnelsIDResponse) GetFourHundredAndTwentyNineApplicationJSONObject() *PatchIpsecTunnelsIDResponse429ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndTwentyNineApplicationJSONObject
}

func (o *PatchIpsecTunnelsIDResponse) GetFiveHundredApplicationJSONObject() *PatchIpsecTunnelsIDResponse500ResponseBody {
	if o == nil {
		return nil
	}
	return o.FiveHundredApplicationJSONObject
}

func (o *PatchIpsecTunnelsIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PatchIpsecTunnelsIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PatchIpsecTunnelsIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
