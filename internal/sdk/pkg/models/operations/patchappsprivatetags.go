// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PatchAppsPrivateTagsPublisherTags struct {
	TagID   *int    `json:"tag_id,omitempty"`
	TagName *string `json:"tag_name,omitempty"`
}

func (o *PatchAppsPrivateTagsPublisherTags) GetTagID() *int {
	if o == nil {
		return nil
	}
	return o.TagID
}

func (o *PatchAppsPrivateTagsPublisherTags) GetTagName() *string {
	if o == nil {
		return nil
	}
	return o.TagName
}

type PatchAppsPrivateTagsTags struct {
	TagID   *int    `json:"tag_id,omitempty"`
	TagName *string `json:"tag_name,omitempty"`
}

func (o *PatchAppsPrivateTagsTags) GetTagID() *int {
	if o == nil {
		return nil
	}
	return o.TagID
}

func (o *PatchAppsPrivateTagsTags) GetTagName() *string {
	if o == nil {
		return nil
	}
	return o.TagName
}

type PatchAppsPrivateTagsRequestBody struct {
	ID            *string                             `json:"id,omitempty"`
	Ids           []string                            `json:"ids,omitempty"`
	PublisherTags []PatchAppsPrivateTagsPublisherTags `json:"publisher_tags,omitempty"`
	Tags          []PatchAppsPrivateTagsTags          `json:"tags,omitempty"`
}

func (o *PatchAppsPrivateTagsRequestBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *PatchAppsPrivateTagsRequestBody) GetIds() []string {
	if o == nil {
		return nil
	}
	return o.Ids
}

func (o *PatchAppsPrivateTagsRequestBody) GetPublisherTags() []PatchAppsPrivateTagsPublisherTags {
	if o == nil {
		return nil
	}
	return o.PublisherTags
}

func (o *PatchAppsPrivateTagsRequestBody) GetTags() []PatchAppsPrivateTagsTags {
	if o == nil {
		return nil
	}
	return o.Tags
}

// PatchAppsPrivateTagsResponseBody - Invalid request
type PatchAppsPrivateTagsResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PatchAppsPrivateTagsResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PatchAppsPrivateTagsResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type PatchAppsPrivateTagsData struct {
	TagID   *int    `json:"tag_id,omitempty"`
	TagName *string `json:"tag_name,omitempty"`
}

func (o *PatchAppsPrivateTagsData) GetTagID() *int {
	if o == nil {
		return nil
	}
	return o.TagID
}

func (o *PatchAppsPrivateTagsData) GetTagName() *string {
	if o == nil {
		return nil
	}
	return o.TagName
}

type PatchAppsPrivateTagsStatus string

const (
	PatchAppsPrivateTagsStatusSuccess  PatchAppsPrivateTagsStatus = "success"
	PatchAppsPrivateTagsStatusNotFound PatchAppsPrivateTagsStatus = "not found"
)

func (e PatchAppsPrivateTagsStatus) ToPointer() *PatchAppsPrivateTagsStatus {
	return &e
}

func (e *PatchAppsPrivateTagsStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "not found":
		*e = PatchAppsPrivateTagsStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchAppsPrivateTagsStatus: %v", v)
	}
}

type PatchAppsPrivateTagsResponseResponseBody struct {
	Data   *PatchAppsPrivateTagsData   `json:"data,omitempty"`
	Status *PatchAppsPrivateTagsStatus `json:"status,omitempty"`
}

func (o *PatchAppsPrivateTagsResponseResponseBody) GetData() *PatchAppsPrivateTagsData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *PatchAppsPrivateTagsResponseResponseBody) GetStatus() *PatchAppsPrivateTagsStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

type PatchAppsPrivateTagsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// successful operation
	Classes []PatchAppsPrivateTagsResponseResponseBody
	// Invalid request
	Object *PatchAppsPrivateTagsResponseBody
}

func (o *PatchAppsPrivateTagsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PatchAppsPrivateTagsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PatchAppsPrivateTagsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PatchAppsPrivateTagsResponse) GetClasses() []PatchAppsPrivateTagsResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.Classes
}

func (o *PatchAppsPrivateTagsResponse) GetObject() *PatchAppsPrivateTagsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
