// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PostInfrastructurePublisherupgradeprofilesRequestBody struct {
	DockerTag   *string `json:"docker_tag,omitempty"`
	Enabled     *int    `json:"enabled,omitempty"`
	Frequency   *string `json:"frequency,omitempty"`
	Name        *string `json:"name,omitempty"`
	ReleaseType *string `json:"release_type,omitempty"`
	Timezone    *string `json:"timezone,omitempty"`
}

func (o *PostInfrastructurePublisherupgradeprofilesRequestBody) GetDockerTag() *string {
	if o == nil {
		return nil
	}
	return o.DockerTag
}

func (o *PostInfrastructurePublisherupgradeprofilesRequestBody) GetEnabled() *int {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *PostInfrastructurePublisherupgradeprofilesRequestBody) GetFrequency() *string {
	if o == nil {
		return nil
	}
	return o.Frequency
}

func (o *PostInfrastructurePublisherupgradeprofilesRequestBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *PostInfrastructurePublisherupgradeprofilesRequestBody) GetReleaseType() *string {
	if o == nil {
		return nil
	}
	return o.ReleaseType
}

func (o *PostInfrastructurePublisherupgradeprofilesRequestBody) GetTimezone() *string {
	if o == nil {
		return nil
	}
	return o.Timezone
}

// PostInfrastructurePublisherupgradeprofilesQueryParamSilent - flag to skip output except status code
type PostInfrastructurePublisherupgradeprofilesQueryParamSilent string

const (
	PostInfrastructurePublisherupgradeprofilesQueryParamSilentOne  PostInfrastructurePublisherupgradeprofilesQueryParamSilent = "1"
	PostInfrastructurePublisherupgradeprofilesQueryParamSilentZero PostInfrastructurePublisherupgradeprofilesQueryParamSilent = "0"
)

func (e PostInfrastructurePublisherupgradeprofilesQueryParamSilent) ToPointer() *PostInfrastructurePublisherupgradeprofilesQueryParamSilent {
	return &e
}

func (e *PostInfrastructurePublisherupgradeprofilesQueryParamSilent) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "1":
		fallthrough
	case "0":
		*e = PostInfrastructurePublisherupgradeprofilesQueryParamSilent(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostInfrastructurePublisherupgradeprofilesQueryParamSilent: %v", v)
	}
}

type PostInfrastructurePublisherupgradeprofilesRequest struct {
	RequestBody *PostInfrastructurePublisherupgradeprofilesRequestBody `request:"mediaType=application/json"`
	// flag to skip output except status code
	Silent *PostInfrastructurePublisherupgradeprofilesQueryParamSilent `queryParam:"style=form,explode=true,name=silent"`
}

func (o *PostInfrastructurePublisherupgradeprofilesRequest) GetRequestBody() *PostInfrastructurePublisherupgradeprofilesRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

func (o *PostInfrastructurePublisherupgradeprofilesRequest) GetSilent() *PostInfrastructurePublisherupgradeprofilesQueryParamSilent {
	if o == nil {
		return nil
	}
	return o.Silent
}

// PostInfrastructurePublisherupgradeprofilesNPAPublisherUpgradeProfilesResponseBody - Invalid request
type PostInfrastructurePublisherupgradeprofilesNPAPublisherUpgradeProfilesResponseBody struct {
	Message *string `json:"message,omitempty"`
	Status  *int64  `json:"status,omitempty"`
}

func (o *PostInfrastructurePublisherupgradeprofilesNPAPublisherUpgradeProfilesResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *PostInfrastructurePublisherupgradeprofilesNPAPublisherUpgradeProfilesResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type PostInfrastructurePublisherupgradeprofilesData struct {
	DockerTag   *string `json:"docker_tag,omitempty"`
	Enabled     *int    `json:"enabled,omitempty"`
	Frequency   *string `json:"frequency,omitempty"`
	ID          *int    `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
	ReleaseType *string `json:"release_type,omitempty"`
	Timezone    *string `json:"timezone,omitempty"`
}

func (o *PostInfrastructurePublisherupgradeprofilesData) GetDockerTag() *string {
	if o == nil {
		return nil
	}
	return o.DockerTag
}

func (o *PostInfrastructurePublisherupgradeprofilesData) GetEnabled() *int {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *PostInfrastructurePublisherupgradeprofilesData) GetFrequency() *string {
	if o == nil {
		return nil
	}
	return o.Frequency
}

func (o *PostInfrastructurePublisherupgradeprofilesData) GetID() *int {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *PostInfrastructurePublisherupgradeprofilesData) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *PostInfrastructurePublisherupgradeprofilesData) GetReleaseType() *string {
	if o == nil {
		return nil
	}
	return o.ReleaseType
}

func (o *PostInfrastructurePublisherupgradeprofilesData) GetTimezone() *string {
	if o == nil {
		return nil
	}
	return o.Timezone
}

// PostInfrastructurePublisherupgradeprofilesResponseBody - successful operation
type PostInfrastructurePublisherupgradeprofilesResponseBody struct {
	Data *PostInfrastructurePublisherupgradeprofilesData `json:"data,omitempty"`
}

func (o *PostInfrastructurePublisherupgradeprofilesResponseBody) GetData() *PostInfrastructurePublisherupgradeprofilesData {
	if o == nil {
		return nil
	}
	return o.Data
}

type PostInfrastructurePublisherupgradeprofilesResponse struct {
	// successful operation
	TwoHundredApplicationJSONObject *PostInfrastructurePublisherupgradeprofilesResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *PostInfrastructurePublisherupgradeprofilesNPAPublisherUpgradeProfilesResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *PostInfrastructurePublisherupgradeprofilesResponse) GetTwoHundredApplicationJSONObject() *PostInfrastructurePublisherupgradeprofilesResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *PostInfrastructurePublisherupgradeprofilesResponse) GetFourHundredApplicationJSONObject() *PostInfrastructurePublisherupgradeprofilesNPAPublisherUpgradeProfilesResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *PostInfrastructurePublisherupgradeprofilesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PostInfrastructurePublisherupgradeprofilesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PostInfrastructurePublisherupgradeprofilesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
