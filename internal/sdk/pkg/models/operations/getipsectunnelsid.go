// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetIpsecTunnelsIDRequest struct {
	// Provide comma separated list of fields to be displayed
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// IPSec tunnel id
	ID int64 `pathParam:"style=simple,explode=false,name=id"`
}

func (o *GetIpsecTunnelsIDRequest) GetFields() *string {
	if o == nil {
		return nil
	}
	return o.Fields
}

func (o *GetIpsecTunnelsIDRequest) GetID() int64 {
	if o == nil {
		return 0
	}
	return o.ID
}

// GetIpsecTunnelsIDResponse500ResponseBody - Internal server error
type GetIpsecTunnelsIDResponse500ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetIpsecTunnelsIDResponse500ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetIpsecTunnelsIDResponse500ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetIpsecTunnelsIDResponse429ResponseBody - Too many requests
type GetIpsecTunnelsIDResponse429ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetIpsecTunnelsIDResponse429ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetIpsecTunnelsIDResponse429ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetIpsecTunnelsIDResponse405ResponseBody - Method not allowed
type GetIpsecTunnelsIDResponse405ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetIpsecTunnelsIDResponse405ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetIpsecTunnelsIDResponse405ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetIpsecTunnelsIDResponse404ResponseBody - Not found
type GetIpsecTunnelsIDResponse404ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetIpsecTunnelsIDResponse404ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetIpsecTunnelsIDResponse404ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetIpsecTunnelsIDResponse403ResponseBody - Access forbidden
type GetIpsecTunnelsIDResponse403ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetIpsecTunnelsIDResponse403ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetIpsecTunnelsIDResponse403ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// GetIpsecTunnelsIDResponseResponseBody - Invalid request
type GetIpsecTunnelsIDResponseResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *GetIpsecTunnelsIDResponseResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetIpsecTunnelsIDResponseResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type GetIpsecTunnelsIDXff struct {
	Enabled *bool    `json:"enabled,omitempty"`
	Iplist  []string `json:"iplist,omitempty"`
}

func (o *GetIpsecTunnelsIDXff) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *GetIpsecTunnelsIDXff) GetIplist() []string {
	if o == nil {
		return nil
	}
	return o.Iplist
}

type GetIpsecTunnelsIDOptions struct {
	Reauth *bool                 `json:"reauth,omitempty"`
	Rekey  *bool                 `json:"rekey,omitempty"`
	Xff    *GetIpsecTunnelsIDXff `json:"xff,omitempty"`
}

func (o *GetIpsecTunnelsIDOptions) GetReauth() *bool {
	if o == nil {
		return nil
	}
	return o.Reauth
}

func (o *GetIpsecTunnelsIDOptions) GetRekey() *bool {
	if o == nil {
		return nil
	}
	return o.Rekey
}

func (o *GetIpsecTunnelsIDOptions) GetXff() *GetIpsecTunnelsIDXff {
	if o == nil {
		return nil
	}
	return o.Xff
}

type GetIpsecTunnelsIDPops struct {
	Gateway    *string `json:"gateway,omitempty"`
	Name       *string `json:"name,omitempty"`
	Primary    *bool   `json:"primary,omitempty"`
	Probeip    *string `json:"probeip,omitempty"`
	Since      *string `json:"since,omitempty"`
	Status     *string `json:"status,omitempty"`
	Throughput *string `json:"throughput,omitempty"`
}

func (o *GetIpsecTunnelsIDPops) GetGateway() *string {
	if o == nil {
		return nil
	}
	return o.Gateway
}

func (o *GetIpsecTunnelsIDPops) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *GetIpsecTunnelsIDPops) GetPrimary() *bool {
	if o == nil {
		return nil
	}
	return o.Primary
}

func (o *GetIpsecTunnelsIDPops) GetProbeip() *string {
	if o == nil {
		return nil
	}
	return o.Probeip
}

func (o *GetIpsecTunnelsIDPops) GetSince() *string {
	if o == nil {
		return nil
	}
	return o.Since
}

func (o *GetIpsecTunnelsIDPops) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *GetIpsecTunnelsIDPops) GetThroughput() *string {
	if o == nil {
		return nil
	}
	return o.Throughput
}

type GetIpsecTunnelsIDResult struct {
	Bandwidth     *int64                    `json:"bandwidth,omitempty"`
	Enabled       *bool                     `json:"enabled,omitempty"`
	Encryption    *string                   `json:"encryption,omitempty"`
	ID            *int64                    `json:"id,omitempty"`
	Notes         *string                   `json:"notes,omitempty"`
	Options       *GetIpsecTunnelsIDOptions `json:"options,omitempty"`
	Pops          []GetIpsecTunnelsIDPops   `json:"pops,omitempty"`
	Site          *string                   `json:"site,omitempty"`
	Sourcetype    *string                   `json:"sourcetype,omitempty"`
	Srcidentity   *string                   `json:"srcidentity,omitempty"`
	Srcipidentity *string                   `json:"srcipidentity,omitempty"`
	Template      *string                   `json:"template,omitempty"`
	Vendor        *string                   `json:"vendor,omitempty"`
	Version       *int64                    `json:"version,omitempty"`
}

func (o *GetIpsecTunnelsIDResult) GetBandwidth() *int64 {
	if o == nil {
		return nil
	}
	return o.Bandwidth
}

func (o *GetIpsecTunnelsIDResult) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *GetIpsecTunnelsIDResult) GetEncryption() *string {
	if o == nil {
		return nil
	}
	return o.Encryption
}

func (o *GetIpsecTunnelsIDResult) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *GetIpsecTunnelsIDResult) GetNotes() *string {
	if o == nil {
		return nil
	}
	return o.Notes
}

func (o *GetIpsecTunnelsIDResult) GetOptions() *GetIpsecTunnelsIDOptions {
	if o == nil {
		return nil
	}
	return o.Options
}

func (o *GetIpsecTunnelsIDResult) GetPops() []GetIpsecTunnelsIDPops {
	if o == nil {
		return nil
	}
	return o.Pops
}

func (o *GetIpsecTunnelsIDResult) GetSite() *string {
	if o == nil {
		return nil
	}
	return o.Site
}

func (o *GetIpsecTunnelsIDResult) GetSourcetype() *string {
	if o == nil {
		return nil
	}
	return o.Sourcetype
}

func (o *GetIpsecTunnelsIDResult) GetSrcidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcidentity
}

func (o *GetIpsecTunnelsIDResult) GetSrcipidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcipidentity
}

func (o *GetIpsecTunnelsIDResult) GetTemplate() *string {
	if o == nil {
		return nil
	}
	return o.Template
}

func (o *GetIpsecTunnelsIDResult) GetVendor() *string {
	if o == nil {
		return nil
	}
	return o.Vendor
}

func (o *GetIpsecTunnelsIDResult) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

// GetIpsecTunnelsIDResponseBody - Successful operation
type GetIpsecTunnelsIDResponseBody struct {
	Result []GetIpsecTunnelsIDResult `json:"result,omitempty"`
	Status *int64                    `json:"status,omitempty"`
	Total  *int64                    `json:"total,omitempty"`
}

func (o *GetIpsecTunnelsIDResponseBody) GetResult() []GetIpsecTunnelsIDResult {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *GetIpsecTunnelsIDResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *GetIpsecTunnelsIDResponseBody) GetTotal() *int64 {
	if o == nil {
		return nil
	}
	return o.Total
}

type GetIpsecTunnelsIDResponse struct {
	// Successful operation
	TwoHundredApplicationJSONObject *GetIpsecTunnelsIDResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *GetIpsecTunnelsIDResponseResponseBody
	// Access forbidden
	FourHundredAndThreeApplicationJSONObject *GetIpsecTunnelsIDResponse403ResponseBody
	// Not found
	FourHundredAndFourApplicationJSONObject *GetIpsecTunnelsIDResponse404ResponseBody
	// Method not allowed
	FourHundredAndFiveApplicationJSONObject *GetIpsecTunnelsIDResponse405ResponseBody
	// Too many requests
	FourHundredAndTwentyNineApplicationJSONObject *GetIpsecTunnelsIDResponse429ResponseBody
	// Internal server error
	FiveHundredApplicationJSONObject *GetIpsecTunnelsIDResponse500ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *GetIpsecTunnelsIDResponse) GetTwoHundredApplicationJSONObject() *GetIpsecTunnelsIDResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *GetIpsecTunnelsIDResponse) GetFourHundredApplicationJSONObject() *GetIpsecTunnelsIDResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *GetIpsecTunnelsIDResponse) GetFourHundredAndThreeApplicationJSONObject() *GetIpsecTunnelsIDResponse403ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *GetIpsecTunnelsIDResponse) GetFourHundredAndFourApplicationJSONObject() *GetIpsecTunnelsIDResponse404ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFourApplicationJSONObject
}

func (o *GetIpsecTunnelsIDResponse) GetFourHundredAndFiveApplicationJSONObject() *GetIpsecTunnelsIDResponse405ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFiveApplicationJSONObject
}

func (o *GetIpsecTunnelsIDResponse) GetFourHundredAndTwentyNineApplicationJSONObject() *GetIpsecTunnelsIDResponse429ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndTwentyNineApplicationJSONObject
}

func (o *GetIpsecTunnelsIDResponse) GetFiveHundredApplicationJSONObject() *GetIpsecTunnelsIDResponse500ResponseBody {
	if o == nil {
		return nil
	}
	return o.FiveHundredApplicationJSONObject
}

func (o *GetIpsecTunnelsIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetIpsecTunnelsIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetIpsecTunnelsIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
