// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PatchSteeringAppsPrivateTagsPublisherTags struct {
	TagID   *int    `json:"tag_id,omitempty"`
	TagName *string `json:"tag_name,omitempty"`
}

func (o *PatchSteeringAppsPrivateTagsPublisherTags) GetTagID() *int {
	if o == nil {
		return nil
	}
	return o.TagID
}

func (o *PatchSteeringAppsPrivateTagsPublisherTags) GetTagName() *string {
	if o == nil {
		return nil
	}
	return o.TagName
}

type PatchSteeringAppsPrivateTagsTags struct {
	TagID   *int    `json:"tag_id,omitempty"`
	TagName *string `json:"tag_name,omitempty"`
}

func (o *PatchSteeringAppsPrivateTagsTags) GetTagID() *int {
	if o == nil {
		return nil
	}
	return o.TagID
}

func (o *PatchSteeringAppsPrivateTagsTags) GetTagName() *string {
	if o == nil {
		return nil
	}
	return o.TagName
}

type PatchSteeringAppsPrivateTagsRequestBody struct {
	ID            *string                                     `json:"id,omitempty"`
	Ids           []string                                    `json:"ids,omitempty"`
	PublisherTags []PatchSteeringAppsPrivateTagsPublisherTags `json:"publisher_tags,omitempty"`
	Tags          []PatchSteeringAppsPrivateTagsTags          `json:"tags,omitempty"`
}

func (o *PatchSteeringAppsPrivateTagsRequestBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *PatchSteeringAppsPrivateTagsRequestBody) GetIds() []string {
	if o == nil {
		return nil
	}
	return o.Ids
}

func (o *PatchSteeringAppsPrivateTagsRequestBody) GetPublisherTags() []PatchSteeringAppsPrivateTagsPublisherTags {
	if o == nil {
		return nil
	}
	return o.PublisherTags
}

func (o *PatchSteeringAppsPrivateTagsRequestBody) GetTags() []PatchSteeringAppsPrivateTagsTags {
	if o == nil {
		return nil
	}
	return o.Tags
}

// PatchSteeringAppsPrivateTagsResponseResponseBody - Invalid request
type PatchSteeringAppsPrivateTagsResponseResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PatchSteeringAppsPrivateTagsResponseResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PatchSteeringAppsPrivateTagsResponseResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type PatchSteeringAppsPrivateTagsData struct {
	TagID   *int    `json:"tag_id,omitempty"`
	TagName *string `json:"tag_name,omitempty"`
}

func (o *PatchSteeringAppsPrivateTagsData) GetTagID() *int {
	if o == nil {
		return nil
	}
	return o.TagID
}

func (o *PatchSteeringAppsPrivateTagsData) GetTagName() *string {
	if o == nil {
		return nil
	}
	return o.TagName
}

type PatchSteeringAppsPrivateTagsStatus string

const (
	PatchSteeringAppsPrivateTagsStatusSuccess  PatchSteeringAppsPrivateTagsStatus = "success"
	PatchSteeringAppsPrivateTagsStatusNotFound PatchSteeringAppsPrivateTagsStatus = "not found"
)

func (e PatchSteeringAppsPrivateTagsStatus) ToPointer() *PatchSteeringAppsPrivateTagsStatus {
	return &e
}

func (e *PatchSteeringAppsPrivateTagsStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "not found":
		*e = PatchSteeringAppsPrivateTagsStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchSteeringAppsPrivateTagsStatus: %v", v)
	}
}

// PatchSteeringAppsPrivateTagsResponseBody - successful operation
type PatchSteeringAppsPrivateTagsResponseBody struct {
	Data   []PatchSteeringAppsPrivateTagsData  `json:"data,omitempty"`
	Status *PatchSteeringAppsPrivateTagsStatus `json:"status,omitempty"`
}

func (o *PatchSteeringAppsPrivateTagsResponseBody) GetData() []PatchSteeringAppsPrivateTagsData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *PatchSteeringAppsPrivateTagsResponseBody) GetStatus() *PatchSteeringAppsPrivateTagsStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

type PatchSteeringAppsPrivateTagsResponse struct {
	// successful operation
	TwoHundredApplicationJSONObject *PatchSteeringAppsPrivateTagsResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *PatchSteeringAppsPrivateTagsResponseResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *PatchSteeringAppsPrivateTagsResponse) GetTwoHundredApplicationJSONObject() *PatchSteeringAppsPrivateTagsResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *PatchSteeringAppsPrivateTagsResponse) GetFourHundredApplicationJSONObject() *PatchSteeringAppsPrivateTagsResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *PatchSteeringAppsPrivateTagsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PatchSteeringAppsPrivateTagsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PatchSteeringAppsPrivateTagsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
