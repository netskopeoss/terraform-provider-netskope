// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type DeleteSteeringAppsPrivatePrivateAppIDRequest struct {
	// private apps id
	PrivateAppID int `pathParam:"style=simple,explode=false,name=private_app_id"`
}

func (o *DeleteSteeringAppsPrivatePrivateAppIDRequest) GetPrivateAppID() int {
	if o == nil {
		return 0
	}
	return o.PrivateAppID
}

// DeleteSteeringAppsPrivatePrivateAppIDResponseResponseBody - Invalid request
type DeleteSteeringAppsPrivatePrivateAppIDResponseResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *DeleteSteeringAppsPrivatePrivateAppIDResponseResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *DeleteSteeringAppsPrivatePrivateAppIDResponseResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type DeleteSteeringAppsPrivatePrivateAppIDStatus string

const (
	DeleteSteeringAppsPrivatePrivateAppIDStatusSuccess DeleteSteeringAppsPrivatePrivateAppIDStatus = "success"
	DeleteSteeringAppsPrivatePrivateAppIDStatusError   DeleteSteeringAppsPrivatePrivateAppIDStatus = "error"
)

func (e DeleteSteeringAppsPrivatePrivateAppIDStatus) ToPointer() *DeleteSteeringAppsPrivatePrivateAppIDStatus {
	return &e
}

func (e *DeleteSteeringAppsPrivatePrivateAppIDStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "error":
		*e = DeleteSteeringAppsPrivatePrivateAppIDStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteSteeringAppsPrivatePrivateAppIDStatus: %v", v)
	}
}

// DeleteSteeringAppsPrivatePrivateAppIDResponseBody - successful operation
type DeleteSteeringAppsPrivatePrivateAppIDResponseBody struct {
	Status *DeleteSteeringAppsPrivatePrivateAppIDStatus `json:"status,omitempty"`
}

func (o *DeleteSteeringAppsPrivatePrivateAppIDResponseBody) GetStatus() *DeleteSteeringAppsPrivatePrivateAppIDStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

type DeleteSteeringAppsPrivatePrivateAppIDResponse struct {
	// successful operation
	TwoHundredApplicationJSONObject *DeleteSteeringAppsPrivatePrivateAppIDResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *DeleteSteeringAppsPrivatePrivateAppIDResponseResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *DeleteSteeringAppsPrivatePrivateAppIDResponse) GetTwoHundredApplicationJSONObject() *DeleteSteeringAppsPrivatePrivateAppIDResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *DeleteSteeringAppsPrivatePrivateAppIDResponse) GetFourHundredApplicationJSONObject() *DeleteSteeringAppsPrivatePrivateAppIDResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *DeleteSteeringAppsPrivatePrivateAppIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DeleteSteeringAppsPrivatePrivateAppIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DeleteSteeringAppsPrivatePrivateAppIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
