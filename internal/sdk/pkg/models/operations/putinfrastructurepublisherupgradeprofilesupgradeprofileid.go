// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDRequestBody struct {
	DockerTag   *string `json:"docker_tag,omitempty"`
	Enabled     *int    `json:"enabled,omitempty"`
	Frequency   *string `json:"frequency,omitempty"`
	ID          *int    `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
	ReleaseType *string `json:"release_type,omitempty"`
	Timezone    *string `json:"timezone,omitempty"`
}

func (o *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDRequestBody) GetDockerTag() *string {
	if o == nil {
		return nil
	}
	return o.DockerTag
}

func (o *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDRequestBody) GetEnabled() *int {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDRequestBody) GetFrequency() *string {
	if o == nil {
		return nil
	}
	return o.Frequency
}

func (o *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDRequestBody) GetID() *int {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDRequestBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDRequestBody) GetReleaseType() *string {
	if o == nil {
		return nil
	}
	return o.ReleaseType
}

func (o *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDRequestBody) GetTimezone() *string {
	if o == nil {
		return nil
	}
	return o.Timezone
}

// PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDQueryParamSilent - flag to skip output except status code
type PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDQueryParamSilent string

const (
	PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDQueryParamSilentOne  PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDQueryParamSilent = "1"
	PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDQueryParamSilentZero PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDQueryParamSilent = "0"
)

func (e PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDQueryParamSilent) ToPointer() *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDQueryParamSilent {
	return &e
}

func (e *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDQueryParamSilent) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "1":
		fallthrough
	case "0":
		*e = PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDQueryParamSilent(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDQueryParamSilent: %v", v)
	}
}

type PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDRequest struct {
	RequestBody PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDRequestBody `request:"mediaType=application/json"`
	// flag to skip output except status code
	Silent *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDQueryParamSilent `queryParam:"style=form,explode=true,name=silent"`
	// publisher upgrade profile id
	UpgradeProfileID int `pathParam:"style=simple,explode=false,name=upgrade_profile_id"`
}

func (o *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDRequest) GetRequestBody() PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDRequestBody {
	if o == nil {
		return PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDRequestBody{}
	}
	return o.RequestBody
}

func (o *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDRequest) GetSilent() *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDQueryParamSilent {
	if o == nil {
		return nil
	}
	return o.Silent
}

func (o *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDRequest) GetUpgradeProfileID() int {
	if o == nil {
		return 0
	}
	return o.UpgradeProfileID
}

// PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDNPAPublisherUpgradeProfilesResponseBody - Invalid request
type PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDNPAPublisherUpgradeProfilesResponseBody struct {
	Message *string `json:"message,omitempty"`
	Status  *int64  `json:"status,omitempty"`
}

func (o *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDNPAPublisherUpgradeProfilesResponseBody) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDNPAPublisherUpgradeProfilesResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDResult struct {
}

// PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDResponseBody - successful operation
type PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDResponseBody struct {
	Result []PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDResult `json:"result,omitempty"`
	Status *int64                                                            `json:"status,omitempty"`
}

func (o *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDResponseBody) GetResult() []PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDResult {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDResponse struct {
	// successful operation
	TwoHundredApplicationJSONObject *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDNPAPublisherUpgradeProfilesResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDResponse) GetTwoHundredApplicationJSONObject() *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDResponse) GetFourHundredApplicationJSONObject() *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDNPAPublisherUpgradeProfilesResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PutInfrastructurePublisherupgradeprofilesUpgradeProfileIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
