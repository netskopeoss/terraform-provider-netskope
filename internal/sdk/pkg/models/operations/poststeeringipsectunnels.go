// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type PostSteeringIpsecTunnelsXff struct {
	Enable *bool    `json:"enable,omitempty"`
	Iplist []string `json:"iplist,omitempty"`
}

func (o *PostSteeringIpsecTunnelsXff) GetEnable() *bool {
	if o == nil {
		return nil
	}
	return o.Enable
}

func (o *PostSteeringIpsecTunnelsXff) GetIplist() []string {
	if o == nil {
		return nil
	}
	return o.Iplist
}

type PostSteeringIpsecTunnelsOptions struct {
	Reauth *bool                        `json:"reauth,omitempty"`
	Rekey  *bool                        `json:"rekey,omitempty"`
	Xff    *PostSteeringIpsecTunnelsXff `json:"xff,omitempty"`
}

func (o *PostSteeringIpsecTunnelsOptions) GetReauth() *bool {
	if o == nil {
		return nil
	}
	return o.Reauth
}

func (o *PostSteeringIpsecTunnelsOptions) GetRekey() *bool {
	if o == nil {
		return nil
	}
	return o.Rekey
}

func (o *PostSteeringIpsecTunnelsOptions) GetXff() *PostSteeringIpsecTunnelsXff {
	if o == nil {
		return nil
	}
	return o.Xff
}

// PostSteeringIpsecTunnelsRequestBody - IPSec tunnel object
type PostSteeringIpsecTunnelsRequestBody struct {
	Bandwidth     *int64                           `json:"bandwidth,omitempty"`
	Enable        *bool                            `json:"enable,omitempty"`
	Encryption    *string                          `json:"encryption,omitempty"`
	Notes         *string                          `json:"notes,omitempty"`
	Options       *PostSteeringIpsecTunnelsOptions `json:"options,omitempty"`
	Pops          []string                         `json:"pops,omitempty"`
	Psk           *string                          `json:"psk,omitempty"`
	Site          *string                          `json:"site,omitempty"`
	Sourcetype    *string                          `json:"sourcetype,omitempty"`
	Srcidentity   *string                          `json:"srcidentity,omitempty"`
	Srcipidentity *string                          `json:"srcipidentity,omitempty"`
	Template      *string                          `json:"template,omitempty"`
	Vendor        *string                          `json:"vendor,omitempty"`
}

func (o *PostSteeringIpsecTunnelsRequestBody) GetBandwidth() *int64 {
	if o == nil {
		return nil
	}
	return o.Bandwidth
}

func (o *PostSteeringIpsecTunnelsRequestBody) GetEnable() *bool {
	if o == nil {
		return nil
	}
	return o.Enable
}

func (o *PostSteeringIpsecTunnelsRequestBody) GetEncryption() *string {
	if o == nil {
		return nil
	}
	return o.Encryption
}

func (o *PostSteeringIpsecTunnelsRequestBody) GetNotes() *string {
	if o == nil {
		return nil
	}
	return o.Notes
}

func (o *PostSteeringIpsecTunnelsRequestBody) GetOptions() *PostSteeringIpsecTunnelsOptions {
	if o == nil {
		return nil
	}
	return o.Options
}

func (o *PostSteeringIpsecTunnelsRequestBody) GetPops() []string {
	if o == nil {
		return nil
	}
	return o.Pops
}

func (o *PostSteeringIpsecTunnelsRequestBody) GetPsk() *string {
	if o == nil {
		return nil
	}
	return o.Psk
}

func (o *PostSteeringIpsecTunnelsRequestBody) GetSite() *string {
	if o == nil {
		return nil
	}
	return o.Site
}

func (o *PostSteeringIpsecTunnelsRequestBody) GetSourcetype() *string {
	if o == nil {
		return nil
	}
	return o.Sourcetype
}

func (o *PostSteeringIpsecTunnelsRequestBody) GetSrcidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcidentity
}

func (o *PostSteeringIpsecTunnelsRequestBody) GetSrcipidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcipidentity
}

func (o *PostSteeringIpsecTunnelsRequestBody) GetTemplate() *string {
	if o == nil {
		return nil
	}
	return o.Template
}

func (o *PostSteeringIpsecTunnelsRequestBody) GetVendor() *string {
	if o == nil {
		return nil
	}
	return o.Vendor
}

// PostSteeringIpsecTunnelsResponse500ResponseBody - Internal server error
type PostSteeringIpsecTunnelsResponse500ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PostSteeringIpsecTunnelsResponse500ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PostSteeringIpsecTunnelsResponse500ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PostSteeringIpsecTunnelsResponse429ResponseBody - Too many requests
type PostSteeringIpsecTunnelsResponse429ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PostSteeringIpsecTunnelsResponse429ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PostSteeringIpsecTunnelsResponse429ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PostSteeringIpsecTunnelsResponse409ResponseBody - Already exists
type PostSteeringIpsecTunnelsResponse409ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PostSteeringIpsecTunnelsResponse409ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PostSteeringIpsecTunnelsResponse409ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PostSteeringIpsecTunnelsResponse405ResponseBody - Method not allowed
type PostSteeringIpsecTunnelsResponse405ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PostSteeringIpsecTunnelsResponse405ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PostSteeringIpsecTunnelsResponse405ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PostSteeringIpsecTunnelsResponse403ResponseBody - Access forbidden
type PostSteeringIpsecTunnelsResponse403ResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PostSteeringIpsecTunnelsResponse403ResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PostSteeringIpsecTunnelsResponse403ResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PostSteeringIpsecTunnelsResponseResponseBody - Invalid request
type PostSteeringIpsecTunnelsResponseResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PostSteeringIpsecTunnelsResponseResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PostSteeringIpsecTunnelsResponseResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type PostSteeringIpsecTunnelsResponseXff struct {
	Enabled *bool    `json:"enabled,omitempty"`
	Iplist  []string `json:"iplist,omitempty"`
}

func (o *PostSteeringIpsecTunnelsResponseXff) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *PostSteeringIpsecTunnelsResponseXff) GetIplist() []string {
	if o == nil {
		return nil
	}
	return o.Iplist
}

type PostSteeringIpsecTunnelsResponseOptions struct {
	Reauth *bool                                `json:"reauth,omitempty"`
	Rekey  *bool                                `json:"rekey,omitempty"`
	Xff    *PostSteeringIpsecTunnelsResponseXff `json:"xff,omitempty"`
}

func (o *PostSteeringIpsecTunnelsResponseOptions) GetReauth() *bool {
	if o == nil {
		return nil
	}
	return o.Reauth
}

func (o *PostSteeringIpsecTunnelsResponseOptions) GetRekey() *bool {
	if o == nil {
		return nil
	}
	return o.Rekey
}

func (o *PostSteeringIpsecTunnelsResponseOptions) GetXff() *PostSteeringIpsecTunnelsResponseXff {
	if o == nil {
		return nil
	}
	return o.Xff
}

type PostSteeringIpsecTunnelsPops struct {
	Gateway    *string `json:"gateway,omitempty"`
	Name       *string `json:"name,omitempty"`
	Primary    *bool   `json:"primary,omitempty"`
	Probeip    *string `json:"probeip,omitempty"`
	Since      *string `json:"since,omitempty"`
	Status     *string `json:"status,omitempty"`
	Throughput *string `json:"throughput,omitempty"`
}

func (o *PostSteeringIpsecTunnelsPops) GetGateway() *string {
	if o == nil {
		return nil
	}
	return o.Gateway
}

func (o *PostSteeringIpsecTunnelsPops) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *PostSteeringIpsecTunnelsPops) GetPrimary() *bool {
	if o == nil {
		return nil
	}
	return o.Primary
}

func (o *PostSteeringIpsecTunnelsPops) GetProbeip() *string {
	if o == nil {
		return nil
	}
	return o.Probeip
}

func (o *PostSteeringIpsecTunnelsPops) GetSince() *string {
	if o == nil {
		return nil
	}
	return o.Since
}

func (o *PostSteeringIpsecTunnelsPops) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *PostSteeringIpsecTunnelsPops) GetThroughput() *string {
	if o == nil {
		return nil
	}
	return o.Throughput
}

type PostSteeringIpsecTunnelsData struct {
	Bandwidth     *int64                                   `json:"bandwidth,omitempty"`
	Enabled       *bool                                    `json:"enabled,omitempty"`
	Encryption    *string                                  `json:"encryption,omitempty"`
	ID            *int64                                   `json:"id,omitempty"`
	Notes         *string                                  `json:"notes,omitempty"`
	Options       *PostSteeringIpsecTunnelsResponseOptions `json:"options,omitempty"`
	Pops          []PostSteeringIpsecTunnelsPops           `json:"pops,omitempty"`
	Site          *string                                  `json:"site,omitempty"`
	Sourcetype    *string                                  `json:"sourcetype,omitempty"`
	Srcidentity   *string                                  `json:"srcidentity,omitempty"`
	Srcipidentity *string                                  `json:"srcipidentity,omitempty"`
	Template      *string                                  `json:"template,omitempty"`
	Vendor        *string                                  `json:"vendor,omitempty"`
	Version       *int64                                   `json:"version,omitempty"`
}

func (o *PostSteeringIpsecTunnelsData) GetBandwidth() *int64 {
	if o == nil {
		return nil
	}
	return o.Bandwidth
}

func (o *PostSteeringIpsecTunnelsData) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *PostSteeringIpsecTunnelsData) GetEncryption() *string {
	if o == nil {
		return nil
	}
	return o.Encryption
}

func (o *PostSteeringIpsecTunnelsData) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *PostSteeringIpsecTunnelsData) GetNotes() *string {
	if o == nil {
		return nil
	}
	return o.Notes
}

func (o *PostSteeringIpsecTunnelsData) GetOptions() *PostSteeringIpsecTunnelsResponseOptions {
	if o == nil {
		return nil
	}
	return o.Options
}

func (o *PostSteeringIpsecTunnelsData) GetPops() []PostSteeringIpsecTunnelsPops {
	if o == nil {
		return nil
	}
	return o.Pops
}

func (o *PostSteeringIpsecTunnelsData) GetSite() *string {
	if o == nil {
		return nil
	}
	return o.Site
}

func (o *PostSteeringIpsecTunnelsData) GetSourcetype() *string {
	if o == nil {
		return nil
	}
	return o.Sourcetype
}

func (o *PostSteeringIpsecTunnelsData) GetSrcidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcidentity
}

func (o *PostSteeringIpsecTunnelsData) GetSrcipidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcipidentity
}

func (o *PostSteeringIpsecTunnelsData) GetTemplate() *string {
	if o == nil {
		return nil
	}
	return o.Template
}

func (o *PostSteeringIpsecTunnelsData) GetVendor() *string {
	if o == nil {
		return nil
	}
	return o.Vendor
}

func (o *PostSteeringIpsecTunnelsData) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

// PostSteeringIpsecTunnelsResponseBody - Successful operation
type PostSteeringIpsecTunnelsResponseBody struct {
	Data   []PostSteeringIpsecTunnelsData `json:"data,omitempty"`
	Result *string                        `json:"result,omitempty"`
	Status *int64                         `json:"status,omitempty"`
}

func (o *PostSteeringIpsecTunnelsResponseBody) GetData() []PostSteeringIpsecTunnelsData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *PostSteeringIpsecTunnelsResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PostSteeringIpsecTunnelsResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

type PostSteeringIpsecTunnelsResponse struct {
	// Successful operation
	TwoHundredAndOneApplicationJSONObject *PostSteeringIpsecTunnelsResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *PostSteeringIpsecTunnelsResponseResponseBody
	// Access forbidden
	FourHundredAndThreeApplicationJSONObject *PostSteeringIpsecTunnelsResponse403ResponseBody
	// Method not allowed
	FourHundredAndFiveApplicationJSONObject *PostSteeringIpsecTunnelsResponse405ResponseBody
	// Already exists
	FourHundredAndNineApplicationJSONObject *PostSteeringIpsecTunnelsResponse409ResponseBody
	// Too many requests
	FourHundredAndTwentyNineApplicationJSONObject *PostSteeringIpsecTunnelsResponse429ResponseBody
	// Internal server error
	FiveHundredApplicationJSONObject *PostSteeringIpsecTunnelsResponse500ResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *PostSteeringIpsecTunnelsResponse) GetTwoHundredAndOneApplicationJSONObject() *PostSteeringIpsecTunnelsResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredAndOneApplicationJSONObject
}

func (o *PostSteeringIpsecTunnelsResponse) GetFourHundredApplicationJSONObject() *PostSteeringIpsecTunnelsResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *PostSteeringIpsecTunnelsResponse) GetFourHundredAndThreeApplicationJSONObject() *PostSteeringIpsecTunnelsResponse403ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndThreeApplicationJSONObject
}

func (o *PostSteeringIpsecTunnelsResponse) GetFourHundredAndFiveApplicationJSONObject() *PostSteeringIpsecTunnelsResponse405ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndFiveApplicationJSONObject
}

func (o *PostSteeringIpsecTunnelsResponse) GetFourHundredAndNineApplicationJSONObject() *PostSteeringIpsecTunnelsResponse409ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndNineApplicationJSONObject
}

func (o *PostSteeringIpsecTunnelsResponse) GetFourHundredAndTwentyNineApplicationJSONObject() *PostSteeringIpsecTunnelsResponse429ResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredAndTwentyNineApplicationJSONObject
}

func (o *PostSteeringIpsecTunnelsResponse) GetFiveHundredApplicationJSONObject() *PostSteeringIpsecTunnelsResponse500ResponseBody {
	if o == nil {
		return nil
	}
	return o.FiveHundredApplicationJSONObject
}

func (o *PostSteeringIpsecTunnelsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PostSteeringIpsecTunnelsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PostSteeringIpsecTunnelsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
