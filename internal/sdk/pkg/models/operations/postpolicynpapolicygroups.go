// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PostPolicyNpaPolicygroupsOrder string

const (
	PostPolicyNpaPolicygroupsOrderBefore PostPolicyNpaPolicygroupsOrder = "before"
	PostPolicyNpaPolicygroupsOrderAfter  PostPolicyNpaPolicygroupsOrder = "after"
)

func (e PostPolicyNpaPolicygroupsOrder) ToPointer() *PostPolicyNpaPolicygroupsOrder {
	return &e
}

func (e *PostPolicyNpaPolicygroupsOrder) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "before":
		fallthrough
	case "after":
		*e = PostPolicyNpaPolicygroupsOrder(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostPolicyNpaPolicygroupsOrder: %v", v)
	}
}

type PostPolicyNpaPolicygroupsRequestGroupOrder struct {
	GroupID *string                         `json:"group_id,omitempty"`
	Order   *PostPolicyNpaPolicygroupsOrder `json:"order,omitempty"`
}

func (o *PostPolicyNpaPolicygroupsRequestGroupOrder) GetGroupID() *string {
	if o == nil {
		return nil
	}
	return o.GroupID
}

func (o *PostPolicyNpaPolicygroupsRequestGroupOrder) GetOrder() *PostPolicyNpaPolicygroupsOrder {
	if o == nil {
		return nil
	}
	return o.Order
}

type PostPolicyNpaPolicygroupsGroupOrder struct {
	GroupOrder *PostPolicyNpaPolicygroupsRequestGroupOrder `json:"group_order,omitempty"`
}

func (o *PostPolicyNpaPolicygroupsGroupOrder) GetGroupOrder() *PostPolicyNpaPolicygroupsRequestGroupOrder {
	if o == nil {
		return nil
	}
	return o.GroupOrder
}

type PostPolicyNpaPolicygroupsRequestBody struct {
	GroupName  *string                              `json:"group_name,omitempty"`
	GroupOrder *PostPolicyNpaPolicygroupsGroupOrder `json:"group_order,omitempty"`
	ModifyBy   *string                              `json:"modify_by,omitempty"`
	ModifyType *string                              `json:"modify_type,omitempty"`
}

func (o *PostPolicyNpaPolicygroupsRequestBody) GetGroupName() *string {
	if o == nil {
		return nil
	}
	return o.GroupName
}

func (o *PostPolicyNpaPolicygroupsRequestBody) GetGroupOrder() *PostPolicyNpaPolicygroupsGroupOrder {
	if o == nil {
		return nil
	}
	return o.GroupOrder
}

func (o *PostPolicyNpaPolicygroupsRequestBody) GetModifyBy() *string {
	if o == nil {
		return nil
	}
	return o.ModifyBy
}

func (o *PostPolicyNpaPolicygroupsRequestBody) GetModifyType() *string {
	if o == nil {
		return nil
	}
	return o.ModifyType
}

// PostPolicyNpaPolicygroupsQueryParamSilent - flag to skip output except status code
type PostPolicyNpaPolicygroupsQueryParamSilent string

const (
	PostPolicyNpaPolicygroupsQueryParamSilentOne  PostPolicyNpaPolicygroupsQueryParamSilent = "1"
	PostPolicyNpaPolicygroupsQueryParamSilentZero PostPolicyNpaPolicygroupsQueryParamSilent = "0"
)

func (e PostPolicyNpaPolicygroupsQueryParamSilent) ToPointer() *PostPolicyNpaPolicygroupsQueryParamSilent {
	return &e
}

func (e *PostPolicyNpaPolicygroupsQueryParamSilent) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "1":
		fallthrough
	case "0":
		*e = PostPolicyNpaPolicygroupsQueryParamSilent(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostPolicyNpaPolicygroupsQueryParamSilent: %v", v)
	}
}

type PostPolicyNpaPolicygroupsRequest struct {
	RequestBody PostPolicyNpaPolicygroupsRequestBody `request:"mediaType=application/json"`
	// flag to skip output except status code
	Silent *PostPolicyNpaPolicygroupsQueryParamSilent `queryParam:"style=form,explode=true,name=silent"`
}

func (o *PostPolicyNpaPolicygroupsRequest) GetRequestBody() PostPolicyNpaPolicygroupsRequestBody {
	if o == nil {
		return PostPolicyNpaPolicygroupsRequestBody{}
	}
	return o.RequestBody
}

func (o *PostPolicyNpaPolicygroupsRequest) GetSilent() *PostPolicyNpaPolicygroupsQueryParamSilent {
	if o == nil {
		return nil
	}
	return o.Silent
}

// PostPolicyNpaPolicygroupsResponseResponseBody - Invalid request
type PostPolicyNpaPolicygroupsResponseResponseBody struct {
	Result *string `json:"result,omitempty"`
	Status *int64  `json:"status,omitempty"`
}

func (o *PostPolicyNpaPolicygroupsResponseResponseBody) GetResult() *string {
	if o == nil {
		return nil
	}
	return o.Result
}

func (o *PostPolicyNpaPolicygroupsResponseResponseBody) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// PostPolicyNpaPolicygroupsResponseBody - successful operation
type PostPolicyNpaPolicygroupsResponseBody struct {
	CanBeEditedDeleted *int64  `json:"can_be_edited_deleted,omitempty"`
	GroupID            *int64  `json:"group_id,omitempty"`
	GroupName          *string `json:"group_name,omitempty"`
	GroupPinnedID      *int64  `json:"group_pinned_id,omitempty"`
	GroupProdID        *int64  `json:"group_prod_id,omitempty"`
	GroupType          *int64  `json:"group_type,omitempty"`
	ModifyTime         *string `json:"modify_time,omitempty"`
	ModifyType         *string `json:"modify_type,omitempty"`
}

func (o *PostPolicyNpaPolicygroupsResponseBody) GetCanBeEditedDeleted() *int64 {
	if o == nil {
		return nil
	}
	return o.CanBeEditedDeleted
}

func (o *PostPolicyNpaPolicygroupsResponseBody) GetGroupID() *int64 {
	if o == nil {
		return nil
	}
	return o.GroupID
}

func (o *PostPolicyNpaPolicygroupsResponseBody) GetGroupName() *string {
	if o == nil {
		return nil
	}
	return o.GroupName
}

func (o *PostPolicyNpaPolicygroupsResponseBody) GetGroupPinnedID() *int64 {
	if o == nil {
		return nil
	}
	return o.GroupPinnedID
}

func (o *PostPolicyNpaPolicygroupsResponseBody) GetGroupProdID() *int64 {
	if o == nil {
		return nil
	}
	return o.GroupProdID
}

func (o *PostPolicyNpaPolicygroupsResponseBody) GetGroupType() *int64 {
	if o == nil {
		return nil
	}
	return o.GroupType
}

func (o *PostPolicyNpaPolicygroupsResponseBody) GetModifyTime() *string {
	if o == nil {
		return nil
	}
	return o.ModifyTime
}

func (o *PostPolicyNpaPolicygroupsResponseBody) GetModifyType() *string {
	if o == nil {
		return nil
	}
	return o.ModifyType
}

type PostPolicyNpaPolicygroupsResponse struct {
	// successful operation
	TwoHundredApplicationJSONObject *PostPolicyNpaPolicygroupsResponseBody
	// Invalid request
	FourHundredApplicationJSONObject *PostPolicyNpaPolicygroupsResponseResponseBody
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *PostPolicyNpaPolicygroupsResponse) GetTwoHundredApplicationJSONObject() *PostPolicyNpaPolicygroupsResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *PostPolicyNpaPolicygroupsResponse) GetFourHundredApplicationJSONObject() *PostPolicyNpaPolicygroupsResponseResponseBody {
	if o == nil {
		return nil
	}
	return o.FourHundredApplicationJSONObject
}

func (o *PostPolicyNpaPolicygroupsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PostPolicyNpaPolicygroupsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PostPolicyNpaPolicygroupsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
