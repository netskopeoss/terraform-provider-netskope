// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy/terraform-provider-terraform/internal/sdk/pkg/models/shared"
	"net/http"
)

// PostPolicyNpaPolicygroupsQueryParamSilent - flag to skip output except status code
type PostPolicyNpaPolicygroupsQueryParamSilent string

const (
	PostPolicyNpaPolicygroupsQueryParamSilentOne  PostPolicyNpaPolicygroupsQueryParamSilent = "1"
	PostPolicyNpaPolicygroupsQueryParamSilentZero PostPolicyNpaPolicygroupsQueryParamSilent = "0"
)

func (e PostPolicyNpaPolicygroupsQueryParamSilent) ToPointer() *PostPolicyNpaPolicygroupsQueryParamSilent {
	return &e
}

func (e *PostPolicyNpaPolicygroupsQueryParamSilent) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "1":
		fallthrough
	case "0":
		*e = PostPolicyNpaPolicygroupsQueryParamSilent(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostPolicyNpaPolicygroupsQueryParamSilent: %v", v)
	}
}

type PostPolicyNpaPolicygroupsRequest struct {
	// flag to skip output except status code
	Silent                *PostPolicyNpaPolicygroupsQueryParamSilent `queryParam:"style=form,explode=true,name=silent"`
	NpaPolicygroupRequest shared.NpaPolicygroupRequest               `request:"mediaType=application/json"`
}

func (o *PostPolicyNpaPolicygroupsRequest) GetSilent() *PostPolicyNpaPolicygroupsQueryParamSilent {
	if o == nil {
		return nil
	}
	return o.Silent
}

func (o *PostPolicyNpaPolicygroupsRequest) GetNpaPolicygroupRequest() shared.NpaPolicygroupRequest {
	if o == nil {
		return shared.NpaPolicygroupRequest{}
	}
	return o.NpaPolicygroupRequest
}

// PostPolicyNpaPolicygroupsResponseBody - successful operation
type PostPolicyNpaPolicygroupsResponseBody struct {
	Data *shared.NpaPolicygroupResponseItem `json:"data,omitempty"`
}

func (o *PostPolicyNpaPolicygroupsResponseBody) GetData() *shared.NpaPolicygroupResponseItem {
	if o == nil {
		return nil
	}
	return o.Data
}

type PostPolicyNpaPolicygroupsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// successful operation
	Object *PostPolicyNpaPolicygroupsResponseBody
	// Invalid request
	NpaPolicygroupResponse400 *shared.NpaPolicygroupResponse400
}

func (o *PostPolicyNpaPolicygroupsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *PostPolicyNpaPolicygroupsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *PostPolicyNpaPolicygroupsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *PostPolicyNpaPolicygroupsResponse) GetObject() *PostPolicyNpaPolicygroupsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}

func (o *PostPolicyNpaPolicygroupsResponse) GetNpaPolicygroupResponse400() *shared.NpaPolicygroupResponse400 {
	if o == nil {
		return nil
	}
	return o.NpaPolicygroupResponse400
}
