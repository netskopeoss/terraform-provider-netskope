// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type IpsecTunnelRequestPatchXff struct {
	Enable *bool    `json:"enable,omitempty"`
	Iplist []string `json:"iplist,omitempty"`
}

func (o *IpsecTunnelRequestPatchXff) GetEnable() *bool {
	if o == nil {
		return nil
	}
	return o.Enable
}

func (o *IpsecTunnelRequestPatchXff) GetIplist() []string {
	if o == nil {
		return nil
	}
	return o.Iplist
}

type IpsecTunnelRequestPatchOptions struct {
	Reauth *bool                       `json:"reauth,omitempty"`
	Rekey  *bool                       `json:"rekey,omitempty"`
	Xff    *IpsecTunnelRequestPatchXff `json:"xff,omitempty"`
}

func (o *IpsecTunnelRequestPatchOptions) GetReauth() *bool {
	if o == nil {
		return nil
	}
	return o.Reauth
}

func (o *IpsecTunnelRequestPatchOptions) GetRekey() *bool {
	if o == nil {
		return nil
	}
	return o.Rekey
}

func (o *IpsecTunnelRequestPatchOptions) GetXff() *IpsecTunnelRequestPatchXff {
	if o == nil {
		return nil
	}
	return o.Xff
}

type IpsecTunnelRequestPatch struct {
	Bandwidth     *int64                          `json:"bandwidth,omitempty"`
	Enable        *bool                           `json:"enable,omitempty"`
	Encryption    *string                         `json:"encryption,omitempty"`
	Notes         *string                         `json:"notes,omitempty"`
	Options       *IpsecTunnelRequestPatchOptions `json:"options,omitempty"`
	Pops          []string                        `json:"pops,omitempty"`
	Psk           *string                         `json:"psk,omitempty"`
	Site          *string                         `json:"site,omitempty"`
	Sourcetype    *string                         `json:"sourcetype,omitempty"`
	Srcidentity   *string                         `json:"srcidentity,omitempty"`
	Srcipidentity *string                         `json:"srcipidentity,omitempty"`
	Template      *string                         `json:"template,omitempty"`
	Vendor        *string                         `json:"vendor,omitempty"`
}

func (o *IpsecTunnelRequestPatch) GetBandwidth() *int64 {
	if o == nil {
		return nil
	}
	return o.Bandwidth
}

func (o *IpsecTunnelRequestPatch) GetEnable() *bool {
	if o == nil {
		return nil
	}
	return o.Enable
}

func (o *IpsecTunnelRequestPatch) GetEncryption() *string {
	if o == nil {
		return nil
	}
	return o.Encryption
}

func (o *IpsecTunnelRequestPatch) GetNotes() *string {
	if o == nil {
		return nil
	}
	return o.Notes
}

func (o *IpsecTunnelRequestPatch) GetOptions() *IpsecTunnelRequestPatchOptions {
	if o == nil {
		return nil
	}
	return o.Options
}

func (o *IpsecTunnelRequestPatch) GetPops() []string {
	if o == nil {
		return nil
	}
	return o.Pops
}

func (o *IpsecTunnelRequestPatch) GetPsk() *string {
	if o == nil {
		return nil
	}
	return o.Psk
}

func (o *IpsecTunnelRequestPatch) GetSite() *string {
	if o == nil {
		return nil
	}
	return o.Site
}

func (o *IpsecTunnelRequestPatch) GetSourcetype() *string {
	if o == nil {
		return nil
	}
	return o.Sourcetype
}

func (o *IpsecTunnelRequestPatch) GetSrcidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcidentity
}

func (o *IpsecTunnelRequestPatch) GetSrcipidentity() *string {
	if o == nil {
		return nil
	}
	return o.Srcipidentity
}

func (o *IpsecTunnelRequestPatch) GetTemplate() *string {
	if o == nil {
		return nil
	}
	return o.Template
}

func (o *IpsecTunnelRequestPatch) GetVendor() *string {
	if o == nil {
		return nil
	}
	return o.Vendor
}
