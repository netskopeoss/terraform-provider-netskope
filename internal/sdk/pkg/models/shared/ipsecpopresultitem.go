// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type Phase1 struct {
	Dhgroup        *string `json:"dhgroup,omitempty"`
	Dpd            *bool   `json:"dpd,omitempty"`
	Encryptionalgo *string `json:"encryptionalgo,omitempty"`
	Ikeversion     *string `json:"ikeversion,omitempty"`
	Integrityalgo  *string `json:"integrityalgo,omitempty"`
	Salifetime     *string `json:"salifetime,omitempty"`
}

func (o *Phase1) GetDhgroup() *string {
	if o == nil {
		return nil
	}
	return o.Dhgroup
}

func (o *Phase1) GetDpd() *bool {
	if o == nil {
		return nil
	}
	return o.Dpd
}

func (o *Phase1) GetEncryptionalgo() *string {
	if o == nil {
		return nil
	}
	return o.Encryptionalgo
}

func (o *Phase1) GetIkeversion() *string {
	if o == nil {
		return nil
	}
	return o.Ikeversion
}

func (o *Phase1) GetIntegrityalgo() *string {
	if o == nil {
		return nil
	}
	return o.Integrityalgo
}

func (o *Phase1) GetSalifetime() *string {
	if o == nil {
		return nil
	}
	return o.Salifetime
}

type Phase2 struct {
	Dhgroup        *string `json:"dhgroup,omitempty"`
	Encryptionalgo *string `json:"encryptionalgo,omitempty"`
	Integrityalgo  *string `json:"integrityalgo,omitempty"`
	Pfs            *bool   `json:"pfs,omitempty"`
	Salifetime     *string `json:"salifetime,omitempty"`
}

func (o *Phase2) GetDhgroup() *string {
	if o == nil {
		return nil
	}
	return o.Dhgroup
}

func (o *Phase2) GetEncryptionalgo() *string {
	if o == nil {
		return nil
	}
	return o.Encryptionalgo
}

func (o *Phase2) GetIntegrityalgo() *string {
	if o == nil {
		return nil
	}
	return o.Integrityalgo
}

func (o *Phase2) GetPfs() *bool {
	if o == nil {
		return nil
	}
	return o.Pfs
}

func (o *Phase2) GetSalifetime() *string {
	if o == nil {
		return nil
	}
	return o.Salifetime
}

type IpsecPopResultItemOptions struct {
	Phase1 *Phase1 `json:"phase1,omitempty"`
	Phase2 *Phase2 `json:"phase2,omitempty"`
}

func (o *IpsecPopResultItemOptions) GetPhase1() *Phase1 {
	if o == nil {
		return nil
	}
	return o.Phase1
}

func (o *IpsecPopResultItemOptions) GetPhase2() *Phase2 {
	if o == nil {
		return nil
	}
	return o.Phase2
}

type IpsecPopResultItem struct {
	Acceptingtunnels *bool                      `json:"acceptingtunnels,omitempty"`
	Bandwidth        *string                    `json:"bandwidth,omitempty"`
	Distance         *string                    `json:"distance,omitempty"`
	Gateway          *string                    `json:"gateway,omitempty"`
	ID               *string                    `json:"id,omitempty"`
	Location         *string                    `json:"location,omitempty"`
	Name             *string                    `json:"name,omitempty"`
	Options          *IpsecPopResultItemOptions `json:"options,omitempty"`
	Probeip          *string                    `json:"probeip,omitempty"`
	Region           *string                    `json:"region,omitempty"`
}

func (o *IpsecPopResultItem) GetAcceptingtunnels() *bool {
	if o == nil {
		return nil
	}
	return o.Acceptingtunnels
}

func (o *IpsecPopResultItem) GetBandwidth() *string {
	if o == nil {
		return nil
	}
	return o.Bandwidth
}

func (o *IpsecPopResultItem) GetDistance() *string {
	if o == nil {
		return nil
	}
	return o.Distance
}

func (o *IpsecPopResultItem) GetGateway() *string {
	if o == nil {
		return nil
	}
	return o.Gateway
}

func (o *IpsecPopResultItem) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *IpsecPopResultItem) GetLocation() *string {
	if o == nil {
		return nil
	}
	return o.Location
}

func (o *IpsecPopResultItem) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *IpsecPopResultItem) GetOptions() *IpsecPopResultItemOptions {
	if o == nil {
		return nil
	}
	return o.Options
}

func (o *IpsecPopResultItem) GetProbeip() *string {
	if o == nil {
		return nil
	}
	return o.Probeip
}

func (o *IpsecPopResultItem) GetRegion() *string {
	if o == nil {
		return nil
	}
	return o.Region
}
