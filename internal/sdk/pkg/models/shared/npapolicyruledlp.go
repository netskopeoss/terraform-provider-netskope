// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type Actions string

const (
	ActionsAllow       Actions = "allow"
	ActionsBlock       Actions = "block"
	ActionsAlert       Actions = "alert"
	ActionsQuanrantine Actions = "quanrantine"
	ActionsBypass      Actions = "bypass"
)

func (e Actions) ToPointer() *Actions {
	return &e
}

func (e *Actions) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "allow":
		fallthrough
	case "block":
		fallthrough
	case "alert":
		fallthrough
	case "quanrantine":
		fallthrough
	case "bypass":
		*e = Actions(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Actions: %v", v)
	}
}

type NpaPolicyRuleDlp struct {
	Actions    []Actions `json:"actions,omitempty"`
	DlpProfile *string   `json:"dlp_profile,omitempty"`
}

func (o *NpaPolicyRuleDlp) GetActions() []Actions {
	if o == nil {
		return nil
	}
	return o.Actions
}

func (o *NpaPolicyRuleDlp) GetDlpProfile() *string {
	if o == nil {
		return nil
	}
	return o.DlpProfile
}
