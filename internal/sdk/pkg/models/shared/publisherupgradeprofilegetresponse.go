// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PublisherUpgradeProfileGetResponseData struct {
	DockerTag   *string `json:"docker_tag,omitempty"`
	Enabled     *int    `json:"enabled,omitempty"`
	Frequency   *string `json:"frequency,omitempty"`
	ID          *int    `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
	ReleaseType *string `json:"release_type,omitempty"`
	Timezone    *string `json:"timezone,omitempty"`
}

func (o *PublisherUpgradeProfileGetResponseData) GetDockerTag() *string {
	if o == nil {
		return nil
	}
	return o.DockerTag
}

func (o *PublisherUpgradeProfileGetResponseData) GetEnabled() *int {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *PublisherUpgradeProfileGetResponseData) GetFrequency() *string {
	if o == nil {
		return nil
	}
	return o.Frequency
}

func (o *PublisherUpgradeProfileGetResponseData) GetID() *int {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *PublisherUpgradeProfileGetResponseData) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *PublisherUpgradeProfileGetResponseData) GetReleaseType() *string {
	if o == nil {
		return nil
	}
	return o.ReleaseType
}

func (o *PublisherUpgradeProfileGetResponseData) GetTimezone() *string {
	if o == nil {
		return nil
	}
	return o.Timezone
}

type PublisherUpgradeProfileGetResponseStatus string

const (
	PublisherUpgradeProfileGetResponseStatusSuccess  PublisherUpgradeProfileGetResponseStatus = "success"
	PublisherUpgradeProfileGetResponseStatusNotFound PublisherUpgradeProfileGetResponseStatus = "not found"
)

func (e PublisherUpgradeProfileGetResponseStatus) ToPointer() *PublisherUpgradeProfileGetResponseStatus {
	return &e
}

func (e *PublisherUpgradeProfileGetResponseStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "not found":
		*e = PublisherUpgradeProfileGetResponseStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PublisherUpgradeProfileGetResponseStatus: %v", v)
	}
}

type PublisherUpgradeProfileGetResponse struct {
	Data   []PublisherUpgradeProfileGetResponseData  `json:"data,omitempty"`
	Status *PublisherUpgradeProfileGetResponseStatus `json:"status,omitempty"`
	Total  *int                                      `json:"total,omitempty"`
}

func (o *PublisherUpgradeProfileGetResponse) GetData() []PublisherUpgradeProfileGetResponseData {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *PublisherUpgradeProfileGetResponse) GetStatus() *PublisherUpgradeProfileGetResponseStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *PublisherUpgradeProfileGetResponse) GetTotal() *int {
	if o == nil {
		return nil
	}
	return o.Total
}
