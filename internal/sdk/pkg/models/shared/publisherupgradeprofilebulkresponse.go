// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PublisherUpgradeProfileBulkResponseStatus string

const (
	PublisherUpgradeProfileBulkResponseStatusSuccess  PublisherUpgradeProfileBulkResponseStatus = "success"
	PublisherUpgradeProfileBulkResponseStatusNotFound PublisherUpgradeProfileBulkResponseStatus = "not found"
)

func (e PublisherUpgradeProfileBulkResponseStatus) ToPointer() *PublisherUpgradeProfileBulkResponseStatus {
	return &e
}

func (e *PublisherUpgradeProfileBulkResponseStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "not found":
		*e = PublisherUpgradeProfileBulkResponseStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PublisherUpgradeProfileBulkResponseStatus: %v", v)
	}
}

type PublisherUpgradeProfileBulkResponse struct {
	Data   []PublisherResponse                        `json:"data,omitempty"`
	Status *PublisherUpgradeProfileBulkResponseStatus `json:"status,omitempty"`
	Total  *int                                       `json:"total,omitempty"`
}

func (o *PublisherUpgradeProfileBulkResponse) GetData() []PublisherResponse {
	if o == nil {
		return nil
	}
	return o.Data
}

func (o *PublisherUpgradeProfileBulkResponse) GetStatus() *PublisherUpgradeProfileBulkResponseStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *PublisherUpgradeProfileBulkResponse) GetTotal() *int {
	if o == nil {
		return nil
	}
	return o.Total
}
