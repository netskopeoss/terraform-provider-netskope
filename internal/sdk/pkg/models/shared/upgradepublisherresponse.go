// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UpgradePublisherResponseAssessment struct {
}

type UpgradePublisherResponseStatus string

const (
	UpgradePublisherResponseStatusConnected     UpgradePublisherResponseStatus = "connected"
	UpgradePublisherResponseStatusNotRegistered UpgradePublisherResponseStatus = "not registered"
)

func (e UpgradePublisherResponseStatus) ToPointer() *UpgradePublisherResponseStatus {
	return &e
}

func (e *UpgradePublisherResponseStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "connected":
		fallthrough
	case "not registered":
		*e = UpgradePublisherResponseStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpgradePublisherResponseStatus: %v", v)
	}
}

type UpgradePublisherResponse struct {
	Assessment                *UpgradePublisherResponseAssessment `json:"assessment,omitempty"`
	CommonName                *string                             `json:"common_name,omitempty"`
	Lbrokerconnect            *bool                               `json:"lbrokerconnect,omitempty"`
	PublisherID               *int                                `json:"publisher_id,omitempty"`
	PublisherName             *string                             `json:"publisher_name,omitempty"`
	PublisherUpgradeProfileID *int                                `json:"publisher_upgrade_profile_id,omitempty"`
	Registered                *bool                               `json:"registered,omitempty"`
	Status                    *UpgradePublisherResponseStatus     `json:"status,omitempty"`
	StitcherID                *int                                `json:"stitcher_id,omitempty"`
	Tags                      []TagItem                           `json:"tags,omitempty"`
}

func (o *UpgradePublisherResponse) GetAssessment() *UpgradePublisherResponseAssessment {
	if o == nil {
		return nil
	}
	return o.Assessment
}

func (o *UpgradePublisherResponse) GetCommonName() *string {
	if o == nil {
		return nil
	}
	return o.CommonName
}

func (o *UpgradePublisherResponse) GetLbrokerconnect() *bool {
	if o == nil {
		return nil
	}
	return o.Lbrokerconnect
}

func (o *UpgradePublisherResponse) GetPublisherID() *int {
	if o == nil {
		return nil
	}
	return o.PublisherID
}

func (o *UpgradePublisherResponse) GetPublisherName() *string {
	if o == nil {
		return nil
	}
	return o.PublisherName
}

func (o *UpgradePublisherResponse) GetPublisherUpgradeProfileID() *int {
	if o == nil {
		return nil
	}
	return o.PublisherUpgradeProfileID
}

func (o *UpgradePublisherResponse) GetRegistered() *bool {
	if o == nil {
		return nil
	}
	return o.Registered
}

func (o *UpgradePublisherResponse) GetStatus() *UpgradePublisherResponseStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *UpgradePublisherResponse) GetStitcherID() *int {
	if o == nil {
		return nil
	}
	return o.StitcherID
}

func (o *UpgradePublisherResponse) GetTags() []TagItem {
	if o == nil {
		return nil
	}
	return o.Tags
}
