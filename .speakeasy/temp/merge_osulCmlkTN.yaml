openapi: 3.0.0
info:
    title: Netskope SCIM Server endpoints
    description: "<details><summary>API to provision users and groups to the tenant.</summary>\n# Introduction\nAPI to provision users and groups to the tenant.\n\nSCIM specification is defined in [RFC-7644](https://www.rfc-editor.org/rfc/rfc7644.html).\n\nNetskope SCIM Server supports subset of the APIs listed bellow.\n# Supported Resources\n## User\nSchema is mention in the [RFC-7643](https://datatracker.ietf.org/doc/rfc7643/)\n\nFollowing attrbute is supported.\n| Attribute | Schema | Description |\n|-          |-      |-            |\n|*`emails`   | [RFC-7643](https://datatracker.ietf.org/doc/rfc7643/)#`core:2.0:User` | Multivalued attribute. How ever **Scim server only supports primary email, and ignores the other values**.<br>**Request will be rejected if primary email is not specified.**|\n|*`userName`|[RFC-7643](https://datatracker.ietf.org/doc/rfc7643/)#`core:2.0:User`|unique userName of the user.**Request will be rejected if primary email is not specified.**|\n| `externalId`|[RFC-7643](https://datatracker.ietf.org/doc/rfc7643/)#`core:2.0:User`|This is a common attribute of type string.|\n| `active`|[RFC-7643](https://datatracker.ietf.org/doc/rfc7643/)#`core:2.0:User`|Boolean value to enable disable the user.|\n| `name`|[RFC-7643](https://datatracker.ietf.org/doc/rfc7643/)#`core:2.0:User`|Supports only `givenName` and `familyName`|\n-------------------------------\n\n\n**Endpoints** \n  \n* `/Users` : Create or retrive the users in the tenant.\n\n  <b> Supported methods.</b>\n  | Method Type   | CRUD      | Description   |\n  |-              |-          |-              |\n  | `GET`           | Read      | Retrieve user (eg: get all the users of tenant.)   |\n  | `POST`          | Create    | Create a new record (eg: adding new user to the tenant.)   |\n  --------------------------------\n\n\n* `/Users/{id}` : Mofify, delete or retrive a user.\n\n  <b> Supported methods.</b>\n  | Method Type   | CRUD      | Description   |\n  |-              |-          |-              |\n  | `GET`           | Read      | Retrieve user (eg: retrive the users of {id}.)   |\n  | `PUT`           | Replace   | Replacing an existing record (eg: replace the user of {id}) |\n  | `PATCH`         | Update    | Updating an existing record (eg: updating the record of {id})<br>`emails`,`active`, `name`, `userName`, `externalId` attributes can be edited   |\n  | `DELETE`        | Delete    | DELETE requests can be used to delete a record (like deleting a MSP from the Master MSP) |\n  --------------------------------\n  \n\n\n## Group\nSchema is mention in the [RFC-7643](https://datatracker.ietf.org/doc/rfc7643/)\n\nFollowing attrbute is supported.\n| Attribute | Schema | Description |\n|-          |-      |-            |\n|*`displayName`   | [RFC-7643](https://datatracker.ietf.org/doc/rfc7643/)#`core:2.0:Group` | String attribute represent the group.<br>**Request will be rejected if primary email is not specified.**|\n|`members`|[RFC-7643](https://datatracker.ietf.org/doc/rfc7643/)#`core:2.0:Group`|Multivalued attribute, list of members.|\n| `externalId`|[RFC-7643](https://datatracker.ietf.org/doc/rfc7643/)#`core:2.0:Group`|This is a common attribute of type string.|\n\n**Supported Endpoints**\n\n  \n* `/Groups` : Create or retrive the users in the tenant.\n\n  <b> Supported methods.</b>\n  | Method Type   | CRUD      | Description   |\n  |-              |-          |-              |\n  | `GET`           | Read      | Retrieve groups (eg: get all the groups of tenant.)   |\n  | `POST`          | Create    | Create a new record (eg: adding new group to the tenant.)   |\n  --------------------------------\n\n\n* `/Groups/{id}` : Mofify, delete or retrive a user.\n\n  <b> Supported methods.</b>\n  | Method Type   | CRUD      | Description   |\n  |-              |-          |-              |\n  | `GET`           | Read      | Retrieve the group (eg: get the group of {id}.)   |\n  | `PUT`           | Replace   | Replacing an existing record (eg: Replacing the group    |\n  | `PATCH`         | Update    | Updating an existing record (eg: adding a member to the group of {id})<br>`members`,`displayName`, `externalId` attributes can be edited |\n  | `DELETE`        | Delete    | Delete a record (like deleting a group of {id}) |\n  --------------------------------\n# Configuration``WIP``\n\n\n**Supported Endpoints**\n# Authentication``WIP``\n</details>"
    version: 2.0.0
    contact:
        name: Provisioner
        email: eng-provisioner-dev-blr@netskope.com
servers:
    - url: https://{tenant}.goskope.com/api/v2
      description: The production API server
      variables:
        tenant:
            default: demo
            description: this value is assigned by Netskope, in this example `demo.goskope.com`
security:
    - api_key: []
components:
    securitySchemes:
        api_key:
            type: apiKey
            in: header
            name: Netskope-Api-Token
    schemas:
        publisher_post_request:
            type: object
            x-speakeasy-entity: NPAPublishers
            properties:
                name:
                    type: string
                    default: publisher_name
                lbrokerconnect:
                    type: boolean
                    default: false
                tags:
                    type: array
                    items:
                        $ref: "#/components/schemas/tag_item_no_id"
                publisher_upgrade_profiles_id:
                    type: integer
                    format: int32
                    default: 1
            required:
                - name
        tag_item_no_id:
            type: object
            properties:
                tag_name:
                    type: string
        tag_item:
            type: object
            properties:
                tag_name:
                    type: string
                tag_id:
                    type: integer
                    format: int32
        release_item:
            type: object
            properties:
                docker_tag:
                    type: string
                name:
                    type: string
                version:
                    type: string
        publisher_put_request:
            type: object
            x-speakeasy-entity: NPAPublishers
            properties:
                name:
                    type: string
                id:
                    type: integer
                    format: int32
                lbrokerconnect:
                    type: boolean
                tags:
                    type: array
                    items:
                        $ref: "#/components/schemas/tag_item"
        publisher_response:
            type: object
            properties:
                status:
                    x-speakeasy-ignore: true
                    type: string
                    enum:
                        - success
                        - not found
                data:
                    type: object
                    x-speakeasy-entity: NPAPublishers
                    properties:
                        id:
                            type: integer
                            format: int32
                        name:
                            type: string
                        common_name:
                            type: string
                        registered:
                            type: boolean
                        lbrokerconnect:
                            type: boolean
                        assessment:
                            x-speakeasy-type-override: any
                            type: object
                        stitcher_id:
                            type: integer
                            format: int32
                        status:
                            type: string
                            enum:
                                - connected
                                - not registered
                        publisher_upgrade_profile_id:
                            type: integer
                            format: int32
                        tags:
                            type: array
                            items:
                                $ref: "#/components/schemas/tag_item"
        publishers_response_400:
            type: object
            properties:
                status:
                    type: integer
                    example: 400
                result:
                    type: string
        publishers_get_response:
            type: object
            x-speakeasy-entity: NPAPublishersList
            properties:
                data:
                    $ref: "#/components/schemas/Data"
                status:
                    type: string
                total:
                    type: integer
                    format: int32
        Data:
            type: object
            additionalProperties: false
            properties:
                publishers:
                    type: array
                    items:
                        $ref: "#/components/schemas/Publisher"
            required:
                - publishers
            title: Data
        Publisher:
            type: object
            additionalProperties: false
            properties:
                apps_count:
                    type: integer
                assessment:
                    anyOf:
                        - $ref: "#/components/schemas/Assessment"
                        - type: object
                common_name:
                    type: string
                connected_apps:
                    anyOf:
                        - type: array
                          items:
                            type: string
                lbrokerconnect:
                    type: boolean
                publisher_id:
                    type: integer
                publisher_name:
                    type: string
                publisher_upgrade_profiles_external_id:
                    type: integer
                registered:
                    type: boolean
                status:
                    type: string
                stitcher_id:
                    type: integer
                tags:
                    type: array
                    items: {}
                upgrade_failed_reason:
                    anyOf:
                        - $ref: "#/components/schemas/UpgradeFailedReason"
                        - type: object
                upgrade_request:
                    type: boolean
                upgrade_status:
                    $ref: "#/components/schemas/UpgradeStatus"
            required:
                - apps_count
                - assessment
                - common_name
                - connected_apps
                - lbrokerconnect
                - publisher_id
                - publisher_name
                - publisher_upgrade_profiles_external_id
                - registered
                - status
                - stitcher_id
                - tags
                - upgrade_failed_reason
                - upgrade_request
                - upgrade_status
            title: Publisher
        Assessment:
            type: object
            additionalProperties: false
            properties:
                eee_support:
                    type: boolean
                hdd_free:
                    type: string
                hdd_total:
                    type: string
                ip_address:
                    type: string
                latency:
                    type: integer
                version:
                    type: string
            required:
                - eee_support
                - hdd_free
                - hdd_total
                - ip_address
                - latency
                - version
            title: Assessment
        UpgradeFailedReason:
            type: object
            additionalProperties: false
            properties:
                detail:
                    type: string
                error_code:
                    type: integer
                timestamp:
                    type: integer
                version:
                    type: string
                    format: integer
            required:
                - detail
                - error_code
                - timestamp
                - version
            title: UpgradeFailedReason
        UpgradeStatus:
            type: object
            additionalProperties: false
            properties:
                upstat:
                    type: string
            required:
                - upstat
            title: UpgradeStatus
        publisher_bulk_item:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
                name:
                    type: string
                common_name:
                    type: string
                registered:
                    type: boolean
                lbrokerconnect:
                    type: boolean
                assessment:
                    type: object
                upgrade_failed_reason:
                    type: object
                upgrade_request:
                    type: boolean
                upgrade_status:
                    type: object
                stitcher_id:
                    type: integer
                    format: int32
                status:
                    type: string
                    enum:
                        - connected
                        - not registered
                publisher_upgrade_profile_id:
                    type: integer
                    format: int32
                tags:
                    type: array
                    items:
                        $ref: "#/components/schemas/tag_item"
        publisher_bulk_request:
            type: object
            x-speakeasy-entity: NPAPublishersBulkUpgrade
            properties:
                publishers:
                    type: object
                    properties:
                        id:
                            type: array
                            items:
                                type: string
                        apply:
                            type: object
                            properties:
                                upgrade_request:
                                    type: boolean
                                    default: true
        publishers_bulk_response:
            type: object
            x-speakeasy-entity: NPAPublishersBulkUpgrade
            properties:
                status:
                    type: string
                    enum:
                        - success
                        - not found
                data:
                    type: array
                    items:
                        $ref: "#/components/schemas/publisher_bulk_item"
        publishers_alert_get_response:
            type: object
            properties:
                status:
                    x-speakeasy-ignore: true
                    type: string
                    enum:
                        - success
                        - not found
                data:
                    type: object
                    x-speakeasy-entity:
                        - NPAPublishersAlertsConfiguration
                    properties:
                        adminUsers:
                            type: array
                            items:
                                type: string
                                example:
                                    - admin1@abc.com
                                    - admin2@abc.com
                        eventTypes:
                            type: array
                            items:
                                type: string
                                enum:
                                    - UPGRADE_WILL_START
                                    - UPGRADE_STARTED
                                    - UPGRADE_SUCCEEDED
                                    - UPGRADE_FAILED
                                    - CONNECTION_FAILED
                            example:
                                - CONNECTION_FAILED
                                - UPGRADE_STARTED
                        selectedUsers:
                            type: string
                            example: abc@xyz.com,def@xyz.com
        publishers_alert_put_request:
            type: object
            x-speakeasy-entity: NPAPublishersAlertsConfiguration
            properties:
                adminUsers:
                    type: array
                    items:
                        type: string
                        example:
                            - admin1@abc.com
                            - admin2@abc.com
                eventTypes:
                    type: array
                    items:
                        type: string
                        enum:
                            - UPGRADE_WILL_START
                            - UPGRADE_STARTED
                            - UPGRADE_SUCCEEDED
                            - UPGRADE_FAILED
                            - CONNECTION_FAILED
                    minItems: 1
                    maxItems: 5
                    example:
                        - CONNECTION_FAILED
                        - UPGRADE_STARTED
                selectedUsers:
                    type: string
                    example: abc@xyz.com,def@xyz.com
        publishers_alert_put_response:
            type: object
            properties:
                status:
                    type: string
                    enum:
                        - success
                        - not found
                        - failure
        publishers_release_get_response:
            type: object
            x-speakeasy-entity: NPAPublishersReleasesList
            properties:
                status:
                    type: string
                    enum:
                        - success
                        - not found
                data:
                    type: array
                    items:
                        $ref: "#/components/schemas/release_item"
        protocol_response_item:
            type: object
            properties:
                id:
                    x-speakeasy-ignore: true
                    type: integer
                    format: int32
                port:
                    type: string
                transport:
                    type: string
                service_id:
                    x-speakeasy-ignore: true
                    type: integer
                    format: int32
        service_publisher_assignment_item:
            type: object
            properties:
                publisher_id:
                    type: integer
                    format: int32
                service_id:
                    type: integer
                    format: int32
                primary:
                    type: boolean
                reachability:
                    type: object
                    properties:
                        error_code:
                            type: integer
                            format: int32
                        reachable:
                            type: boolean
                        error_string:
                            type: string
        publisher_apps_list_response:
            type: object
            x-speakeasy-entity: NPAPublishersAppsList
            properties:
                status:
                    type: string
                    enum:
                        - success
                        - not found
                data:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: integer
                                format: int32
                            name:
                                type: string
                            use_publisher_dns:
                                type: boolean
                            clientless_access:
                                type: boolean
                            trust_self_signed_certs:
                                type: boolean
                            host:
                                type: string
                            real_host:
                                type: string
                            protocols:
                                type: array
                                items:
                                    $ref: "#/components/schemas/protocol_response_item"
                            tags:
                                type: array
                                items:
                                    $ref: "#/components/schemas/tag_item"
                            service_publisher_assignments:
                                type: array
                                items:
                                    $ref: "#/components/schemas/service_publisher_assignment_item"
        "200":
            type: "object"
            properties:
                status:
                    x-speakeasy-terraform-ignore: true
                    type: "integer"
                    example: 200
                result:
                    type: "array"
                    items:
                        type: "object"
        "400":
            type: "object"
            properties:
                status:
                    type: "integer"
                    example: 400
                message:
                    type: "string"
        publisher_upgrade_profile_post_request:
            type: "object"
            x-speakeasy-entity: NPAPublisherUpgradeProfile
            properties:
                name:
                    type: "string"
                frequency:
                    type: "string"
                timezone:
                    type: "string"
                docker_tag:
                    type: "string"
                release_type:
                    type: "string"
                enabled:
                    type: "boolean"
                required: {}
        publisher_upgrade_profile_put_request:
            type: "object"
            x-speakeasy-entity: NPAPublisherUpgradeProfile
            properties:
                name:
                    type: "string"
                id:
                    type: "integer"
                    format: "int32"
                frequency:
                    type: "string"
                timezone:
                    type: "string"
                docker_tag:
                    type: "string"
                release_type:
                    type: "string"
                enabled:
                    type: "boolean"
        publisher_upgrade_profile_response:
            type: "object"
            properties:
                status:
                    type: "string"
                    x-speakeasy-ignore: true
                    enum:
                        - success
                        - not found
                data:
                    type: "object"
                    x-speakeasy-entity: NPAPublisherUpgradeProfile
                    properties:
                        id:
                            type: "integer"
                            format: "int32"
                        frequency:
                            type: "string"
                        timezone:
                            type: "string"
                        docker_tag:
                            type: "string"
                        release_type:
                            type: "string"
                        name:
                            type: "string"
                        enabled:
                            type: "boolean"
        publisher_upgrade_profile_get_response:
            type: "object"
            x-speakeasy-entity: NPAPublisherUpgradeProfileList
            properties:
                status:
                    type: "string"
                    x-speakeasy-terraform-ignore: true
                    enum:
                        - success
                        - not found
                total:
                    type: "integer"
                    format: "int32"
                data:
                    type: object
                    properties:
                        upgrade_profiles:
                            type: array
                            items:
                                type: object
                                properties:
                                    created_at:
                                        type: string
                                    docker_tag:
                                        type: string
                                    enabled:
                                        type: boolean
                                    external_id:
                                        type: integer
                                        format: int32
                                    frequency:
                                        type: string
                                    id:
                                        type: integer
                                        format: int32
                                    name:
                                        type: string
                                    next_update_time:
                                        type: integer
                                        format: int32
                                    num_associated_publisher:
                                        type: integer
                                    release_type:
                                        type: string
                                    timezone:
                                        type: string
                                    updated_at:
                                        type: string
                                    upgrading_stage:
                                        type: integer
                                        format: int32
                                    will_start:
                                        type: boolean
        publisher_upgrade_profile_bulk_request:
            type: "object"
            properties:
                publishers:
                    type: "object"
                    properties:
                        id:
                            type: "array"
                            items:
                                type: "string"
                        apply:
                            type: "object"
                            properties:
                                publisher_upgrade_profiles_id:
                                    type: "string"
        upgrade_publisher_response:
            type: "object"
            properties:
                publisher_id:
                    type: "integer"
                    format: "int32"
                publisher_name:
                    type: "string"
                common_name:
                    type: "string"
                registered:
                    type: "boolean"
                lbrokerconnect:
                    type: "boolean"
                assessment:
                    type: "object"
                stitcher_id:
                    type: "integer"
                    format: "int32"
                status:
                    type: "string"
                    enum:
                        - connected
                        - not registered
                publisher_upgrade_profile_id:
                    type: "integer"
                    format: "int32"
                tags:
                    type: "array"
                    items:
                        $ref: "#/components/schemas/tag_item"
        publisher_upgrade_profile_bulk_response:
            type: "object"
            properties:
                status:
                    type: "string"
                    enum:
                        - success
                        - not found
                data:
                    type: "array"
                    items:
                        $ref: "#/components/schemas/upgrade_publisher_response"
                total:
                    type: "integer"
                    format: "int32"
        npa_policy_request:
            type: object
            x-speakeasy-entity: NPAPolicy
            properties:
                rule_name:
                    type: string
                    example: vantest
                description:
                    type: string
                    example: any
                rule_data:
                    "$ref": "#/components/schemas/npa_policy_rule_data"
                rule_order:
                    type: object
                    properties:
                        order:
                            type: string
                            enum:
                                - top
                                - bottom
                                - before
                                - after
                        rule_name:
                            type: string
                            example: api-policy-managed
                        rule_id:
                            type: string
                            example: "1"
                        position:
                            type: integer
                            example: 5
                group_id:
                    x-speakeasy-ignore: true
                    type: string
                    example: '1'
                group_name:
                    type: string
                    example: My policy group
                enabled:
                    type: string
                    example: '1'
        npa_policy_response_item:
            type: object
            x-speakeasy-entity: NPAPolicy
            properties:
                rule_id:
                    type: string
                    example: "1"
                rule_name:
                    type: string
                    example: van-test
                rule_data:
                    "$ref": "#/components/schemas/npa_policy_rule_data"
                group_id:
                    x-speakeasy-ignore: true
                    type: integer
                    example: 1
        npa_policy_list_response:
            x-speakeasy-entity: NPAPolicyList
            type: object
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/npa_policy_response_item"
        npa_policy_response_400:
            type: object
            properties:
                status:
                    type: integer
                    example: 400
                result:
                    type: string
        npa_policy_rule_dlp:
            type: array
            items:
                type: object
                properties:
                    dlp_profile:
                        type: string
                        example: Payment Card
                    actions:
                        type: array
                        items:
                            type: string
                            enum:
                                - allow
                                - block
                                - alert
                                - quanrantine
                                - bypass
                        example:
                            - allow
        npa_policy_rule_data:
            type: object
            properties:
                users:
                    type: array
                    items:
                        type: string
                    example:
                        - vphan@netskope.com
                userGroups:
                    type: array
                    items:
                        type: string
                    example:
                        - usergroup/group1
                organization_units:
                    type: array
                    items:
                        type: string
                    example:
                        - engineering/qa
                userType:
                    type: string
                    enum:
                        - user
                access_method:
                    type: array
                    items:
                        type: string
                        example:
                            - Client
                            - Clientless
                policy_type:
                    type: string
                    enum:
                        - private-app
                privateApps:
                    type: array
                    items:
                        type: string
                    example:
                        - app1
                        - app2
                privateAppIds:
                    type: array
                    items:
                        type: string
                    example:
                        - '100'
                        - '201'
                privateAppTags:
                    type: array
                    items:
                        type: string
                    example:
                        - tag1
                        - tag2
                privateAppTagIds:
                    type: array
                    items:
                        type: string
                    example:
                        - '1'
                        - '2'
                privateAppsWithActivities:
                    type: array
                    items:
                        type: object
                        properties:
                            appName:
                                type: string
                                example: "[172.31.12.135]"
                            activities:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        activity:
                                            type: string
                                            enum:
                                                - any
                                        list_of_constraints:
                                            type: array
                                            items:
                                                type: string
                                            example: []
                match_criteria_action:
                    type: object
                    properties:
                        action_name:
                            type: string
                            enum:
                                - allow
                                - block
                classification:
                    type: string
                show_dlp_profile_action_table:
                    type: boolean
                external_dlp:
                    type: boolean
                net_location_obj:
                    type: array
                    items:
                        type: string
                    example:
                        - 190.123.150.10
                        - 190.218.0.0/16
                b_negateNetLocation:
                    type: boolean
                srcCountries:
                    type: array
                    items:
                        type: string
                    example:
                        - US
                        - AF
                        - CN
                b_negateSrcCountries:
                    type: boolean
                json_version:
                    type: integer
                    example: 3
                version:
                    type: integer
                    example: 1
                dlp_actions:
                    "$ref": "#/components/schemas/npa_policy_rule_dlp"
        npa_policygroup_request:
            type: object
            x-speakeasy-entity: NPAPolicyGroup
            required:
                - group_name
                - group_order
            properties:
                group_name:
                    type: string
                group_order:
                    type: object
                    required:
                        - order
                        - group_id
                    properties:
                        order:
                            type: string
                            enum:
                                - before
                                - after
                        group_id:
                            type: string
                            example: '1'
        npa_policygroup_response_item:
            type: object
            x-speakeasy-entity: NPAPolicyGroup
            properties:
                group_id:
                    type: string
                group_name:
                    type: string
                modify_type:
                    type: string
                modify_time:
                    type: string
                can_be_edited_deleted:
                    type: string
                group_type:
                    type: string
                group_prod_id:
                    type: integer
                group_pinned_id:
                    type: integer
        npa_policygroup_response:
            type: object
            x-speakeasy-entity: PolicyGroupList
            properties:
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/npa_policygroup_response_item"
        npa_policygroup_response_400:
            type: object
            properties:
                status:
                    type: integer
                    example: 400
                result:
                    type: string
        private_apps_request:
            type: object
            x-speakeasy-entity: PrivateApp
            properties:
                app_name:
                    type: string
                host:
                    type: string
                real_host:
                    type: string
                protocols:
                    type: array
                    items:
                        "$ref": "#/components/schemas/protocol_item"
                publishers:
                    type: array
                    items:
                        "$ref": "#/components/schemas/publisher_item"
                publisher_tags:
                    type: array
                    items:
                        "$ref": "#/components/schemas/tag_item_no_id"
                tags:
                    type: array
                    items:
                        "$ref": "#/components/schemas/tag_item_no_id"
                use_publisher_dns:
                    type: boolean
                clientless_access:
                    type: boolean
                trust_self_signed_certs:
                    type: boolean
        private_apps_put_request:
            type: object
            x-speakeasy-entity: PrivateApp
            properties:
                id:
                    type: integer
                    format: int32
                app_name:
                    type: string
                host:
                    type: string
                real_host:
                    type: string
                protocols:
                    type: array
                    items:
                        "$ref": "#/components/schemas/protocol_item"
                publishers:
                    type: array
                    items:
                        "$ref": "#/components/schemas/publisher_item"
                publisher_tags:
                    type: array
                    items:
                        "$ref": "#/components/schemas/tag_item_no_id"
                tags:
                    type: array
                    items:
                        "$ref": "#/components/schemas/tag_item_no_id"
                use_publisher_dns:
                    type: boolean
                clientless_access:
                    type: boolean
                trust_self_signed_certs:
                    type: boolean
        private_apps_response:
            type: object
            properties:
                status:
                    x-speakeasy-ignore: true
                    type: string
                    enum:
                        - success
                        - not found
                data:
                    type: object
                    x-speakeasy-entity: PrivateApp
                    properties:
                        id:
                            type: integer
                            format: int32
                        name:
                            type: string
                        use_publisher_dns:
                            type: boolean
                        clientless_access:
                            type: boolean
                        trust_self_signed_certs:
                            type: boolean
                        host:
                            type: string
                        real_host:
                            type: string
                        protocols:
                            type: array
                            x-speakeasy-name-override: "resolved_protocols"
                            items:
                                "$ref": "#/components/schemas/protocol_response_item"
                        tags:
                            type: array
                            items:
                                "$ref": "#/components/schemas/tag_item"
                        service_publisher_assignments:
                            type: array
                            items:
                                "$ref": "#/components/schemas/service_publisher_assignment_item"
        private_apps_response_400:
            type: object
            properties:
                status:
                    type: integer
                    example: 400
                result:
                    type: string
        private_apps_get_response:
            type: object
            x-speakeasy-entity: PrivateAppList
            properties:
                status:
                    type: string
                    x-speakeasy-terraform-ignore: true
                    enum:
                        - success
                        - not found
                data:
                    type: object
                    properties:
                        private_apps:
                            type: array
                            items: {}
                total:
                    type: integer
                    format: int32
        protocol_item:
            type: object
            properties:
                type:
                    type: string
                port:
                    type: string
        publisher_item:
            type: object
            properties:
                publisher_id:
                    type: string
                publisher_name:
                    type: string
        tag_request:
            x-speakeasy-entity:
                - PrivateAppTagList
                - PrivateAppTag
            type: object
            properties:
                id:
                    type: string
                ids:
                    type: array
                    items:
                        type: string
                tags:
                    type: array
                    items:
                        "$ref": "#/components/schemas/tag_item"
                publisher_tags:
                    type: array
                    items:
                        "$ref": "#/components/schemas/tag_item"
        tag_response:
            type: object
            x-speakeasy-entity: PrivateAppTagList
            properties:
                status:
                    x-speakeasy-ignore: true
                    type: string
                    enum:
                        - success
                        - not found
                data:
                    type: array
                    items:
                        x-speakeasy-entity: PrivateAppTag
                        type: object
                        properties:
                            tag_id:
                                type: integer
                                format: int32
                            tag_name:
                                type: string
        tag_response_400:
            type: object
            properties:
                status:
                    type: integer
                    example: 400
                result:
                    type: string
        gre_pop_response_200:
            type: object
            properties:
                status:
                    type: integer
                    example: 200
                total:
                    type: integer
                    example: 1
                result:
                    type: array
                    items:
                        "$ref": "#/components/schemas/gre_pop_result_item"
        gre_tunnel_request_post:
            type: object
            properties:
                site:
                    type: string
                srcipidentity:
                    type: string
                pops:
                    type: array
                    items:
                        type: string
                        example: string
                vendor:
                    type: string
                template:
                    type: string
                sourcetype:
                    type: string
                notes:
                    type: string
                enable:
                    type: boolean
                options:
                    type: object
                    properties:
                        xff:
                            type: object
                            properties:
                                enable:
                                    type: boolean
                                    example: false
                                iplist:
                                    type: array
                                    items:
                                        type: string
                                        example: string
        gre_tunnel_request_patch:
            type: object
            properties:
                site:
                    type: string
                srcipidentity:
                    type: string
                pops:
                    type: array
                    items:
                        type: string
                        example: string
                vendor:
                    type: string
                template:
                    type: string
                sourcetype:
                    type: string
                notes:
                    type: string
                enable:
                    type: boolean
                options:
                    type: object
                    properties:
                        xff:
                            type: object
                            properties:
                                enable:
                                    type: boolean
                                    example: false
                                iplist:
                                    type: array
                                    items:
                                        type: string
                                        example: string
        gre_tunnel_response_200:
            type: object
            properties:
                status:
                    type: integer
                    example: 200
                total:
                    type: integer
                    example: 1
                result:
                    type: array
                    items:
                        "$ref": "#/components/schemas/gre_tunnel_result_item"
        gre_patch_response_200:
            type: object
            properties:
                status:
                    type: integer
                    example: 200
                result:
                    type: string
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/gre_tunnel_result_item"
        gre_response_200:
            type: object
            properties:
                status:
                    type: integer
                    example: 200
                result:
                    type: string
        gre_response_201:
            type: object
            properties:
                status:
                    type: integer
                    example: 201
                result:
                    type: string
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/gre_tunnel_result_item"
        gre_response_400:
            type: object
            properties:
                status:
                    type: integer
                    example: 400
                result:
                    type: string
        gre_response_403:
            type: object
            properties:
                status:
                    type: integer
                    example: 403
                result:
                    type: string
        gre_response_404:
            type: object
            properties:
                status:
                    type: integer
                    example: 404
                result:
                    type: string
        gre_response_405:
            type: object
            properties:
                status:
                    type: integer
                    example: 405
                result:
                    type: string
        gre_response_409:
            type: object
            properties:
                status:
                    type: integer
                    example: 409
                result:
                    type: string
        gre_response_429:
            type: object
            properties:
                status:
                    type: integer
                    example: 429
                result:
                    type: string
        gre_response_500:
            type: object
            properties:
                status:
                    type: integer
                    example: 500
                result:
                    type: string
        gre_pop_result_item:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                region:
                    type: string
                location:
                    type: string
                gateway:
                    type: string
                probeip:
                    type: string
                distance:
                    type: string
                acceptingtunnels:
                    type: boolean
        gre_tunnel_result_item:
            type: object
            properties:
                id:
                    type: integer
                    example: 1
                site:
                    type: string
                vendor:
                    type: string
                template:
                    type: string
                sourcetype:
                    type: string
                notes:
                    type: string
                srcipidentity:
                    type: string
                pops:
                    type: array
                    items:
                        "$ref": "#/components/schemas/gre_tunnel_pop_result_item"
                enabled:
                    type: boolean
                options:
                    type: object
                    properties:
                        xff:
                            type: object
                            properties:
                                enabled:
                                    type: boolean
                                    example: false
                                iplist:
                                    type: array
                                    items:
                                        type: string
                                        example: string
                version:
                    type: integer
                    example: 2
        gre_tunnel_pop_result_item:
            type: object
            properties:
                name:
                    type: string
                gateway:
                    type: string
                probeip:
                    type: string
                primary:
                    type: boolean
                usertrafficStatus:
                    type: string
                usertrafficLast:
                    type: string
                keepaliveStatus:
                    type: string
                keepaliveLast:
                    type: string
                throughput:
                    type: string
        ipsec_pop_response_200:
            type: object
            properties:
                status:
                    type: integer
                    example: 200
                total:
                    type: integer
                    example: 1
                result:
                    type: array
                    items:
                        "$ref": "#/components/schemas/ipsec_pop_result_item"
        ipsec_tunnel_request_post:
            type: object
            properties:
                encryption:
                    type: string
                site:
                    type: string
                srcidentity:
                    type: string
                psk:
                    type: string
                srcipidentity:
                    type: string
                pops:
                    type: array
                    items:
                        type: string
                        example: string
                bandwidth:
                    type: integer
                notes:
                    type: string
                vendor:
                    type: string
                sourcetype:
                    type: string
                template:
                    type: string
                enable:
                    type: boolean
                options:
                    type: object
                    properties:
                        rekey:
                            type: boolean
                            example: false
                        reauth:
                            type: boolean
                            example: false
                        xff:
                            type: object
                            properties:
                                enable:
                                    type: boolean
                                    example: false
                                iplist:
                                    type: array
                                    items:
                                        type: string
                                        example: string
        ipsec_tunnel_request_patch:
            type: object
            properties:
                encryption:
                    type: string
                site:
                    type: string
                srcidentity:
                    type: string
                psk:
                    type: string
                srcipidentity:
                    type: string
                pops:
                    type: array
                    items:
                        type: string
                        example: string
                bandwidth:
                    type: integer
                notes:
                    type: string
                vendor:
                    type: string
                sourcetype:
                    type: string
                template:
                    type: string
                enable:
                    type: boolean
                options:
                    type: object
                    properties:
                        rekey:
                            type: boolean
                            example: false
                        reauth:
                            type: boolean
                            example: false
                        xff:
                            type: object
                            properties:
                                enable:
                                    type: boolean
                                    example: false
                                iplist:
                                    type: array
                                    items:
                                        type: string
                                        example: string
        ipsec_tunnel_response_200:
            type: object
            properties:
                status:
                    type: integer
                    example: 200
                total:
                    type: integer
                    example: 1
                result:
                    type: array
                    items:
                        "$ref": "#/components/schemas/ipsec_tunnel_result_item"
        ipsec_patch_response_200:
            type: object
            properties:
                status:
                    type: integer
                    example: 200
                result:
                    type: string
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/ipsec_tunnel_result_item"
        ipsec_response_200:
            type: object
            properties:
                status:
                    type: integer
                    example: 200
                result:
                    type: string
        ipsec_response_201:
            type: object
            properties:
                status:
                    type: integer
                    example: 201
                result:
                    type: string
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/ipsec_tunnel_result_item"
        ipsec_response_400:
            type: object
            properties:
                status:
                    type: integer
                    example: 400
                result:
                    type: string
        ipsec_response_403:
            type: object
            properties:
                status:
                    type: integer
                    example: 403
                result:
                    type: string
        ipsec_response_404:
            type: object
            properties:
                status:
                    type: integer
                    example: 404
                result:
                    type: string
        ipsec_response_405:
            type: object
            properties:
                status:
                    type: integer
                    example: 405
                result:
                    type: string
        ipsec_response_409:
            type: object
            properties:
                status:
                    type: integer
                    example: 409
                result:
                    type: string
        ipsec_response_429:
            type: object
            properties:
                status:
                    type: integer
                    example: 429
                result:
                    type: string
        ipsec_response_500:
            type: object
            properties:
                status:
                    type: integer
                    example: 500
                result:
                    type: string
        ipsec_pop_result_item:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                region:
                    type: string
                location:
                    type: string
                gateway:
                    type: string
                probeip:
                    type: string
                options:
                    type: object
                    properties:
                        phase1:
                            type: object
                            properties:
                                ikeversion:
                                    type: string
                                encryptionalgo:
                                    type: string
                                integrityalgo:
                                    type: string
                                dhgroup:
                                    type: string
                                salifetime:
                                    type: string
                                dpd:
                                    type: boolean
                        phase2:
                            type: object
                            properties:
                                encryptionalgo:
                                    type: string
                                integrityalgo:
                                    type: string
                                dhgroup:
                                    type: string
                                salifetime:
                                    type: string
                                pfs:
                                    type: boolean
                distance:
                    type: string
                acceptingtunnels:
                    type: boolean
                bandwidth:
                    type: string
        ipsec_tunnel_result_item:
            type: object
            properties:
                id:
                    type: integer
                    example: 1
                site:
                    type: string
                template:
                    type: string
                sourcetype:
                    type: string
                notes:
                    type: string
                vendor:
                    type: string
                encryption:
                    type: string
                srcidentity:
                    type: string
                srcipidentity:
                    type: string
                pops:
                    type: array
                    items:
                        "$ref": "#/components/schemas/ipsec_tunnel_pop_result_item"
                enabled:
                    type: boolean
                bandwidth:
                    type: integer
                    example: 50
                options:
                    type: object
                    properties:
                        rekey:
                            type: boolean
                            example: false
                        reauth:
                            type: boolean
                            example: false
                        xff:
                            type: object
                            properties:
                                enabled:
                                    type: boolean
                                    example: false
                                iplist:
                                    type: array
                                    items:
                                        type: string
                                        example: string
                version:
                    type: integer
                    example: 2
        ipsec_tunnel_pop_result_item:
            type: object
            properties:
                name:
                    type: string
                gateway:
                    type: string
                probeip:
                    type: string
                primary:
                    type: boolean
                status:
                    type: string
                since:
                    type: string
                throughput:
                    type: string
paths:
    /infrastructure/publishers:
        x-netskope-params:
            serviceConfig: provisioner-pycore-ws
            version: 2
            customerFacing: true
            apiGroup: npa_publishers
        get:
            summary: Get list of publisher objects
            description: Get list of publisher objects
            operationId: getNPAPublishers
            x-speakeasy-name-override: list_objects
            x-speakeasy-entity-operation: NPAPublishersList#read
            x-speakeasy-group: NPAPublishers
            parameters:
                - name: fields
                  in: query
                  required: false
                  description: Return values only from specified fields
                  schema:
                    type: string
            responses:
                "200":
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publishers_get_response"
                "400":
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publishers_response_400"
        post:
            summary: Create a publisher
            description: Create a publisher
            operationId: createNPApublishers
            x-speakeasy-name-override: create
            x-speakeasy-entity-operation: NPAPublishers#create
            x-speakeasy-group: NPAPublishers
            parameters:
                - name: silent
                  x-speakeasy-terraform-ignore: true
                  in: query
                  required: false
                  description: flag to skip output except status code
                  schema:
                    type: string
                    enum:
                        - "1"
                        - "0"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/publisher_post_request"
                required: true
            responses:
                "200":
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publisher_response"
                "400":
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publishers_response_400"
    /infrastructure/publishers/{publisher_id}:
        x-netskope-params:
            serviceConfig: provisioner-pycore-ws
            version: 2
            customerFacing: true
            apiGroup: npa_publishers
        delete:
            summary: Delete a publisher
            description: Delete a publisher based on publisher id
            operationId: deleteNPAPublishers
            x-speakeasy-name-override: delete
            x-speakeasy-entity-operation: NPAPublishers#delete
            x-speakeasy-group: NPAPublishers
            parameters:
                - name: publisher_id
                  in: path
                  x-speakeasy-match: id
                  required: true
                  description: publisher id
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum:
                                            - success
                                            - error
                "400":
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publishers_response_400"
        put:
            summary: Update a publisher
            description: update a publisher based on publisher id
            operationId: replaceNPAPublisherById
            x-speakeasy-name-override: update
            x-speakeasy-entity-operation: NPAPublishers#update
            x-speakeasy-group: NPAPublishers
            parameters:
                - name: publisher_id
                  in: path
                  x-speakeasy-match: id
                  required: true
                  description: publisher id
                  schema:
                    type: integer
                    format: int32
                - name: silent
                  x-speakeasy-terraform-ignore: true
                  in: query
                  required: false
                  description: flag to skip output except status code
                  schema:
                    type: string
                    enum:
                        - "1"
                        - "0"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/publisher_put_request"
                required: true
            responses:
                "200":
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publisher_response"
                "400":
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publishers_response_400"
        patch:
            summary: Patch a publisher
            description: patch a publisher based on publisher id
            operationId: updateNPAPublisherById
            parameters:
                - name: publisher_id
                  in: path
                  required: true
                  description: publisher id
                  schema:
                    type: integer
                    format: int32
                - name: silent
                  in: query
                  required: false
                  description: flag to skip output except status code
                  schema:
                    type: string
                    enum:
                        - "1"
                        - "0"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/publisher_put_request"
                required: true
            responses:
                "200":
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publisher_response"
                "400":
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publishers_response_400"
        get:
            summary: Get a publisher
            description: get a publisher based on publisher id
            operationId: getNPAPublisherById
            x-speakeasy-name-override: read
            x-speakeasy-entity-operation: NPAPublishers#read
            x-speakeasy-group: NPAPublishers
            parameters:
                - name: publisher_id
                  in: path
                  x-speakeasy-match: id
                  required: true
                  description: publisher id
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publisher_response"
                "400":
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publishers_response_400"
    /infrastructure/publishers/{publisher_id}/registration_token:
        x-netskope-params:
            serviceConfig: provisioner-pycore-ws
            version: 2
            customerFacing: true
            apiGroup: npa_publishers
        post:
            summary: Generate and retrieve a token for publisher registration
            description: Generate and retrieve a token for publisher registration
            operationId: generateNPAPublisherToken
            x-speakeasy-name-override: create
            x-speakeasy-entity-operation: PublisherToken#create
            x-speakeasy-group: PublisherToken
            parameters:
                - name: publisher_id
                  in: path
                  required: true
                  description: publisher id
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        x-speakeasy-entity: PublisherToken
                                        type: object
                                        properties:
                                            token:
                                                type: string
                                        required:
                                            - token
                                    status:
                                        type: string
                                        x-speakeasy-terraform-ignore: true
                                        enum:
                                            - success
                                            - not found
                                required:
                                    - data
                                    - status
                "400":
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publishers_response_400"
    /infrastructure/publishers/{publisher_id}/apps:
        x-netskope-params:
            serviceConfig: provisioner-pycore-ws
            version: 2
            customerFacing: true
            apiGroup: npa_publishers
        get:
            summary: Get all private apps associated to a publisher
            description: Get all private apps associated to a publisher
            operationId: getNPAPublisherApps
            x-speakeasy-name-override: list_objects
            x-speakeasy-entity-operation: NPAPublishersAppsList#read
            x-speakeasy-group: NPAPublishersApps
            parameters:
                - name: publisher_id
                  in: path
                  required: true
                  description: publisher id
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publisher_apps_list_response"
                "400":
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publishers_response_400"
    /infrastructure/publishers/bulk:
        x-netskope-params:
            serviceConfig: provisioner-pycore-ws
            version: 2
            customerFacing: true
            apiGroup: npa_publishers
        put:
            summary: Trigger bulk publisher update action
            description: Trigger bulk publisher update action
            operationId: triggerNPAPublisherUpdate
            x-speakeasy-entity-operation: NPAPublishersBulkUpgrade#create
            parameters:
                - name: silent
                  in: query
                  required: false
                  x-speakeasy-ignore: true
                  description: flag to skip output except status code
                  schema:
                    type: string
                    enum:
                        - "1"
                        - "0"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/publisher_bulk_request"
                required: true
            responses:
                "200":
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publishers_bulk_response"
                "400":
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publishers_response_400"
    /infrastructure/publishers/releases:
        x-netskope-params:
            serviceConfig: provisioner-pycore-ws
            version: 2
            customerFacing: true
            apiGroup: npa_publishers
        get:
            summary: Get list of publisher release objects
            description: Get list of publisher release objects
            operationId: getNPAPublisherObjects
            x-speakeasy-name-override: list_objects
            x-speakeasy-entity-operation: NPAPublishersReleasesList#read
            x-speakeasy-group: NPAPublishersReleases
            parameters:
                - name: fields
                  in: query
                  required: false
                  description: Return values only from specified fields
                  schema:
                    type: string
            responses:
                "200":
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publishers_release_get_response"
                "400":
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publishers_response_400"
    /infrastructure/publishers/alertsconfiguration:
        x-netskope-params:
            serviceConfig: provisioner-pycore-ws
            version: 2
            customerFacing: true
            apiGroup: npa_publishers
        get:
            summary: Get list of publisher alerts
            description: Get list of publisher alerts
            operationId: getNPAPublisherAlerts
            x-speakeasy-entity-operation: NPAPublishersAlertsConfiguration#get
            responses:
                "200":
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publishers_alert_get_response"
                "400":
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publishers_response_400"
        put:
            summary: Configure publisher alerts
            description: Configure publisher alerts
            operationId: configureNPAPublisherAlerts
            x-speakeasy-entity-operation: NPAPublishersAlertsConfiguration#create,update
            parameters:
                - name: silent
                  in: query
                  x-speakeasy-ignore: true
                  required: false
                  description: "flag to skip output except status code: \n * `1` - Skip response data \n * `0` - Do not skip response data"
                  schema:
                    type: string
                    enum:
                        - "1"
                        - "0"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/publishers_alert_put_request"
                required: true
            responses:
                "200":
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publishers_alert_get_response"
                "400":
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publishers_response_400"
    /infrastructure/publisherupgradeprofiles:
        x-netskope-params:
            serviceConfig: provisioner-pycore-ws
            version: 2
            customerFacing: true
            apiGroup: npa_upgrade_profiles
        get:
            summary: "Get list of publisher upgrade profile objects"
            description: "Get list of publisher upgrade profile objects"
            operationId: getPublisherUpgradeProfiles
            x-speakeasy-name-override: list_objects
            x-speakeasy-entity-operation: NPAPublisherUpgradeProfileList#read
            x-speakeasy-group: NPAPublisherUpgradeProfiles
            parameters:
                - name: "fields"
                  in: "query"
                  x-speakeasy-terraform-ignore: true
                  description: "Return values only from specified fields"
                  schema:
                    type: "string"
            responses:
                "200":
                    description: "successful operation"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publisher_upgrade_profile_get_response"
                "400":
                    description: "Invalid request"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/400"
        post:
            summary: "Create a publisher upgrade profile"
            description: "Create a publisher upgrade profile"
            operationId: createNPAPublisherUpradeProfiles
            x-speakeasy-name-override: create
            x-speakeasy-entity-operation: NPAPublisherUpgradeProfile#create
            x-speakeasy-group: NPAPublisherUpgradeProfiles
            parameters:
                - name: "silent"
                  in: "query"
                  x-speakeasy-terraform-ignore: true
                  description: "flag to skip output except status code"
                  schema:
                    type: "string"
                    enum:
                        - "1"
                        - "0"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/publisher_upgrade_profile_post_request"
            responses:
                "200":
                    description: "successful operation"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publisher_upgrade_profile_response"
                "400":
                    description: "Invalid request"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/400"
    /infrastructure/publisherupgradeprofiles/{upgrade_profile_id}:
        x-netskope-params:
            serviceConfig: provisioner-pycore-ws
            version: 2
            customerFacing: true
            apiGroup: npa_upgrade_profiles
        delete:
            summary: "Delete a publisher"
            description: "Delete a publisher upgrade profile based on profile id"
            operationId: deleteNPAPubliserUpgradeProfiles
            x-speakeasy-name-override: delete
            x-speakeasy-entity-operation: NPAPublisherUpgradeProfile#delete
            x-speakeasy-group: NPAPublisherUpgradeProfiles
            parameters:
                - name: "upgrade_profile_id"
                  in: "path"
                  x-speakeasy-match: id
                  required: true
                  description: "publisher upgrade profile id"
                  schema:
                    type: "integer"
                    format: "int32"
            responses:
                "200":
                    description: "successful operation"
                    content:
                        application/json:
                            schema:
                                type: "object"
                                properties:
                                    status:
                                        type: "string"
                                        enum:
                                            - success
                                            - error
                "400":
                    description: "Invalid request"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/400"
        put:
            summary: "Update a publisher upgrade profile"
            description: "update a publisher upgrade profile based on publisher upgrade profile id"
            operationId: replaceNPAPublisherUpgradeProfiles
            x-speakeasy-name-override: update
            x-speakeasy-entity-operation: NPAPublisherUpgradeProfile#update
            x-speakeasy-group: NPAPublisherUpgradeProfiles
            parameters:
                - name: "upgrade_profile_id"
                  in: "path"
                  x-speakeasy-match: id
                  required: true
                  description: "publisher upgrade profile id"
                  schema:
                    type: "integer"
                    format: "int32"
                - name: "silent"
                  in: "query"
                  description: "flag to skip output except status code"
                  x-speakeasy-terraform-ignore: true
                  schema:
                    type: "string"
                    enum:
                        - "1"
                        - "0"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/publisher_upgrade_profile_put_request"
                required: true
            responses:
                "200":
                    description: "successful operation"
                    content:
                        application/json:
                            schema:
                                #$ref: "#/components/schemas/200" # This should be the same as the post response
                                $ref: "#/components/schemas/publisher_upgrade_profile_response"
                "400":
                    description: "Invalid request"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/400"
        get:
            summary: "Get a publisher upgrade profile "
            description: "get a publisher upgrade profile based on publisher upgrade profile id"
            operationId: getNPAPublisherUpgradeProfiles
            x-speakeasy-name-override: read
            x-speakeasy-entity-operation: NPAPublisherUpgradeProfile#read
            x-speakeasy-group: NPAPublisherUpgradeProfiles
            parameters:
                - name: "upgrade_profile_id"
                  in: "path"
                  x-speakeasy-match: id
                  required: true
                  description: "publisher upgrade profile id"
                  schema:
                    type: "integer"
                    format: "int32"
            responses:
                "200":
                    description: "successful operation"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publisher_upgrade_profile_response"
                "400":
                    description: "Invalid request"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/400"
    /infrastructure/publisherupgradeprofiles/bulk:
        x-netskope-params:
            customerFacing: true
            apiGroup: npa_upgrade_profiles
            serviceConfig: provisioner-pycore-ws
            version: 2
        description: "Update the profile of multiple publishers"
        put:
            summary: "Update the profile of multiple publishers "
            operationId: updateNPAPublisherProfilesBulk
            parameters:
                - name: "silent"
                  in: "query"
                  description: "flag to skip output except status code: \n * `1` - Skip response data \n * `0` - Do not skip response data"
                  schema:
                    type: "string"
                    enum:
                        - "1"
                        - "0"
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/publisher_upgrade_profile_bulk_request"
                required: true
            responses:
                "200":
                    description: "successful operation"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/publisher_upgrade_profile_bulk_response"
                "400":
                    description: "Invalid request"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/400"
    /policy/npa/rules:
        x-netskope-params:
            serviceConfig: provisioner-pycore-ws
            version: 2
            customerFacing: true
            apiGroup: npa_policy
        get:
            summary: Get list of npa policies
            x-speakeasy-entity-operation: NPAPolicyList#get
            operationId: getNPAPolicyRules
            description: Get list of npa policies
            parameters:
                - name: fields
                  in: query
                  x-speakeasy-terraform-ignore: true
                  required: false
                  description: Return values only from specified fields
                  schema:
                    type: string
                - name: filter
                  in: query
                  required: false
                  description: Query string based on query operaters
                  schema:
                    type: string
                - name: limit
                  in: query
                  required: false
                  description: Max number of policies to retrieve. Default will be all policies.
                  schema:
                    type: integer
                - name: offset
                  in: query
                  required: false
                  description: The offset of the first policy in the list to retrieve.
                  schema:
                    type: integer
                - name: sortby
                  in: query
                  required: false
                  description: Sort retrieved policies by specified field. Default is policy id
                  schema:
                    type: string
                - name: sortorder
                  in: query
                  required: false
                  description: Sort in either asc or desc order. The default is asc order
                  schema:
                    type: string
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/npa_policy_list_response"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/npa_policy_response_400"
        post:
            summary: Create a npa policy
            description: Create a policy
            x-speakeasy-entity-operation: NPAPolicy#create
            operationId: createNPAPolicyRules
            parameters:
                - name: silent
                  in: query
                  required: false
                  x-speakeasy-ignore: true
                  description: flag to skip output except status code
                  schema:
                    type: string
                    enum:
                        - '1'
                        - '0'
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/npa_policy_request"
                required: true
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        x-speakeasy-ignore: true
                                        type: string
                                        enum:
                                            - success
                                            - error
                                    data:
                                        #"$ref": "#/components/schemas/npa_policy_response" #referenced the response item again which is incorrect
                                        "$ref": "#/components/schemas/npa_policy_response_item"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/npa_policy_response_400"
    /policy/npa/rules/{id}:
        x-netskope-params:
            serviceConfig: provisioner-pycore-ws
            version: 2
            customerFacing: true
            apiGroup: npa_policy
        delete:
            summary: Delete a npa policy
            x-speakeasy-entity-operation: NPAPolicy#delete
            operationId: deleteNPAPolicyRules
            description: Delete a npa policy with rule id
            parameters:
                - name: id
                  in: path
                  required: true
                  description: npa policy id
                  x-speakeasy-match: rule_id
                  schema:
                    type: string
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        x-speakeasy-ignore: true
                                        type: string
                                        enum:
                                            - success
                                            - error
                                    data:
                                        "$ref": "#/components/schemas/npa_policy_response_item"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/npa_policy_response_400"
        patch:
            summary: Patch a npa policy
            description: Patch a npa policy based on rule id
            x-speakeasy-entity-operation: NPAPolicy#update
            operationId: patchNPAPolicyRulesById
            parameters:
                - name: id
                  in: path
                  required: true
                  description: policy rule id
                  x-speakeasy-match: rule_id
                  schema:
                    type: string
                - name: silent
                  in: query
                  required: false
                  x-speakeasy-terraform-ignore: true
                  description: flag to skip output except status code
                  schema:
                    type: string
                    enum:
                        - '1'
                        - '0'
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/npa_policy_request"
                required: true
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        x-speakeasy-ignore: true
                                        type: string
                                        enum:
                                            - success
                                            - error
                                    data:
                                        "$ref": "#/components/schemas/npa_policy_response_item"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/npa_policy_response_400"
        get:
            summary: Get a npa policy
            description: Get a npa policy based on policy rule id
            x-speakeasy-entity-operation: NPAPolicy#get
            operationId: getNPAPolicyRulesById
            parameters:
                - name: id
                  in: path
                  required: true
                  description: npa policy id
                  x-speakeasy-match: rule_id
                  schema:
                    type: string
                - name: fields
                  in: query
                  x-speakeasy-terraform-ignore: true
                  required: false
                  description: Return values only from specified fields
                  schema:
                    type: string
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        x-speakeasy-ignore: true
                                        type: string
                                        enum:
                                            - success
                                            - error
                                    data:
                                        #"$ref": "#/components/schemas/npa_policy_response" #referenced the response item again which is incorrect
                                        "$ref": "#/components/schemas/npa_policy_response_item"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/npa_policy_response_400"
    /policy/npa/policygroups:
        x-netskope-params:
            serviceConfig: provisioner-pycore-ws
            version: 2
            customerFacing: true
            apiGroup: npa_policygroup
        get:
            summary: Get list of npa policy groups
            description: Get list of npa policy groups
            x-speakeasy-entity-operation: PolicyGroupList#read
            operationId: getNPAPolicyGroups
            parameters:
                - name: fields
                  in: query
                  required: false
                  x-speakeasy-terraform-ignore: true
                  description: Return values only from specified fields
                  schema:
                    type: string
                - name: filter
                  in: query
                  required: false
                  description: Query string based on query operaters
                  schema:
                    type: string
                - name: limit
                  in: query
                  required: false
                  description: Max number of policy groups to retrieve. Default will be all policy groups.
                  schema:
                    type: integer
                - name: offset
                  in: query
                  required: false
                  description: The offset of the first policy group in the list to retrieve.
                  schema:
                    type: integer
                - name: sortby
                  in: query
                  required: false
                  description: Sort retrieved policy group by specified field. Default is policy group id
                  schema:
                    type: string
                - name: sortorder
                  in: query
                  required: false
                  description: Sort in either asc or desc order. The default is asc order
                  schema:
                    type: string
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/npa_policygroup_response"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/npa_policygroup_response_400"
        post:
            summary: Create a npa policy group
            description: Create a npa policy group
            x-speakeasy-entity-operation: NPAPolicyGroup#create
            operationId: createNPAPolicyGroups
            parameters:
                - name: silent
                  in: query
                  x-speakeasy-terraform-ignore: true
                  required: false
                  description: flag to skip output except status code
                  schema:
                    type: string
                    enum:
                        - '1'
                        - '0'
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/npa_policygroup_request"
                required: true
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        x-speakeasy-ignore: true
                                        type: string
                                        enum:
                                            - success
                                            - error
                                    data:
                                        type: array
                                        "$ref": "#/components/schemas/npa_policygroup_response_item"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/npa_policygroup_response_400"
    /policy/npa/policygroups/{id}:
        x-netskope-params:
            serviceConfig: provisioner-pycore-ws
            version: 2
            customerFacing: true
            apiGroup: npa_policygroup
        delete:
            summary: Delete a npa policy group
            description: Delete a npa policy group with group id
            x-speakeasy-entity-operation: NPAPolicyGroup#delete
            operationId: deleteNPAPolicyGroups
            parameters:
                - name: id
                  in: path
                  required: true
                  x-speakeasy-match: group_id
                  description: npa policy group id
                  schema:
                    type: string
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum:
                                            - success
                                            - error
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/npa_policygroup_response_400"
        patch:
            summary: Patch a npa policy group
            description: Patch a npa policy group based on group id
            operationId: patchNPAPolicyGroupsById
            parameters:
                - name: id
                  in: path
                  required: true
                  x-speakeasy-match: group_id
                  description: policy group rule id
                  schema:
                    type: string
                - name: silent
                  in: query
                  required: false
                  x-speakeasy-terraform-ignore: true
                  description: flag to skip output except status code
                  schema:
                    type: string
                    enum:
                        - '1'
                        - '0'
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/npa_policygroup_request"
                required: true
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        x-speakeasy-ignore: true
                                        type: string
                                        enum:
                                            - success
                                            - error
                                    data:
                                        type: array
                                        "$ref": "#/components/schemas/npa_policygroup_response_item"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/npa_policygroup_response_400"
        get:
            summary: Get a npa policy group
            description: Get a npa policy group based on group id
            x-speakeasy-entity-operation: NPAPolicyGroup#read
            operationId: getNPAPolicyGroupsById
            parameters:
                - name: id
                  in: path
                  required: true
                  description: npa policy group id
                  x-speakeasy-match: group_id
                  schema:
                    type: string
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        x-speakeasy-ignore: true
                                        type: string
                                        enum:
                                            - success
                                            - error
                                    data:
                                        type: array
                                        "$ref": "#/components/schemas/npa_policygroup_response_item"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/npa_policygroup_response_400"
    /steering/apps/private:
        x-netskope-params:
            serviceConfig: provisioner-pycore-ws
            version: 2
            customerFacing: true
            apiGroup: npa_apps_private
        get:
            summary: Get list of private applications
            description: Get list of private applications
            operationId: getNPAApps
            x-speakeasy-entity-operation: PrivateAppList#read
            parameters:
                - name: fields
                  in: query
                  required: false
                  description: Return values only from specified fields
                  schema:
                    type: string
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/private_apps_get_response"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/private_apps_response_400"
        post:
            summary: Create a private application
            description: Create a private application
            operationId: createNPAApps
            x-speakeasy-entity-operation: PrivateApp#create
            parameters:
                - name: silent
                  in: query
                  required: false
                  x-speakeasy-terraform-ignore: true
                  description: flag to skip output except status code
                  schema:
                    type: string
                    enum:
                        - '1'
                        - '0'
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/private_apps_request"
                required: true
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/private_apps_response"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/private_apps_response_400"
    /steering/apps/private/{private_app_id}:
        x-netskope-params:
            serviceConfig: provisioner-pycore-ws
            version: 2
            customerFacing: true
            apiGroup: npa_apps_private
        delete:
            summary: Delete a private application
            x-speakeasy-entity-operation: PrivateApp#delete
            description: Delete a private application based on private app id
            operationId: deleteNPAApps
            parameters:
                - name: private_app_id
                  in: path
                  required: true
                  x-speakeasy-match: id
                  description: private apps id
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        x-speakeasy-ignore: true
                                        type: string
                                        enum:
                                            - success
                                            - error
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/private_apps_response_400"
        put:
            summary: Update a private application
            x-speakeasy-entity-operation: PrivateApp#update
            description: Update a private application based on private app id
            operationId: replaceNPAAppsById
            parameters:
                - name: private_app_id
                  in: path
                  required: true
                  x-speakeasy-match: id
                  description: private apps id
                  schema:
                    type: integer
                    format: int32
                - name: silent
                  in: query
                  required: false
                  x-speakeasy-terraform-ignore: true
                  description: flag to skip output except status code
                  schema:
                    type: string
                    enum:
                        - '1'
                        - '0'
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/private_apps_put_request"
                required: true
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/private_apps_response"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/private_apps_response_400"
        patch:
            summary: Patch a private application
            description: Patch a private application based on private app id
            operationId: patchNPAAppsById
            parameters:
                - name: private_app_id
                  in: path
                  required: true
                  description: private apps id
                  schema:
                    type: integer
                    format: int32
                - name: silent
                  in: query
                  required: false
                  description: flag to skip output except status code
                  schema:
                    type: string
                    enum:
                        - '1'
                        - '0'
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/private_apps_put_request"
                required: true
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/private_apps_response"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/private_apps_response_400"
        get:
            summary: Get a private application
            description: Get a private application based on private app id
            operationId: getNPAAppsById
            parameters:
                - name: private_app_id
                  in: path
                  required: true
                  description: private apps id
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/private_apps_response"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/private_apps_response_400"
    /steering/apps/private/getpolicyinuse:
        x-netskope-params:
            serviceConfig: provisioner-pycore-ws
            version: 2
            customerFacing: true
            apiGroup: npa_apps_private
        post:
            summary: Retrieve number of policy in use for specified private apps
            description: Retrieve number of policy in use for specified private apps
            operationId: queryNPAPolicyInUse
            x-speakeasy-entity: PrivateAppPolicyUseCount#read
            requestBody:
                content:
                    application/json:
                        schema:
                            x-speakeasy-entity: PrivateAppPolicyUseCount
                            type: object
                            properties:
                                ids:
                                    type: array
                                    items:
                                        type: string
                required: true
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        x-speakeasy-ignore: true
                                        type: string
                                        enum:
                                            - success
                                            - not found
                                    data:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                token:
                                                    type: string
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/private_apps_response_400"
    /steering/apps/private/tags:
        x-netskope-params:
            serviceConfig: provisioner-pycore-ws
            version: 2
            customerFacing: true
            apiGroup: npa_private_tag
        post:
            summary: create tags for private apps
            description: Create tags for private apps
            operationId: createNPATags
            x-speakeasy-entity-operation: PrivateAppTag#create
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/tag_request"
                required: true
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/tag_response"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/tag_response_400"
        patch:
            summary: bulk update tags to associate with specified private apps
            description: Bulk update tags to associate with specified private apps
            operationId: patchNPATags
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/tag_request"
                required: true
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/tag_response"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/tag_response_400"
        delete:
            summary: bulk delete tags for specified private apps
            description: Bulk delete tags for specified private apps
            operationId: deleteNPATags
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/tag_request"
                required: true
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/tag_response"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/tag_response_400"
        get:
            summary: 'Get list of private app tags '
            description: Get list of private app tags
            operationId: getNPATags
            x-speakeasy-entity-operation: PrivateAppTagList#read
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/tag_response"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/tag_response_400"
    /steering/apps/private/tags/{tag_id}:
        x-netskope-params:
            serviceConfig: provisioner-pycore-ws
            version: 2
            customerFacing: true
            apiGroup: npa_private_tag
        get:
            summary: Get a private app tag based on tag id
            description: Get a private app tag based on tag id
            operationId: getNPATagsById
            parameters:
                - name: tag_id
                  in: path
                  required: true
                  description: tag id
                  schema:
                    type: integer
                    format: int32
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/tag_response"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/tag_response_400"
        put:
            summary: Update a private app tag based on tag id
            description: Update a private app tag based on tag id
            operationId: replaceNPATagsById
            parameters:
                - name: tag_id
                  in: path
                  required: true
                  description: tag id
                  schema:
                    type: integer
                    format: int32
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/tag_request"
                required: true
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/tag_response"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/tag_response_400"
        delete:
            summary: Delete a private app tag based on tag id
            description: Delete a private app tag based on tag id
            operationId: deleteNPATagsById
            parameters:
                - name: tag_id
                  in: path
                  required: true
                  description: tag id
                  schema:
                    type: integer
                    format: int32
            requestBody:
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/tag_request"
                required: true
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        x-speakeasy-ignore: true
                                        type: string
                                        enum:
                                            - success
                                            - error
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/tag_response_400"
    /steering/apps/private/tags/getpolicyinuse:
        x-netskope-params:
            serviceConfig: provisioner-pycore-ws
            version: 2
            customerFacing: true
            apiGroup: npa_private_tag
        post:
            summary: Retrieve number of policy in use for specified tags
            description: Retrieve number of policy in use for specified tags
            operationId: retrieveNPAPoliciesInUse
            x-speakeasy-entity-operation: PrivateAppTagPolicyUseList#get
            requestBody:
                content:
                    application/json:
                        schema:
                            x-speakeasy-entity: PrivateAppTagPolicyUseList
                            type: object
                            properties:
                                ids:
                                    type: array
                                    items:
                                        type: string
                required: true
            responses:
                '200':
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: object
                                x-speakeasy-entity: PrivateAppTagPolicyUseList
                                properties:
                                    status:
                                        x-speakeasy-ignore: true
                                        type: string
                                        enum:
                                            - success
                                            - not found
                                    data:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                token:
                                                    type: string
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/tag_response_400"
    /steering/gre/pops:
        x-netskope-params:
            serviceConfig: steering
            version: 2
            customerFacing: true
            apiGroup: gre
        get:
            summary: Get GRE points of presence(POPs) list
            description: API to get list of GRE POPs. You can filter by parameters. Use one parameter at a time. Only lat and long should be used together. All parameters are allowed to use offset and limit in combination.
            operationId: getGrePops
            parameters:
                - name: name
                  in: query
                  required: false
                  description: POP name
                  schema:
                    type: string
                - name: region
                  in: query
                  required: false
                  description: POP region, requires ISO-3166 region code and return POPs closest to value
                  schema:
                    type: string
                - name: country
                  in: query
                  required: false
                  description: POP country, requires ISO-3166 country code and return POPs closest to value
                  schema:
                    type: string
                - name: lat
                  in: query
                  required: false
                  description: POP latitude, lat requires long in combination and return POPs closest to value
                  schema:
                    type: string
                - name: long
                  in: query
                  required: false
                  description: POP longitude, long requires lat in combination and return POPs closest to value
                  schema:
                    type: string
                - name: ip
                  in: query
                  required: false
                  description: POP ipaddress, return POPs closest to value
                  schema:
                    type: string
                - name: fields
                  in: query
                  required: false
                  description: Provide comma separated list of fields to be displayed
                  schema:
                    type: string
                - name: offset
                  in: query
                  required: false
                  description: Offset used to shift the output window
                  schema:
                    type: integer
                    default: 0
                    minimum: 0
                - name: limit
                  in: query
                  required: false
                  description: Max number of POPs to retrieve
                  schema:
                    type: integer
                    default: 100
                    minimum: 0
                    maximum: !!float 100
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_pop_response_200"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_400"
                '403':
                    description: Access forbidden
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_403"
                '405':
                    description: Method not allowed
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_405"
                '429':
                    description: Too many requests
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_429"
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_500"
    /steering/gre/pops/{id}:
        x-netskope-params:
            serviceConfig: steering
            version: 2
            customerFacing: true
            apiGroup: gre
        get:
            summary: Get GRE point of presence(POP)
            description: API to get GRE POP using id.
            operationId: getGrePopsById
            parameters:
                - name: id
                  in: path
                  required: true
                  description: POP id
                  schema:
                    type: string
                - name: fields
                  in: query
                  required: false
                  description: Provide comma separated list of fields to be displayed
                  schema:
                    type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_pop_response_200"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_400"
                '403':
                    description: Access forbidden
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_403"
                '404':
                    description: Not found
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_404"
                '405':
                    description: Method not allowed
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_405"
                '429':
                    description: Too many requests
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_429"
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_500"
    /steering/gre/tunnels:
        x-netskope-params:
            serviceConfig: steering
            version: 2
            customerFacing: true
            apiGroup: gre
        get:
            summary: Get GRE tunnels list
            description: API to get list of GRE tunnels. You can filter by parameters. Use one of these parameters at a time. Only offset and limit are allowed in combination with other parameters
            operationId: getGreTunnels
            parameters:
                - name: site
                  in: query
                  required: false
                  description: GRE tunnel site
                  schema:
                    type: string
                - name: srcipidentity
                  in: query
                  required: false
                  description: GRE tunnel source ip identity
                  schema:
                    type: string
                - name: pop
                  in: query
                  required: false
                  description: GRE tunnel POP name
                  schema:
                    type: string
                - name: status
                  in: query
                  required: false
                  description: GRE tunnel status
                  schema:
                    type: string
                - name: sourcetype
                  in: query
                  required: false
                  description: GRE tunnel sourcetype
                  schema:
                    type: string
                - name: sortby
                  in: query
                  required: false
                  description: GRE tunnel sortby column
                  schema:
                    type: string
                - name: sortorder
                  in: query
                  required: false
                  description: GRE tunnel sortorder asc or desc. Default is asc
                  schema:
                    type: string
                - name: fields
                  in: query
                  required: false
                  description: Provide comma separated list of fields to be displayed
                  schema:
                    type: string
                - name: offset
                  in: query
                  required: false
                  description: Offset used to shift the window
                  schema:
                    type: integer
                    default: 0
                    minimum: 0
                - name: limit
                  in: query
                  required: false
                  description: Max number of records to retrieve
                  schema:
                    type: integer
                    default: 100
                    minimum: 0
                    maximum: !!float 100
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_tunnel_response_200"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_400"
                '403':
                    description: Access forbidden
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_403"
                '405':
                    description: Method not allowed
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_405"
                '429':
                    description: Too many requests
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_429"
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_500"
        post:
            summary: Create GRE tunnel
            description: API to create new GRE tunnel. You can pass json body with tunnel details.
            operationId: createGreTunnels
            requestBody:
                description: GRE tunnel object
                required: true
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/gre_tunnel_request_post"
            responses:
                '201':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_201"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_400"
                '403':
                    description: Access forbidden
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_403"
                '405':
                    description: Method not allowed
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_405"
                '409':
                    description: Already exists
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_409"
                '429':
                    description: Too many requests
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_429"
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_500"
    /steering/gre/tunnels/{id}:
        x-netskope-params:
            serviceConfig: steering
            version: 2
            customerFacing: true
            apiGroup: gre
        get:
            summary: Get GRE tunnel
            description: API to get GRE tunnel using id.
            operationId: getGreTunnelsById
            parameters:
                - name: id
                  in: path
                  required: true
                  description: GRE tunnel id
                  schema:
                    type: integer
                - name: fields
                  in: query
                  required: false
                  description: Provide comma separated list of fields to be displayed
                  schema:
                    type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_tunnel_response_200"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_400"
                '403':
                    description: Access forbidden
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_403"
                '404':
                    description: Not found
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_404"
                '405':
                    description: Method not allowed
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_405"
                '429':
                    description: Too many requests
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_429"
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_500"
        patch:
            summary: Update GRE tunnel
            description: API to update GRE tunnel using id. You can pass json body with fields that needs to be updated.
            operationId: patchGreTunnelsById
            parameters:
                - name: id
                  in: path
                  required: true
                  description: GRE tunnel id
                  schema:
                    type: integer
            requestBody:
                description: GRE tunnel object
                required: true
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/gre_tunnel_request_patch"
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_patch_response_200"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_400"
                '403':
                    description: Access forbidden
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_403"
                '404':
                    description: Not found
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_404"
                '405':
                    description: Method not allowed
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_405"
                '429':
                    description: Too many requests
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_429"
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_500"
        delete:
            summary: Delete GRE tunnel
            description: API to delete GRE tunnel using id
            operationId: deleteGreTunnels
            parameters:
                - name: id
                  in: path
                  required: true
                  description: GRE tunnel id
                  schema:
                    type: integer
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_200"
                '403':
                    description: Access forbidden
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_403"
                '404':
                    description: Not found
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_404"
                '405':
                    description: Method not allowed
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_405"
                '429':
                    description: Too many requests
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_429"
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/gre_response_500"
    /steering/ipsec/pops:
        x-netskope-params:
            serviceConfig: steering
            version: 2
            customerFacing: true
            apiGroup: ipsec
        get:
            summary: Get IPSec points of presence(POPs) list
            description: API to get list of IPSec POPs. You can filter by parameters. Use one of these parameters at a time. Only lat and long should be used together. All parameters are allowed to use offset and limit in combination.
            operationId: getIpsecPops
            parameters:
                - name: name
                  in: query
                  required: false
                  description: POP name
                  schema:
                    type: string
                - name: region
                  in: query
                  required: false
                  description: POP region, requires ISO-3166 region code and return POPs closest to value
                  schema:
                    type: string
                - name: country
                  in: query
                  required: false
                  description: POP country, requires ISO-3166 country code and return POPs closest to value
                  schema:
                    type: string
                - name: lat
                  in: query
                  required: false
                  description: POP latitude, lat requires long in combination and return POPs closest to value
                  schema:
                    type: string
                - name: long
                  in: query
                  required: false
                  description: POP longitude, long requires lat in combination and return POPs closest to value
                  schema:
                    type: string
                - name: ip
                  in: query
                  required: false
                  description: POP ipaddress, return POPs closest to value
                  schema:
                    type: string
                - name: capabilities
                  in: query
                  required: false
                  description: POP capabilities, return POPs capabilities
                  schema:
                    type: string
                - name: fields
                  in: query
                  required: false
                  description: Provide comma separated list of fields to be displayed
                  schema:
                    type: string
                - name: offset
                  in: query
                  required: false
                  description: Offset used to shift the output window
                  schema:
                    type: integer
                    default: 0
                    minimum: 0
                - name: limit
                  in: query
                  required: false
                  description: Max number of POPs to retrieve
                  schema:
                    type: integer
                    default: 100
                    minimum: 0
                    maximum: !!float 100
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_pop_response_200"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_400"
                '403':
                    description: Access forbidden
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_403"
                '405':
                    description: Method not allowed
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_405"
                '429':
                    description: Too many requests
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_429"
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_500"
    /steering/ipsec/pops/{id}:
        x-netskope-params:
            serviceConfig: steering
            version: 2
            customerFacing: true
            apiGroup: ipsec
        get:
            summary: Get IPSec point of presence(POP)
            description: API to get IPSec POP using id.
            operationId: getIpsecPopsById
            parameters:
                - name: id
                  in: path
                  required: true
                  description: POP id
                  schema:
                    type: string
                - name: fields
                  in: query
                  required: false
                  description: Provide comma separated list of fields to be displayed
                  schema:
                    type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_pop_response_200"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_400"
                '403':
                    description: Access forbidden
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_403"
                '404':
                    description: Not found
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_404"
                '405':
                    description: Method not allowed
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_405"
                '429':
                    description: Too many requests
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_429"
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_500"
    /steering/ipsec/tunnels:
        x-netskope-params:
            serviceConfig: steering
            version: 2
            customerFacing: true
            apiGroup: ipsec
        get:
            summary: Get IPSec tunnels list
            description: API to get list of IPSec tunnels. You can filter by parameters. Use one of these parameters at a time. Only offset and limit are allowed in combination with other parameters
            operationId: getIpsecTunnels
            parameters:
                - name: site
                  in: query
                  required: false
                  description: IPSec tunnel site
                  schema:
                    type: string
                - name: srcipidentity
                  in: query
                  required: false
                  description: IPSec tunnel source ip identity
                  schema:
                    type: string
                - name: srcidentity
                  in: query
                  required: false
                  description: IPSec tunnel source identity
                  schema:
                    type: string
                - name: pop
                  in: query
                  required: false
                  description: IPSec tunnel POP name
                  schema:
                    type: string
                - name: status
                  in: query
                  required: false
                  description: IPSec tunnel status
                  schema:
                    type: string
                - name: sourcetype
                  in: query
                  required: false
                  description: IPSec tunnel sourcetype
                  schema:
                    type: string
                - name: sortby
                  in: query
                  required: false
                  description: IPSec tunnel sortby column
                  schema:
                    type: string
                - name: sortorder
                  in: query
                  required: false
                  description: IPSec tunnel sortorder asc or desc. Default is asc
                  schema:
                    type: string
                - name: fields
                  in: query
                  required: false
                  description: Provide comma separated list of fields to be displayed
                  schema:
                    type: string
                - name: offset
                  in: query
                  required: false
                  description: Offset used to shift the window
                  schema:
                    type: integer
                    default: 0
                    minimum: 0
                - name: limit
                  in: query
                  required: false
                  description: Max number of records to retrieve
                  schema:
                    type: integer
                    default: 100
                    minimum: 0
                    maximum: !!float 100
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_tunnel_response_200"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_400"
                '403':
                    description: Access forbidden
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_403"
                '405':
                    description: Method not allowed
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_405"
                '429':
                    description: Too many requests
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_429"
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_500"
        post:
            summary: Create IPSec tunnel
            description: API to create new IPSec tunnel. You can pass json body with tunnel details.
            operationId: createIpsecTunnels
            requestBody:
                description: IPSec tunnel object
                required: true
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/ipsec_tunnel_request_post"
            responses:
                '201':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_201"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_400"
                '403':
                    description: Access forbidden
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_403"
                '405':
                    description: Method not allowed
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_405"
                '409':
                    description: Already exists
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_409"
                '429':
                    description: Too many requests
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_429"
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_500"
    /steering/ipsec/tunnels/{id}:
        x-netskope-params:
            serviceConfig: steering
            version: 2
            customerFacing: true
            apiGroup: ipsec
        get:
            summary: Get IPSec tunnel
            description: API to get IPSec tunnel using id.
            operationId: getIpsecTunnelsById
            parameters:
                - name: id
                  in: path
                  required: true
                  description: IPSec tunnel id
                  schema:
                    type: integer
                - name: fields
                  in: query
                  required: false
                  description: Provide comma separated list of fields to be displayed
                  schema:
                    type: string
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_tunnel_response_200"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_400"
                '403':
                    description: Access forbidden
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_403"
                '404':
                    description: Not found
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_404"
                '405':
                    description: Method not allowed
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_405"
                '429':
                    description: Too many requests
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_429"
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_500"
        patch:
            summary: Update IPSec tunnel
            description: API to update IPSec tunnel using id. You can pass json body with fields that needs to be updated.
            operationId: patchIpsecTunnelsById
            parameters:
                - name: id
                  in: path
                  required: true
                  description: IPSec tunnel id
                  schema:
                    type: integer
            requestBody:
                description: IPSec tunnel object
                required: true
                content:
                    application/json:
                        schema:
                            "$ref": "#/components/schemas/ipsec_tunnel_request_patch"
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_patch_response_200"
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_400"
                '403':
                    description: Access forbidden
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_403"
                '404':
                    description: Not found
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_404"
                '405':
                    description: Method not allowed
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_405"
                '429':
                    description: Too many requests
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_429"
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_500"
        delete:
            summary: Delete IPSec tunnel
            description: API to delete IPSec tunnel using id
            operationId: deleteIpsecTunnels
            parameters:
                - name: id
                  in: path
                  required: true
                  description: IPSec tunnel id
                  schema:
                    type: integer
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_200"
                '403':
                    description: Access forbidden
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_403"
                '404':
                    description: Not found
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_404"
                '405':
                    description: Method not allowed
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_405"
                '429':
                    description: Too many requests
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_429"
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                "$ref": "#/components/schemas/ipsec_response_500"
    /Users:
        x-netskope-params:
            serviceConfig: nsscimserver
            version: 2
            customerFacing: true
            apiGroup: scim-apis
        post:
            tags:
                - scim_users
            summary: Creation of a SCIM User
            x-speakeasy-entity-operation: SCIMUsers#create
            description: Creation of a SCIM User.
            operationId: createSCIMUsers
            requestBody:
                description: user to add
                content:
                    schema: {}
            responses:
                "201":
                    description: Successfully added the User.
                    content:
                        schema: {}
                "400":
                    description: 'Failed '
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum:
                                            - "400"
                                            - failed
                                        example: "400"
                                    description:
                                        type: string
                                        example: Invalid request / Primary Email not provided / UserName not provided / Not a valid json format / Mandatory fields are missing
                                    schemas:
                                        type: array
                                        description: schema of the resource
                                        items:
                                            type: string
                                        example:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                "403":
                    description: Not authorized to execte the specific API.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: You cannot consume this service.
                "501":
                    description: Internal error Failed
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum:
                                            - failed
                                            - "501"
                                        example: 501/failed
                                    schemas:
                                        type: string
                                        example: '["urn:ietf:params:scim:api:messages:2.0:Error"]'
                                    detail:
                                        type: string
                                        example: Internal server error.
        get:
            tags:
                - scim_users
            summary: Get Scim Users
            description: Query for all the SCIM Users or filtered users.
            x-speakeasy-entity-operations: SCIMUsers#get
            operationId: getSCIMUsers
            parameters:
                - name: filter
                  required: false
                  in: query
                  description: 'key eq value pair like userName(Nothing but UPN), externalId(scim_externalid) and pass the value to be searched for the key passed.  Example: userName eq "upn1" OR externalId eq "User-Ext_id" '
                  schema:
                    type: string
                - name: startIndex
                  required: false
                  in: query
                  schema:
                    description: StartIndex & count should be passed together
                    type: integer
                - name: count
                  required: false
                  in: query
                  schema:
                    description: StartIndex & count should be passed together
                    type: integer
            responses:
                "200":
                    description: Successfully added/overwritten the User.
                    content:
                        schema: {}
                "400":
                    description: 'Failed '
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum:
                                            - "400"
                                            - failed
                                        example: "400"
                                    description:
                                        type: string
                                        example: Invalid request
                                    schemas:
                                        type: array
                                        description: schema of the resource
                                        items:
                                            type: string
                                        example:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                "403":
                    description: Not authorized to execte the specific API.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: You cannot consume this service.
                "501":
                    description: Internal error Failed
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum:
                                            - failed
                                            - "501"
                                        example: 501/failed
                                    schemas:
                                        type: string
                                        example: '["urn:ietf:params:scim:api:messages:2.0:Error"]'
                                    detail:
                                        type: string
                                        example: Internal error.
    /Users/{id}:
        x-netskope-params:
            serviceConfig: nsscimserver
            version: 2
            customerFacing: true
            apiGroup: scim-apis
        put:
            tags:
                - scim_users
            summary: Replace existing SCIM record for {id}
            description: Replace existing SCIM record for {id}
            x-speakeasy-ignore: true
            operationId: putSCIMUsersById
            parameters:
                - name: id
                  description: SCIM Used ID should be specified
                  required: true
                  in: path
                  schema:
                    type: string
                    example: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
            requestBody:
                description: user to update
                content:
                    schema: {}
            responses:
                "200":
                    description: Successfully updated the User.
                    content:
                        schema: {}
                "400":
                    description: 'Failed '
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum:
                                            - "400"
                                            - failed
                                        example: "400"
                                    description:
                                        type: string
                                        example: Invalid request / Primary Email not provided / UserName not provided / Not a valid json format / Mandatory fields are missing
                                    schemas:
                                        type: array
                                        description: schema of the resource
                                        items:
                                            type: string
                                        example:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                "403":
                    description: Not authorized to execte the specific API.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: You cannot consume this service.
                "501":
                    description: Internal error Failed
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum:
                                            - failed
                                            - "501"
                                        example: 501/failed
                                    schemas:
                                        type: string
                                        example: '["urn:ietf:params:scim:api:messages:2.0:Error"]'
                                    detail:
                                        type: string
                                        example: Internal error.
        get:
            tags:
                - scim_users
            summary: Get the Scim User
            description: Getting the user with specific id..
            operationId: getSCIMUsersById
            x-speakeasy-entity-operation: SCIMUsers#get
            parameters:
                - name: id
                  description: SCIM Used ID should be specified
                  required: true
                  in: path
                  schema:
                    type: string
                    example: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
            responses:
                "200":
                    description: Successfully deleted the User.
                    content:
                        schema: {}
                "403":
                    description: Not authorized to execte the specific API.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: You cannot consume this service.
                "501":
                    description: Internal error Failed
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum:
                                            - failed
                                            - "501"
                                        example: 501/failed
                                    schemas:
                                        type: string
                                        example: '["urn:ietf:params:scim:api:messages:2.0:Error"]'
                                    detail:
                                        type: string
                                        example: Internal error.
        patch:
            tags:
                - scim_users
            summary: Update existing SCIM User record by {id}
            description: Update existing SCIM User record by {id}
            x-speakeasy-entity-operation: SCIMUsers#update
            operationId: updateSCIMUsersById
            parameters:
                - name: id
                  description: SCIM Used ID should be specified
                  required: true
                  in: path
                  schema:
                    type: string
                    example: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
            requestBody:
                description: attributes to be modified.
                content:
                    schema: {}
            responses:
                "204":
                    description: Empty response.
                "400":
                    description: 'Failed '
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum:
                                            - "400"
                                            - failed
                                        example: "400"
                                    description:
                                        type: string
                                        example: Invalid request / Primary Email not provided / UserName not provided / Not a valid json format / Mandatory fields are missing
                                    schemas:
                                        type: array
                                        description: schema of the resource
                                        items:
                                            type: string
                                        example:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                "403":
                    description: Not authorized to execte the specific API.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: You cannot consume this service.
                "501":
                    description: Internal error Failed
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum:
                                            - failed
                                            - "501"
                                        example: 501/failed
                                    schemas:
                                        type: string
                                        example: '["urn:ietf:params:scim:api:messages:2.0:Error"]'
                                    detail:
                                        type: string
                                        example: Internal error
        delete:
            tags:
                - scim_users
            summary: Delete SCIM User record by {id}
            description: Delete SCIM User record by {id}.
            x-speakeasy-entity-operation: SCIMUsers#delete
            operationId: deleteSCIMUsers
            parameters:
                - name: id
                  description: SCIM User ID required
                  required: true
                  in: path
                  schema:
                    type: string
                    example: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
            responses:
                "204":
                    description: Empty response, Successfully deleted the User.
                "400":
                    description: 'Failed '
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum:
                                            - "400"
                                            - failed
                                        example: "400"
                                    description:
                                        type: string
                                        example: Invalid request
                                    schemas:
                                        type: array
                                        description: schema of the resource
                                        items:
                                            type: string
                                        example:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                "403":
                    description: Not authorized to execte the specific API.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: You cannot consume this service.
                "501":
                    description: Internal error Failed
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum:
                                            - failed
                                            - "501"
                                        example: 501/failed
                                    schemas:
                                        type: string
                                        example: '["urn:ietf:params:scim:api:messages:2.0:Error"]'
                                    detail:
                                        type: string
                                        example: Internal error
    /Groups:
        x-netskope-params:
            serviceConfig: nsscimserver
            version: 2
            customerFacing: true
            apiGroup: scim-apis
        post:
            tags:
                - scim_groups
            summary: Create new SCIM Group
            description: Create new SCIM Group
            x-speakeasy-entity-operation: SCIMGroups#create
            operationId: createSCIMGroups
            requestBody:
                description: group to add
                content:
                    schema: {}
            responses:
                "201":
                    description: Successfully added the User.
                    content:
                        schema: {}
                "400":
                    description: 'Failed '
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum:
                                            - "400"
                                            - failed
                                        example: "400"
                                    description:
                                        type: string
                                        example: Invalid request, Mandatory fields are missing
                                    schemas:
                                        type: array
                                        description: schema of the resource
                                        items:
                                            type: string
                                        example:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                "403":
                    description: Not authorized to execte the specific API.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: You cannot consume this service.
                "501":
                    description: Internal error Failed
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum:
                                            - failed
                                            - "501"
                                        example: 501/failed
                                    schemas:
                                        type: string
                                        example: '["urn:ietf:params:scim:api:messages:2.0:Error"]'
                                    detail:
                                        type: string
                                        example: Internal server error.
        get:
            tags:
                - scim_groups
            summary: Get SCIM Groups
            description: Query for all the SCIM groups or filtered groups.
            x-speakeasy-entity-operation: SCIMGroups#get
            operationId: getSCIMGroups
            parameters:
                - name: filter
                  required: false
                  in: query
                  description: 'key eq value pair like - displayName/externalId and pass the value to be searched for the key passed.  Example: displayName eq "sample_Group1"  '
                  schema:
                    type: string
                - name: startIndex
                  required: false
                  in: query
                  schema:
                    description: StartIndex & count should be passed together
                    type: integer
                - name: count
                  required: false
                  in: query
                  schema:
                    description: StartIndex & count should be passed together
                    type: integer
            responses:
                "200":
                    description: Successfull.
                    content:
                        schema: {}
                "400":
                    description: 'Failed '
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum:
                                            - "400"
                                            - failed
                                        example: "400"
                                    description:
                                        type: string
                                        example: Invalid request
                                    schemas:
                                        type: array
                                        description: schema of the resource
                                        items:
                                            type: string
                                        example:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                "403":
                    description: Not authorized to execte the specific API.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: You cannot consume this service.
                "501":
                    description: Internal error Failed
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum:
                                            - failed
                                            - "501"
                                        example: 501/failed
                                    schemas:
                                        type: string
                                        example: '["urn:ietf:params:scim:api:messages:2.0:Error"]'
                                    detail:
                                        type: string
                                        example: Internal error.
    /Groups/{id}:
        x-netskope-params:
            serviceConfig: nsscimserver
            version: 2
            customerFacing: true
            apiGroup: scim-apis
        put:
            tags:
                - scim_groups
            summary: Replace existing SCIM Group for {id}
            description: Replace existing SCIM Group for {id}
            x-speakeasy-ignore: true
            operationId: putSCIMGroupsById
            parameters:
                - name: id
                  description: SCIM Used ID should be specified
                  required: true
                  in: path
                  schema:
                    type: string
                    example: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
            requestBody:
                description: group to update
                content:
                    schema: {}
            responses:
                "200":
                    description: Successfully updated the User.
                    content:
                        schema: {}
                "400":
                    description: 'Failed '
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum:
                                            - "400"
                                            - failed
                                        example: "400"
                                    description:
                                        type: string
                                        example: Invalid request.
                                    schemas:
                                        type: array
                                        description: schema of the resource
                                        items:
                                            type: string
                                        example:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                "403":
                    description: Not authorized to execte the specific API.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: You cannot consume this service.
                "501":
                    description: Internal error Failed
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum:
                                            - failed
                                            - "501"
                                        example: 501/failed
                                    schemas:
                                        type: string
                                        example: '["urn:ietf:params:scim:api:messages:2.0:Error"]'
                                    detail:
                                        type: string
                                        example: Internal error.
        get:
            tags:
                - scim_groups
            summary: Get SCIM Group by {id}
            description: Get SCIM Group by {id}
            x-speakeasy-entity-operation: SCIMGroupsById#get
            operationId: getSCIMGroupsById
            parameters:
                - name: id
                  description: SCIM Group ID required.
                  required: true
                  in: path
                  schema:
                    type: string
                    example: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
            responses:
                "200":
                    description: Successfully deleted the User.
                    content:
                        schema: {}
                "403":
                    description: Not authorized to execte the specific API.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: You cannot consume this service.
                "501":
                    description: Internal error Failed
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum:
                                            - failed
                                            - "501"
                                        example: 501/failed
                                    schemas:
                                        type: string
                                        example: '["urn:ietf:params:scim:api:messages:2.0:Error"]'
                                    detail:
                                        type: string
                                        example: Internal error.
        patch:
            tags:
                - scim_groups
            summary: Update existing SCIM Group record by {id}.
            description: Updating attribute in existing group with the id.
            x-speakeasy-entity-operation: SCIMGroups#update
            operationId: patchSCIMUsersById
            parameters:
                - name: id
                  description: SCIM Used ID should be specified
                  required: true
                  in: path
                  schema:
                    type: string
                    example: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
            requestBody:
                description: attributed to be added.
                content:
                    schema: {}
            responses:
                "204":
                    description: Empty response.
                "400":
                    description: 'Failed '
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum:
                                            - "400"
                                            - failed
                                        example: "400"
                                    description:
                                        type: string
                                        example: Invalid request / Primary Email not provided / UserName not provided / Not a valid json format / Mandatory fields are missing
                                    schemas:
                                        type: array
                                        description: schema of the resource
                                        items:
                                            type: string
                                        example:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                "403":
                    description: Not authorized to execte the specific API.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: You cannot consume this service.
                "501":
                    description: Internal error Failed
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum:
                                            - failed
                                            - "501"
                                        example: 501/failed
                                    schemas:
                                        type: string
                                        example: '["urn:ietf:params:scim:api:messages:2.0:Error"]'
                                    detail:
                                        type: string
                                        example: Internal error.
        delete:
            tags:
                - scim_groups
            summary: Delete SCIM Group record by {id}
            description: Delete SCIM Group record by {id}
            x-speakeasy-entity-operation: SCIMGroups#delete
            operationId: deleteSCIMUsersById
            parameters:
                - name: id
                  description: SCIM Group ID required
                  required: true
                  in: path
                  schema:
                    type: string
                    example: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
            responses:
                "204":
                    description: Empty response, Successfully deleted Group
                "400":
                    description: 'Failed '
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum:
                                            - "400"
                                            - failed
                                        example: "400"
                                    description:
                                        type: string
                                        example: Invalid request
                                    schemas:
                                        type: array
                                        description: schema of the resource
                                        items:
                                            type: string
                                        example:
                                            - urn:ietf:params:scim:api:messages:2.0:Error
                "403":
                    description: Not authorized to execte the specific API.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: You cannot consume this service.
                "501":
                    description: Internal error Failed
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        enum:
                                            - failed
                                            - "501"
                                        example: 501/failed
                                    schemas:
                                        type: string
                                        example: '["urn:ietf:params:scim:api:messages:2.0:Error"]'
                                    detail:
                                        type: string
                                        example: Internal error.
tags:
    - name: scim_users
      description: CRUD for SCIM Users Infrormation.
    - name: scim_groups
      description: CRUD for SCIM Groups Infrormation
